<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[YuheiNakasaka's diary]]></title><description><![CDATA[YuheiNakasakaの日記]]></description><link>https://yuheinakasaka.github.io/gialog-diary/</link><generator>YuheiNakasaka/gialog-diary</generator><lastBuildDate>Sun, 05 Feb 2023 06:52:07 GMT</lastBuildDate><atom:link href="https://yuheinakasaka.github.io/gialog-diary/feed.xml" rel="self" type="application/rss+xml"/><item><title><![CDATA[202カリー堂の2月の新作。生チョコバスクチーズケーキ。 ]]></title><description><![CDATA[YuheiNakasaka's diary on 2023-02-05]]></description><link>https://yuheinakasaka.github.io/gialog-diary/articles/39</link><guid isPermaLink="true">https://yuheinakasaka.github.io/gialog-diary/articles/39</guid><pubDate>Sun, 05 Feb 2023 06:50:53 GMT</pubDate><content:encoded><![CDATA[<p><img src="https://user-images.githubusercontent.com/1421093/216805461-184d6e94-fbf8-4f03-b8c8-868e80d79766.JPG" alt="IMG_3948_res"></p>
<p>2月の新作はバレンタインデー特集の生チョコバスクチーズケーキ。普段は2ヶ月くらい食べられる期間があるが、今回はバレンタインデー特集ということで2/2から2/14の2週間のみの提供となっている。</p>
<p>今回はバレンタインというわかりやすい引きがあるのでいつもより人気なようで行列も長め。初日は昼過ぎに完売していた。今日はいつもより早めの10:30くらいに店舗に着いてすぐ注文した。</p>
<p>味は想像通り生チョコたっぷりのバスクチーズケーキという感じ。ガトーショコラよりも粘性があり、チーズ風味もほんのり香る。チョコソースもふんだんにかけられておりチョコ好きにはたまらないという贅沢な味。チョコたっぷりなので甘すぎるのでは？と思われるかもしれないが酸味の強めな生クリームとイチゴが程よくアクセントになっていて飽きない。バスクチーズケーキも好き、チョコも好き、という人は食べて絶対損はしないだろう。</p>
<p>個人的にはやはり11月の黒ゴマバスクチーズケーキや抹茶バスクチーズケーキがダントツで好きなのでそれには及ばないが、定番のザ・ケーキという風体のケーキが好きな人ならこちらの方が好きかもしれない。</p>
<p>2/14までの提供なので食べたい人はお早めに。</p>]]></content:encoded></item><item><title><![CDATA[202カリー堂の12月の新作。ピスタチオバスクチーズケーキ。]]></title><description><![CDATA[YuheiNakasaka's diary on 2023-02-05]]></description><link>https://yuheinakasaka.github.io/gialog-diary/articles/38</link><guid isPermaLink="true">https://yuheinakasaka.github.io/gialog-diary/articles/38</guid><pubDate>Sun, 05 Feb 2023 06:38:53 GMT</pubDate><content:encoded><![CDATA[<p><img src="https://user-images.githubusercontent.com/1421093/208240728-326abfc0-9866-4ece-ab53-3d86558ac382.JPG" alt="IMG_3752_res"></p>
<p>ピスタチオを使ったバスクチーズケーキ。チーズケーキ本体とピスタチオクリームはなめらかで渋い味わい。これ単体で食べると和菓子に近いかもしれないくらいだ。しかし周りのラズベリーソースを合わせることで視界は一変する。ラズベリーソースと合わせた瞬間に銀座でお茶するマダムから原宿でクレープを頬張る大学生くらい味が変わる。時期的にもちょうどクリスマスケーキの位置付けだからこのくらい浮き足立った味でピッタリだと思う。毎度思うがここのチーズケーキは本体・クリーム・ソースを合わせた時の調和に力を入れており、それらを合わせた時に完成するようにできている。今回も本体だけとかクリームだけで食べた時はやや弱いか？と感じたが、全て合わせた時にこれ！！となった。この辺はいつも作り込まれていて感心する。とはいえやはり10月のゴマや今や定番メニューとなった抹茶と比べると劣る。</p>]]></content:encoded></item><item><title><![CDATA[202カリー堂のバスクチーズケーキ 11月の新作。カボチャバスクチーズケーキ。]]></title><description><![CDATA[YuheiNakasaka's diary on 2023-02-05]]></description><link>https://yuheinakasaka.github.io/gialog-diary/articles/37</link><guid isPermaLink="true">https://yuheinakasaka.github.io/gialog-diary/articles/37</guid><pubDate>Sun, 05 Feb 2023 06:38:12 GMT</pubDate><content:encoded><![CDATA[<p><img src="https://user-images.githubusercontent.com/1421093/199662238-97cf5090-1879-41db-96a2-e545f05cc015.JPG" alt="IMG_3560_res"></p>
<p>カボチャを使った秋らしいバスクチーズケーキ。控えめなカボチャクリームの甘さが優しくて美味しい。煮込んだカボチャペーストみたいなものが添えられておりカボチャクリームを絡めてチーズケーキを一緒に食べると甘さとしょっぱさで調和を楽しめる。周りに塗されているナッツやカボチャの種もおしゃれでケーキと絡めて食べると香ばしくて良い。とはいえ抹茶やゴマバスクチーズケーキほどの出来栄えかと言われるとそこまでの驚きはない。季節感はあって良いと思うが。そういえば+50円支払うとメイプルシロップが追加できる。これは正直あってもなくてもいいなという代物だが、それはそれとしてこのメイプルシロップは単体で美味しかったので普通にワッフルなどにつけて食べたいと思った。</p>]]></content:encoded></item><item><title><![CDATA[202カリー堂のバスクチーズケーキ通常メニュー。プレーンバスクチーズケーキ。]]></title><description><![CDATA[YuheiNakasaka's diary on 2023-02-05]]></description><link>https://yuheinakasaka.github.io/gialog-diary/articles/36</link><guid isPermaLink="true">https://yuheinakasaka.github.io/gialog-diary/articles/36</guid><pubDate>Sun, 05 Feb 2023 06:37:41 GMT</pubDate><content:encoded><![CDATA[<p><img src="https://user-images.githubusercontent.com/1421093/193485285-c1b9e30c-b035-4d50-b50f-1a8fb2a12cf0.JPG" alt="IMG_3465_res"></p>
<p>変わり種ばかり食べていたのでプレーンバスクチーズケーキは初めてだった。クリームがミルク風味で少し甘いがケーキ自体はやや酸味があるため合わせると程よい味わいになる。なかなか美味しい。コーヒーに合いそうな予感がした。シンプルなバスクチーズケーキを食べたいときは良さそう。</p>]]></content:encoded></item><item><title><![CDATA[202カリー堂のバスクチーズケーキ 9月/10月の新作。ゴマバスクチーズケーキ。]]></title><description><![CDATA[YuheiNakasaka's diary on 2023-02-05]]></description><link>https://yuheinakasaka.github.io/gialog-diary/articles/35</link><guid isPermaLink="true">https://yuheinakasaka.github.io/gialog-diary/articles/35</guid><pubDate>Sun, 05 Feb 2023 06:36:53 GMT</pubDate><content:encoded><![CDATA[<p><img src="https://user-images.githubusercontent.com/1421093/188592416-52c944d8-d57b-4d3f-9559-d044c8e380c7.JPG" alt="IMG_3393_re"></p>
<p>抹茶とほぼ同等レベルで美味しい。黒胡麻ソースとクリームと合わせて食べないとだめ。それぞれ単体だとそれほどでもないが合わせるとめちゃくちゃ旨くなる。</p>]]></content:encoded></item><item><title><![CDATA[202カリー堂のバスクチーズケーキ 7,8月の新作。チョコミントバスクチーズケーキ。]]></title><description><![CDATA[YuheiNakasaka's diary on 2023-02-05]]></description><link>https://yuheinakasaka.github.io/gialog-diary/articles/34</link><guid isPermaLink="true">https://yuheinakasaka.github.io/gialog-diary/articles/34</guid><pubDate>Sun, 05 Feb 2023 06:35:56 GMT</pubDate><content:encoded><![CDATA[<p><img src="https://user-images.githubusercontent.com/1421093/188592406-4a2b54ee-7f97-4b02-80f4-173de1fccd87.JPG" alt="IMG_3271_re"></p>
<p>美味しいが抹茶には遠く及ばない。チョコミントが好きという人にはハマるかも。</p>]]></content:encoded></item><item><title><![CDATA[ナッシュを解約してヨシケイの夕食ネットに変えた]]></title><description><![CDATA[YuheiNakasaka's diary on 2023-02-02]]></description><link>https://yuheinakasaka.github.io/gialog-diary/articles/33</link><guid isPermaLink="true">https://yuheinakasaka.github.io/gialog-diary/articles/33</guid><pubDate>Thu, 02 Feb 2023 02:51:07 GMT</pubDate><content:encoded><![CDATA[<p>1月の頭くらいにナッシュを解約した。詳細は<a href="https://yuheinakasaka.github.io/gialog-diary/articles/30">ナッシュを解約して個人情報を全て削除してもらった</a>に書いてある。</p>
<p>現在はフルリモートで働いており今までは平日の昼食は全てナッシュを食べていた。ご飯は家で炊いたもの、おかずはナッシュという感じ。この生活は1年以上続いていたわけだが、そのおかず部分がなくなってしまったので新たな移転先を考えなければならなくなった。</p>
<p>自分が宅食に求めているのは下記。</p>
<ul>
<li>それなりの味</li>
<li>それなりのボリューム</li>
<li>それなりの値段</li>
</ul>
<p>過去いくつかtrialしてきた感じからいうと味に関しては正直どの宅食もそれなりに美味い。少なくともコンビニの濃すぎる味付けが苦手な自分にとっては十分マシ。</p>
<p>ボリュームはどの宅食もヘルシー指向を掲げていたり高齢者向けのものが多いのでどれもやや少なめ。とはいえ自分の場合は身長173体重が53~54kg前後の痩せ型で1日米1合食えれば十分なのでどこも量で気になったことはない。</p>
<p>値段に関しては500~800円くらいが相場なので決して安いわけではない。外食よりは安く、コンビニ弁当と変わらないくらいの値段。</p>
<p>宅食は安いというイメージの人も中にはいるかもしれないがそれは違って、基本はヘルシーなものを美味しく安定して家で手軽に食えるという点がメリット。ヘルシーなんて興味ないという人はそもそも宅食は使ってもあんまりメリットないと思う。</p>
<p>今回は上記3点を軸に宅食比較サイトなどを漁っていたところヨシケイの「<a href="https://www.you-shoku.net/">夕食ネット</a>」が目に止まった。</p>
<img width="747" alt="スクリーンショット 2023-02-02 11 44 49" src="https://user-images.githubusercontent.com/1421093/216218570-df45ed5e-f87d-4bd9-8f93-6e8271b5e69d.png">
<p>夕食ネットの何がすごいかというと値段の１点に尽きる。上述した通り他の宅食は1食500~800円くらいだが、夕食ネットのシンプルミールは配送料込みで1食380円だ。コンビニ弁当と比較しても安い。学食みたいな値段。</p>
<p>経験的に宅食はどこも味もボリュームも変わらないと知っていたので値段が飛び抜けて安い夕食ネットは気になる。とりあえず夕食ネットは初回注文は半額で食べられるということだったのですぐ会員登録し注文した。</p>
<p>注文画面で驚いたのは当日の朝5時までの注文ならその日の夕方に届けてくれるところ。ヨシケイは歴史も古く、コープみたいなもんで独自の配送網を持っているからなせる技っぽい。その辺は新興の宅食ベンチャーとは訳が違う。</p>
<p>早速届いた夕食ネットの惣菜を食べてみたところ味はやはり予想通り、それなりに美味い。実家で食った記憶のあるような味がする。味としてはこれで十分。</p>
<p>問題はボリューム。ナッシュと比較すると副菜の量はそれほど変わらないとはいえ、メインの量は流石に少ない。惣菜全体のカロリーで比較すると計100kcal位は少なそう。高齢者や自分くらいの食の細さの人にはちょうど良いかもしれないが、普段外食ばかりの人にとってはだいぶ物足りないだろう。</p>
<p>ただ値段のことを考えると悪くはない。この味で自分はギリギリ足りる量だし選択肢としてはアリ。</p>
<p>という感じで吟味した結果、やはり昨今の経済情勢を踏まえるとこの値段は流石に魅力的すぎるのでヨシケイの夕食ネットを使っていくことにした。</p>
<p>とりあえず1ヶ月弱継続してみているが特に問題はない。ボリューム問題については、これに1品足すみたいな運用もありかもしれないなとは思った。たとえば自分はキムチが好きなので、デカいキムチパックが常備してあるのだが、これを夕食ネットの惣菜に足すとか、納豆を足すとか。数十円プラスにはなるが、それでもまだまだ既存の宅食より安いのでアリ。</p>
<p>問題というか微妙な点についてもいくつか書いておく。</p>
<p>まず<strong>ヨシケイの夕食ネットはヨシケイではないということ</strong>。</p>
<p>自分がこの値段で食べられている惣菜は<strong>夕食ネット</strong>の<strong>シンプルミール</strong>というやつ。<a href="https://yoshikei-dvlp.co.jp/">ヨシケイ</a>の方にあるミールキットなどではない。そもそもこのサイトから夕食ネットのシンプルミールは注文できないし、このサイトから会員登録してもいけない。夕食ネットは<a href="https://www.you-shoku.net/">https://www.you-shoku.net/</a>のサイトから会員登録を行う必要がある。同じヨシケイ系列だが会員情報は別。割と罠なので注意。</p>
<p>あとは<strong>配送設定で玄関前に置き配できるというオプションがあるのだが全然置き配してくれない</strong>。</p>
<p>普通にピンポンと呼び鈴が押されて惣菜を手渡しされる。おそらく配送時に発泡スチロールの箱に入れて配送されるのだが、ヨシケイはその箱をまた各家へ回収しにいっているのだ。で、その配達員たちは玄関前に置き配すると配達と回収の2回家を訪れる必要が出てくる。だが中身を手渡ししてしまえば箱はすぐ持ち帰ることができるので回収する手間が省けるのだろう。だから極力置き配したくないんだと思う。もちろん彼らの気持ちはわかるが置き配設定してるんだから置き配してくれよ...とは思いつつ別に家にいるのでいいか、、と諦めてる。</p>
<p>それと<strong>基本クレカ支払いなんだけどなんとなくオールドタイプのサイト構成なのでやや不安がある</strong>。クレカ情報の登録がやや怖い。メインのクレカじゃなくて限度額低めのサブカードを登録した。StripeとかPayPal使ってほしいなという気持ちはありつつも、まぁある程度歴史ある会社だろうしバックエンドも大変なのでしょうと想像できるので贅沢は言えない。</p>
<p>あ、あともう一つ<strong>毎週月曜日に新メニューが登場するのだがうまそうなやつはマジですぐ品切れになる</strong>。別に残ってるやつも悪くはないんだけどうまそうなやつはもう少し在庫増やしてくれよと思う。まぁ別にメニューが少なかったり入れ替わったりに関する要望はどの宅食でもあるので仕方ないかも。</p>
<p>と、こんな感じでナッシュからの移行を終えて新しい昼食ルーティーンがリビルドされた。今のところは大体うまく回っており、何より昼食費用がこれまでの4割OFFくらいの価格に圧縮されたので家計にも優しくなっていて概ね満足している。</p>]]></content:encoded></item><item><title><![CDATA[技術的なアウトプットに疲弊しないようにするコツという記事を読んで思ったこと]]></title><description><![CDATA[YuheiNakasaka's diary on 2023-01-10]]></description><link>https://yuheinakasaka.github.io/gialog-diary/articles/31</link><guid isPermaLink="true">https://yuheinakasaka.github.io/gialog-diary/articles/31</guid><pubDate>Tue, 10 Jan 2023 02:56:06 GMT</pubDate><content:encoded><![CDATA[<ul>
<li><a href="https://blog.arthur1.dev/entry/2023/01/08/195840">技術的なアウトプットに疲弊したので振り返る</a>という記事を読んだ</li>
<li>内容は「たくさん技術エントリを書いてきたが全然読まれないのでモチベーションが保てない」というお話</li>
<li>気持ちはめちゃくちゃ理解できるが、少し思うところもあったので自分の考えをまとめておく</li>
<li>そもそも論
<ul>
<li>ブコメやエントリに関連したツイートでの言及をみると「モチベが理解できない」「自分のために書くべきでは」「承認欲求のためにやってるのか」みたいなものが結構あった</li>
<li>まぁ確かに正論ではあるが、悩み相談に対する正論というのは安易だ。悩みを持つ当人への理解を捨てた浅い回答にしかならないことが多い。正論を述べる側は気持ちいいかもしれないが...。</li>
<li>悩んでいる当人の気持ちを推し測って寄り添った回答を捻り出したいという気持ちがある</li>
</ul>
</li>
<li>テクニックの話
<ul>
<li>このエントリに対しての反応として先のそもそも論以外だと「自分はOOを気をつけている」「OOをターゲットにして書いている」など技術記事を書く時のコツを述べている人も多かった</li>
<li>しかしかの筆者がエントリで<strong>仮説</strong>として書いている内容を見るに、Twitterで知らん人々が適当につぶやいた「技術記事を書くときのコツ」なんかはとっくの昔に本人も考えて実践してるのでは？と思った
<ul>
<li>確かに<a href="https://blog.3qe.us/entry/2023/01/09/221705">去年は182本の記事を書いた人から見た、技術的なアウトプットに疲弊しないようにするコツ - Lambdaカクテル</a>で述べられているような、機械的な書き方のフォーマットのようなものはあると思うが瑣末な問題にすぎなそう</li>
</ul>
</li>
</ul>
</li>
<li>内容の話
<ul>
<li>技術記事なので「結局は誰が？どんな内容を？書いたかがほぼ全て」という声は確かに...と思う
<ul>
<li>信用できる人か否か</li>
<li>有益な情報か否か</li>
</ul>
</li>
<li>ただし良い内容なら多くの人に<strong>すぐに</strong>読まれる、というのは間違い
<ul>
<li>情報はその人にとって<strong>必要な時</strong>でないと刺さらない
<ul>
<li>つまりすぐに多くの人に読まれるには多くの人が<strong>その時に必要としているトピック</strong>を選ぶ方が良い
<ul>
<li>例えばChatGPTが流行ったときにすぐにAIについての話を書くとか
<ul>
<li>この記事は箇条書きだしフォーマットはめちゃくちゃだけど300はてブ超えた
<ul>
<li><a href="https://yuheinakasaka.github.io/gialog-diary/articles/26">どのようにしてプログラマはAIに仕事を奪われていくかの妄想</a></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>しかし別にIT系メディアの運営をしてるわけではないのでそんな頑張りが必要かと言われると微妙。個人的には不毛な努力だと思う。書きたいときに書きたいことを書くべきだ。</li>
</ul>
</li>
<li>技術記事に関しては<strong>すぐに</strong>という制約がなければわりかし多くの人に読まれやすい
<ul>
<li>特に検索流入でいつかは誰かに読まれるということが多い。数年前の記事がいきなり知らんところでバズってたみたいなこともある。数年後の自分が読むということも結構ある。</li>
</ul>
</li>
<li>最低限のクオリティを持った技術記事はその中で取り扱った技術コミュニティに対する貢献になるし、インターネット全体の資産にもなる。</li>
<li><strong>すぐに</strong>多くの人に読まれたいという気持ちさえなんとかなれば良さそう</li>
</ul>
</li>
<li>暖簾に腕押し
<ul>
<li>かのエントリでは冒頭で暖簾に腕押しという言葉が使われている</li>
<li>なぜ読まれないのか？についての考察など色々書いたりしているが結局のところ暖簾に腕押しという言葉に全てが詰まってると思う</li>
<li>それなりに時間をかけて対象も吟味してできる限りの手は尽くした、つまり頑張ったわけだ。しかしそれがすぐには報われない。</li>
<li>自分なりによくできたと思って作ったものが、期待に反して全く評価されないという経験は誰しも多かれ少なかれあると思う</li>
<li>そもそも論の文脈で言えば、期待値(まともな技術記事は多くの人にすぐ読まれるという期待)が間違っているということになる</li>
<li>が、先に述べたようにそれを言ってもまぁ瞑想しましょうねくらいの精神論しかなくて現実的ではない解決策にしかならないと思う</li>
</ul>
</li>
<li>解決策
<ul>
<li>それなりに精神論的な善処は期待しつつ(重要)、かの筆者にかけられる自分からの言葉としては「Twitterを教えてくれ、フォローするよ。」だと思う</li>
<li>流石に自分にとって有益でなければ記事をはてブしたりRTしたりはしないけど、疲弊した気持ちをアウトプットしてくれたことはありがたい。ではそれを読んで何か自分が無理ない範囲でできることがないか？を考えるとTwitterをフォローする、くらいは丁度良い感じの柔らか回答になる気がする。</li>
<li>少なくとも1人はかの筆者の書いた技術記事を読む可能性のある人が増えるわけだ。フォローするだけなら自分にも負荷はない。</li>
<li>よっぽどの内容に難があるような人でなければ技術記事を書くことは誰であれ無理ない範囲で続けてほしい。</li>
</ul>
</li>
<li>その他
<ul>
<li>アウトプットが継続している人はほとんどが自分のために書いている。これは本当にそうだと思う。</li>
<li>実際に30代になってくると脳のメモリやディスク容量が減ってくる。そうなると学んだことが定着しづらくなっていく。</li>
<li>昔なら読んだ本の細かい内容を丸ごと覚えられたのに、今は読んだ本のトピックは覚えているけど細部が思い出せないという感じになりつつある</li>
<li>そういう状況になるとどうなっていくかというと、全内容を丸ごと頭に入れるのではなく、全内容にたどり着くためのインデックスだけメモリに入れておくようになる
<ul>
<li>例えば昔はRubyのtimestampのフォーマット構文を丸ごと暗記していたが今はリファレンスの当該ページへたどり着くためのパスだけ覚えておく、みたいな</li>
<li>あそこに行けばOOOの情報にたどり着けるというパス情報。</li>
</ul>
</li>
<li>そのインデックスを自分なりに作るのに良いのが技術メモだ。調べたことや読書の感想をとにかく文章にしてアウトプットしておく。そうすると先の例だと「timestampのフォーマットは自分のscrapboxのOOのところにあるな」という感じでパスを自分なりに集約できるようになる。これがないと毎回ググって出てきた記事を読み、その信頼性をチェックして...みたいな感じになってしまう。</li>
<li>自分のためにアウトプットするというのは別に強がりではなくて、自分の老化した脳に対して仕方なくやらないといけない対策という側面が割とある</li>
<li>老化は辛いね...</li>
</ul>
</li>
</ul>]]></content:encoded></item><item><title><![CDATA[ナッシュを解約して個人情報を全て削除してもらった]]></title><description><![CDATA[YuheiNakasaka's diary on 2023-01-07]]></description><link>https://yuheinakasaka.github.io/gialog-diary/articles/30</link><guid isPermaLink="true">https://yuheinakasaka.github.io/gialog-diary/articles/30</guid><pubDate>Sat, 07 Jan 2023 12:56:48 GMT</pubDate><content:encoded><![CDATA[<blockquote class="twitter-tweet" data-partner="tweetdeck"><p lang="ja" dir="ltr">これまで300食以上食べてきたけど過去の事例も併せて流石に厳しい企業であると感じたのでアカウントやその他全情報を全て削除するように依頼した。<br><br>宅食「ナッシュ」に不正アクセス、約6000件の顧客情報流出か　ランサムウェアに感染<a href="https://t.co/ipna9uDdDu">https://t.co/ipna9uDdDu</a></p>&mdash; YuheiNakasaka (@razokulover) <a href="https://twitter.com/razokulover/status/1611015759601487874?ref_src=twsrc%5Etfw">January 5, 2023</a></blockquote><script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
<p>ナッシュに関しては2021年くらいから少なくとも計300食以上食べてきたが、<a href="https://www.itmedia.co.jp/news/articles/2301/05/news077.html">宅食「ナッシュ」に不正アクセス、約6000件の顧客情報流出か　ランサムウェアに感染</a>というNEWSを受けていよいよ解約した方が良いかなと感じたのでやっと解約手続きをした。過去<a href="https://bunshun.jp/articles/-/57926">〈チャット入手〉NHKも紹介した宅食ベンチャー・ナッシュ取締役「デブの人は採用しないように」「権利主張が激しい」</a>というようなNEWSも出ていたが、本当ならこの時に解約しておいても良かったのかもしれない。</p>
<p>しかしナッシュはクレカ情報や住所情報を管理画面から簡単に削除することができず、綺麗さっぱり解約するのが面倒そうという印象があってその時は億劫で手続きをしなかった。</p>
<p>今回は本格的に今後もやばそうかもという感じがしたので重い腰を上げた形になる。</p>
<p>ナッシュから<strong>個人情報含めて完全にアカウント削除する方法</strong>は少しコツがいる。通常の解約処理だけだと全個人情報をナッシュ側から削除できない(らしい)からである。</p>
<p>どういうことかというとナッシュ側で保持されている個人情報は通常の「アカウント情報(とそれに紐づく住所やクレカ情報など)」と「商品に瑕疵や問題が発生した際の連絡用として通常アカウントとは別に保持されている注文履歴や連絡先の情報」という2種類ある。</p>
<p>通常の解約処理で削除されるのは前者の方だけだ。後者は記載している通り何らかの緊急連絡用に別に保持されていて、通常のアカウント解約では削除されないとのこと(保持期間も不明)。</p>
<p>なので後者の個人情報を削除するにはアカウント解約とは別に問い合わせフォームから全ての個人情報を削除してほしい旨を連絡する必要がある。</p>
<p>自分の場合は下記のような文章を送った。</p>
<pre><code>下記の情報を削除したいです。

- アカウント情報
- クレジットカード情報
- その他個人情報全て

当サービスからこれらを削除する方法をご教授願います。

よろしくお願いいたします。
</code></pre>
<p>すると数営業日後に折り返しメールがきて、ナッシュのアカウント解約が行われた旨が伝えられ、加えて先ほどの後者の注文履歴や連絡先などの個人情報の削除が別途数日後に行われるという旨も併せて伝えられる(自分の場合は問い合わせから6日後だった)。</p>
<p>少々面倒だがこれらの工程を踏んで晴れてナッシュから全ての個人情報を削除できる。</p>
<p>大人なので「本当に全て削除されるのだろうか？」みたいな邪推はせず、うまく対応してくれていることを祈っている。</p>]]></content:encoded></item><item><title><![CDATA[2022年の振り返りと2023年の抱負]]></title><description><![CDATA[YuheiNakasaka's diary on 2023-01-03]]></description><link>https://yuheinakasaka.github.io/gialog-diary/articles/29</link><guid isPermaLink="true">https://yuheinakasaka.github.io/gialog-diary/articles/29</guid><pubDate>Tue, 03 Jan 2023 12:54:44 GMT</pubDate><content:encoded><![CDATA[<p>2022年の振り返りと2023年の抱負を書いていく。自分向けに書いていくのでハイコンテクストになりがち。</p>
<h1>2022年の振り返り</h1>
<h2>仕事面</h2>
<p>なんとか生き延びることはできた。起業してからもう10年いかないくらい経つが、1年をなんとか生き延びられるか常に不安である。毎年今年は生きられるんだろうかと常に遠くを見つめている。</p>
<p>メインの仕事としてはNFT関連のプロジェクトの開発をやったりしていた。主にLINE Blockchainを主戦場にしていたが、LINE Blockchainはまだまだ発展途上である。国内で自分より詳しい人は数えるほどしかいないのではないかと思う程度には熟知しているレベルになってしまった。しかしその知識と経験に需要が全く追いついていないので持ち腐れになっている。さらに現状はクリプト冬の時代突入の最中であり先行きどうなるかわからん...。</p>
<p>2022年は4月頃から業務委託で仕事を受け始めるということもした。既存プロダクトの改善や拡張、新規開発など手を動かす要員として働いた。技術としてはRailsとFlutterを中心に書いている。</p>
<p>自分は技術力としてはそれほど突出したものは無いが、会社全体として目指すべき状態とそのためにやるべき仕事を見極めて、それを最短の労力でこなすことには自信があるので、そういう立ち振る舞いとしてはまずまず貢献できたと思う。ありがたいことに社からの評価は上々だったので需給が良い感じでマッチしていたみたいだ。どんなに能力が高くてもその能力が発揮できる仕事がない&#x26;提供できないならば機能しない。雇用者側としてその点は痛いほど実感していたのでそういうすれ違いが発生していなくてよかったと思う。</p>
<p>内容にもよるが業務委託はまだ週1~2くらいなら受けられる可能性があるので今後また募集を出すかもしれない。</p>
<p>やんごとなき事情で給与(Findyの想定年収の1/2程度)は5年くらい横ばいで変わっていない。支出を抑えるか空からお金が降ってくるのを待つしかない状態なのでさらに働き口を増やして馬車馬になるか...</p>
<h2>プライベート(技術)</h2>
<p>2021年夏くらいからブロックチェーンに関する技術のキャッチアップを始めて2022年の夏くらいまでは日々日々情報を追ってた。</p>
<p>ブロックチェーン関連ではBNFTLYというサイトを作った。詳細は<a href="https://zenn.dev/razokulover/articles/3af0477a15ab51">任意のURLに簡易のNFT認証を付けたリンクが作成できるサイトを作った</a>に書いている。界隈の規模感を加味するとまぁまぁバズった気がする。</p>
<p>その後はZk系のプロジェクトを追ったりEthereumのThe Mergeが完了するかしないかあたりで(理由は覚えていないが)飽き始めて少し距離を置くようになった。</p>
<p>それ以降はCloudflare関連プロジェクトやRustを書いたりする時間に使っていた。</p>
<p>中でも11月に取り組んだNES(ファミコンエミュレータ)をRustで実装するプロジェクトが楽しかった。詳細は<a href="https://zenn.dev/razokulover/articles/1191ca55f9f22e">Writing NES Emulator in Rustをやった</a>に書いている。<a href="https://amzn.to/3G9u0n7">動かしてわかる CPUの作り方10講</a>を読んでCPUエミュレータを書いたりもした。これらの過程でプログラムがバイナリレベルで実行されていく流れが解像度高く実感できるようになったのがよかったと感じている。</p>
<p>今年はZenn/ブログ/Scrapboxに記事やメモや結構書いたなと思う。</p>
<p>Zennは25記事書いており、1,526Likesを集めた。
<img src="https://user-images.githubusercontent.com/1421093/210347633-bc70e722-99be-4811-a365-79d065c8064f.png" alt="Fkp50_jaMAAMCLr"></p>
<p>よく読まれた記事としては、下記。</p>
<ul>
<li><a href="https://zenn.dev/razokulover/articles/d312d73e319e7c">未経験者がプログラミングを学びたいと思った時に最初に読む記事</a></li>
<li><a href="https://zenn.dev/razokulover/articles/09f2b13b6cbd7a">1~2年目のエンジニア向けにキャリアや勉強方法について話したこと</a></li>
<li><a href="https://zenn.dev/razokulover/articles/1191ca55f9f22e">Writing NES Emulator in Rustをやった</a></li>
</ul>
<p>今年の4月からr7kamuraさんの<a href="https://r7kamura.com/articles/2022-05-03-github-issues-as-blog">GitHub Issuesでブログを書く</a>にインスパイアされてGitHub Issuesで日記を書き始めた。そこで書いた日記の中でホットエントリしたものがいくつかある。</p>
<ul>
<li><a href="https://yuheinakasaka.github.io/gialog-diary/articles/28">仕事力と技術力と不安に関する雑文</a></li>
<li><a href="https://yuheinakasaka.github.io/gialog-diary/articles/26">どのようにしてプログラマはAIに仕事を奪われていくかの妄想</a></li>
<li><a href="https://yuheinakasaka.github.io/gialog-diary/articles/14">最近のWeb3への雑感</a></li>
</ul>
<p>Zennにしても日記にしても初心者プログラマ向けの話/キャリア系の話が人気っぽい。</p>
<p>そういえばScrapboxの技術メモは今年だけでも200ページを超えていたが、多くはBlockchain関連だ。</p>
<ul>
<li><a href="https://scrapbox.io/razokulover-tech-memo/">技術メモ</a></li>
</ul>
<p>それが要因でBlockchain界隈の人たちからTwitterでフォローされることが増えた。今年だけで1000人くらいフォロワーが増えている。良い機会なので基本的に技術ネタしたつぶやかないように運用を変えている。見てる人もその方が雑音が減って良いだろうし。</p>
<ul>
<li><a href="https://twitter.com/razokulover">メイン垢: @razokulover</a></li>
</ul>
<p>ただ雑音的なまじなつぶやきもやっていきたいのでサブ垢も作った。よかったらフォローして。飯の情報と雑な思考のアウトプットとハロプロの話が得られる。</p>
<ul>
<li><a href="https://twitter.com/revolukozar">サブ垢: @revolukozar</a></li>
</ul>
<h2>プライベート(技術以外)</h2>
<h3>日課</h3>
<p>筋トレと詰将棋とDuolingo(ロシア語)とTanzamと適当な英語リスニングを続けた。</p>
<p>筋トレと詰将棋は2017年くらいから細々と継続中。</p>
<p><a href="https://apps.apple.com/jp/app/%E8%8B%B1%E5%8D%98%E8%AA%9E%E3%82%A2%E3%83%97%E3%83%AA-tanzam/id1554699067">Tanzam</a>は英単語アプリ。絵と単語を紐づけて覚えるやつで、TOEIC900くらいまでの3000語以上をやった。体感としてはTOEICでわからない単語は一つの長文あたり一桁個以下になってきたと思う。まぁそれだけでいい点数が取れるわけではないので意味ないかもしれないけど自己満足としてはまずまず。</p>
<p>Duolingoではロシア語をやってた。簡単な文章なら辞書を引いて読めるくらいにはなったと思う。が、如何せん使う機会も場所もない。</p>
<p>Youtubeの<a href="https://www.youtube.com/watch?v=kuc03HDwIVo">地獄の英語リスニング・トレーニング【7時間連続再生】【日本語字幕付き】</a>というやつをよく聴いていた。英語が2回読まれて日本語が1回読まれて再度英語が2回読まれる、というセットが1000文。TOEICでいうとPart2がひたすら続く感じ。読まれるスピードは結構早めなのでこれに慣れてるとTOEICのPart2は簡単に感じてくる。約10分/日くらいで半年前くらいやってて、もう5周弱くらいしたかも。体感では割と効果がある気がしてる。</p>
<h3>痔</h3>
<p>4月に痔が悪化して病院に罹った。元々痔持ちだったが病院行ったのは初めてだった。親以外の他人に初めて肛門に指を突っ込まれるという経験などを経て、外痔核のステージ2だとわかった。ステージ3からは手術が勧められる。それに片足を突っ込んでいる状況。一応は保存療法で様子見になったが手術してもいいかもよというレベルと言われてかなり凹んだ。</p>
<p>もう数年以上前から食事改善や生活習慣の見直しは自前でやっていてそれなりに排便環境はよかったのだが、排便方法の方に問題があったらしい。結構な力で息んで肛門に力がかかりやすい排便方法だったのだ。これが良くなかった。なのでまずはこの排便方法を治すように試行錯誤した。具体的にはお尻を突き出し体を屈ませて、便意を強くイメージ、背中のあたりから腸の内圧で便を下方へ移動させ肛門に力を加えず括約筋の方を動かして排出させる訓練。ヨガとかそういうやつに近い修行みたいなもんなんだけどこれがマスターできると肛門に不要な力がかからず排便できるようになる。不要な力がかからなければ痔核や切れ痔が出来づらくなる。小学校で教えてほしかった。</p>
<p>食事や生活改善も継続。具体的にはこまめな水の摂取・納豆&#x26;ヨーグルトを摂る・ご飯をお腹いっぱい食べる。ご飯を食べる量が少ないと便が押し出されず腸に留まる時間が伸びて便秘気味で硬くなりやすい、意外と盲点である。外痔核は下半身の血行が悪くなると良くないので真夏でも湯船に浸かるようになった。</p>
<p>それから半年ちょっと経ってやっと落ち着いた。とはいえ気は抜けない毎日だ。</p>
<p>痔かも？と思ったらすぐ病院へ行け。痔を舐めるな。<a href="https://www.iwadare.jp/G-WEB/">痔 - WEB</a>は万人が読んでおくべきサイト。</p>
<h3>スタンディングデスク</h3>
<p>痔のためだけではないが仕事や普段の作業でもスタンディングで行うようになった。椅子に座ると(自分の場合は)腰が痛くなったりお尻にも良くないことが多い。詳細は<a href="https://yuheinakasaka.github.io/gialog-diary/articles/15">スタンディングワークを3ヶ月ほど続けた感想</a>に書いている。結局あれから半年以上続けているがもう常態的にスタンディングで作業できるようになった。自分には合っているようだ。</p>
<h3>カレー</h3>
<p><img src="https://user-images.githubusercontent.com/1421093/210355190-f8356459-da1f-4332-a859-9fe91528d045.PNG" alt="IMG_3859_res"></p>
<p>7月頃から平日は毎日カレーを食べるようになった。インスタにカレーだけアップロードしてる異常者になっている。</p>
<ul>
<li><a href="https://www.instagram.com/razokulover/">@razokulover</a></li>
</ul>
<h1>2023年の抱負</h1>
<h2>仕事面</h2>
<p>生き残る。どんな技術を使うかとかは気にしてる余裕ないのでなんとか生き残る。なんとか生きていく。</p>
<h2>プライベート(技術)</h2>
<p>仕事で必要になりそうなものがあればそれを重点的に。それ以外だと普遍的な技術を都度掘り進める。</p>
<p>例えば自分はネットワーク周りの知識がとても弱い。それもあって年末に<a href="https://scrapbox.io/razokulover-tech-memo/%E4%BD%9C%E3%81%A3%E3%81%A6%E5%AD%A6%E3%81%B6%E3%83%AB%E3%83%BC%E3%83%86%E3%82%A3%E3%83%B3%E3%82%B0%E3%83%97%E3%83%AD%E3%83%88%E3%82%B3%E3%83%AB_Rust%E3%81%A7BGP%E3%82%92%E5%AE%9F%E8%A3%85">BGPプロトコルのRust実装</a>をやったり<a href="https://scrapbox.io/razokulover-tech-memo/%E3%83%97%E3%83%AD%E3%83%95%E3%82%A7%E3%83%83%E3%82%B7%E3%83%A7%E3%83%8A%E3%83%ABSSL%2FTLS">プロフェッショナルSSL/TLS</a>を読んだりした。</p>
<p>こういう基本的な技術を広く固める営みは技術領域を問わず常に続けていきたい。</p>
<p>あとはOSSのコードをもっと読むようにしたい。今までも読んではいたけどもっと息を吸うように触れられるようにしていきたい。</p>
<h2>プライベート(技術以外)</h2>
<p>日課としてはDuolingoを外し、代わりに応用情報の午前問題を毎日数問解くというのをやってみたい。それ以外は継続で。</p>
<p>痔が悪化しないようにできることをやり続ける。死ぬまでやっていく。</p>
<p>カレーは引き続き食っていく。</p>
<p>友人を作る。2022年は特に他人との関わりがなかったので2023年は友人を作る。方法は何も考えてないが。</p>
<h1>まとめ</h1>
<p>2022年の振り返りと2023年の抱負を書いた。振り返りは実際にあったことをベースに書くので大量に書けるが抱負はこれからのことなので全然書けない。</p>
<p>都度都度いい感じにやっていく。</p>
<p>以上</p>]]></content:encoded></item><item><title><![CDATA[仕事力と技術力と不安に関する雑文]]></title><description><![CDATA[YuheiNakasaka's diary on 2022-12-20]]></description><link>https://yuheinakasaka.github.io/gialog-diary/articles/28</link><guid isPermaLink="true">https://yuheinakasaka.github.io/gialog-diary/articles/28</guid><pubDate>Tue, 20 Dec 2022 12:17:23 GMT</pubDate><content:encoded><![CDATA[<ul>
<li>先日「育児など家庭の色々があって自分の時間が確保できなくなった。技術力を高めるための勉強ができなくて不安。」みたいな話を聞いた</li>
<li>この悩みの直接的な解決方法としては先人の様々な体験談および対策みたいなものが世に出回っているからご家庭の状況に応じて参照すればいい思う
<ul>
<li><a href="https://engineer-lab.findy-code.io/ikuji_findy">子育てと開発を両立するコツは「無理をしないこと」。パパ／ママエンジニアの働き方とは</a></li>
<li><a href="https://eh-career.com/engineerhub/entry/2018/05/15/110000">子育てを支える技術 ─ フルスタックお父さんとエンジニアとしての成長を両立させるには</a></li>
<li><a href="https://zenn.dev/akinari_ueda/articles/3ec81c9605e732cb7912">ITエンジニアと子育てと勉強と</a></li>
</ul>
</li>
<li>それよりも「技術力を高めるための勉強ができなくて不安」という点が個人的には気になった</li>
<li>技術力とは何か？技術力が高くないとなぜ不安なのか？みたいな話</li>
<li>技術力は特に明確な定義があるわけではない
<ul>
<li>例えば著名なOSSにコミットしているとか低レイヤーのプロトコルやインフラをバリバリ実装してるとか競プロで上位勢だとか、挙げ始めたらキリがなく、それっぽい何かはたくさん挙げられそう</li>
<li>つまるところ技術力というのはその人の理想次第なのではないか</li>
</ul>
</li>
<li>技術力が無いとなぜ不安か
<ul>
<li>「<strong>今職を失うのではないかという不安</strong>」と「<strong>将来職を失うのではないかという不安</strong>」がある</li>
<li>前者に関しては
<ul>
<li>技術力が無いと仕事がこなせない => 役立たずとしてクビになる => 職を失う => 生きていく金がない => 不安、というロジック？</li>
</ul>
</li>
<li>後者に関しては
<ul>
<li>技術力が無いと職を得られない => 生きていく金がない => 不安、というロジック？</li>
</ul>
</li>
<li>どちらにしても技術力の高低によって仕事をし続けられるかどうかが決まるという前提がありそう</li>
</ul>
</li>
<li>技術力の高さと失職の可能性
<ul>
<li>確かに技術力が高ければ職を得やすそうだしクビにもなりにくいのは確か</li>
<li>しかし技術力の有り無しは0か1の離散的な話ではなく、0と1の間に無限のグラデーションがあるはず
<ul>
<li>技術力が0.2の人もいれば0.5の人もいるし0.8の人もいる</li>
<li>どれだけの力があれば失職の可能性に怯えずに済むのか。はっきりわからない部分が多い。
<ul>
<li>企業ごとに技術力を0.2しか求められない会社もあるし0.8求める会社もある</li>
<li>自分の所属する企業はどれくらいを求めているのか、自分の将来働いているであろう企業群はどの程度を求めているのだろうか</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>技術的成長はどれほど必要か？仕事が出来るだけの技術力があれば良いのでは？
<ul>
<li>仕事を最低限こなせるだけの技術力があれば仕事を失わないのではないか
<ul>
<li>少なくとも日本だとそんな簡単に解雇しづらいし</li>
</ul>
</li>
</ul>
</li>
<li>業務外の技術について
<ul>
<li>現状の仕事で必要な範囲を超えた技術を学ぶことはどれだけ重要か
<ul>
<li>例えばサーバーサイドエンジニアがUnityを学ぶのはその人の不安の解消に役立つのかとか</li>
</ul>
</li>
<li>不安の解消という観点では今の仕事の延長線上にある未知の技術に手を出す以外の学習は遠回り感があるのでは？</li>
</ul>
</li>
<li>仕事で必要なのは技術力ではなく仕事力ではないか
<ul>
<li>エンジニアは技術職と言われることも多いし、仕事を遂行する能力=技術力というような考えをしがち</li>
<li>しかし仕事を遂行する力、すなわち仕事力は技術力と一致しない(もちろんガチTech企業ならほぼ一致することもあるが)</li>
<li>これは別に技術力を軽んじている訳ではなくソフトスキルを礼賛したいわけでも無く、仕事に必要な技術力は高々仕事の範囲でしかないという意味</li>
<li>その仕事特有のドメイン知識や問題の定義・解決能力、チームを巻き込む力など仕事には仕事をこなすために必要なスキルがある</li>
<li>仕事とは<strong>ある目標を達成すること</strong>なので重要なのは技術力ではなく目標遂行能力だ
<ul>
<li>自分はこの能力を<strong>仕事力</strong>と定義してる</li>
</ul>
</li>
<li>技術力というのはその中で必要になるピースの一つである。だからまずは今の仕事にどういう技術力がどのくらい必要か見極めて必要な分だけ学べば良い</li>
</ul>
</li>
<li>そう考えると先の若者のように「業務外で勉強する時間がなくて不安」みたいな話についてはとりあえず下記の心構えで上から順に臨むのが良さそうに思った
<ul>
<li>仕事に取り組む上で必要な自分に足りていない技術力を定義すること。まずこれが重要。</li>
<li>そしてその技術の学習を業務内で出来る限り行う
<ul>
<li>業務に関係のある技術なのでお賃金をもらいながら胸を張ってやるべき</li>
</ul>
</li>
<li>それでもどうしても足りないのであれば仕方なく業務外で頑張る
<ul>
<li>ここに占める割合があまりにも多い場合は、上司のタスク割り当てが間違ってる可能性があるのでまず相談する
<ul>
<li>自分の能力不足の場合、気合いでやる。しかし気合いで血反吐を吐きながらやるのは最終手段。</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>巷のスゴいエンジニアと自分を比べたり膨大で深遠な技術力という怪物を倒そうと頑張るのではなく、まずは自分に必要な最低限のサイズの目標に切り分けてそれだけを相手にするように心がける。まずは不安に囚われず余裕を持てるようになるところを目指す。</li>
<li><strong>今職を失うのではないかという不安</strong>に関してはこんな感じ</li>
<li>では<strong>将来職を失うのではないかという不安</strong>に関してはどうか
<ul>
<li>業務内の時間で仕事にコミットすることで得た知識がそのまま将来の不安を軽減させてくれる可能性もあるし、余裕が生まれたことで業務外でできるようになる好き勝手な技術探求で得た知見が将来の不安を軽減させてくれる可能性もある</li>
<li>どのみち将来のことはどうなるかわからない
<ul>
<li>10年前のインフラ・サーバーサイド・フロントエンド・各種技術の流行りやスタンダードを思い浮かべてほしい。何が消えて何が残って何が新たに生まれるかはわからんすぎる(ある程度の方向性は予測できるにせよ)。</li>
<li>そういう意味ではハードウェアやOSやネットワークのような比較的低レイヤーな基礎技術を学ぶのが良いとかはあるかも
<ul>
<li>だからといってその辺の知識が将来の失職を予防してくれるかも不明。その時必要となる仕事力がないと結局は不安は拭えない。</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>第一は今コミット出来ることにコミット。そして遠い将来に関しては直感を頼りに逐一betしながら祈る。</li>
<li>その他色々
<ul>
<li>将来については歳を重ねて技術力どころではなくなり健康力みたいなものも必要そう。健康への投資も重要っぽい。
<ul>
<li>目や腰、その他生活習慣病などのケアに追われている中年エンジニアが自分のTLにも散見されるようになってきた(TLの老化...)。</li>
</ul>
</li>
<li>未婚・DINKsなど子育てが無い人は<strong>将来職を失うのではないかという不安</strong>への投資がしやすいので余裕があるか？
<ul>
<li>先に書いた通り将来に関しては祈り要素もあるので皆等しくほんのり不安なのは同じ</li>
<li>置かれた立場によってそれぞれの不安要素はあるものだし、まして子の有無によって発生するもの/失っているものを比較するのは語り得ないものなので踏み込むべきではない</li>
</ul>
</li>
<li>こういう人生や日常の悩みは現状把握と分解と整理が基本なので一人で抱え込まずに早めに適当に文章にするなり人に吐き出すなりすると良い。当事者だけではるつぼに嵌ってしまう。</li>
</ul>
</li>
</ul>]]></content:encoded></item><item><title><![CDATA[ChatGPTに適当な食材を使ったレシピを考えてもらう]]></title><description><![CDATA[YuheiNakasaka's diary on 2022-12-04]]></description><link>https://yuheinakasaka.github.io/gialog-diary/articles/27</link><guid isPermaLink="true">https://yuheinakasaka.github.io/gialog-diary/articles/27</guid><pubDate>Sun, 04 Dec 2022 12:47:07 GMT</pubDate><content:encoded><![CDATA[<p>ChatGPTにレシピを生成してもらうのが楽しい。適当に冷蔵庫の余り物を指定して「レシピを教えて」と聞くと良い感じに答えてくれる。</p>
<p>普通じゃ思いつかないようなトンチキな解答も結構あり中々味わいがあって良い。レシピに困った時に使えるかもしれない。</p>
<p>現実的に食えそうでかつユニークな回答を得るには「誰も食べたことがないような」とか「意外な組み合わせ」などの形容句を加えると良さそうだった。</p>
<p>以下、ChatGPTが生成した今後自分でも試してみたいと思ったレシピをメモしとく。</p>
<p>※記事が見づらくなるしググラビリティも悪くなるのでやりとりのスクショ画像は省く。自演したんじゃないかと疑われそうだけどスクショを貼ったところで画像もいくらでも改ざんできるわけで大して変わらんだろうからまぁ誤差。</p>
<h1>Q.  鮭とほうれん草としめじを使った今まで誰も食べたことがないような料理のレシピを教えてください。</h1>
<p>鮭とほうれん草としめじのロール</p>
<p>材料：</p>
<ul>
<li>鮭 1/2枚</li>
<li>ほうれん草 1/2束</li>
<li>しめじ 1/2袋</li>
<li>塩 小さじ1/2</li>
<li>味醂 小さじ1/2</li>
<li>卵 1個</li>
<li>小麦粉 小さじ1/2</li>
<li>作り方：</li>
</ul>
<ol>
<li>鮭をスライスし、塩と味醂を加えてマリネする。</li>
<li>ほうれん草を細かく切り、しめじを洗い、水切りしておく。</li>
<li>卵を打ち、小麦粉を加えて薄める。</li>
<li>フライパンに油を熱し、ほうれん草としめじを炒める。</li>
<li>鮭をフライパンに入れ、表面が色づいたら反対側に折り返す。</li>
<li>鮭の上にほうれん草としめじをのせ、お皿に並べる。</li>
<li>卵液をひたして、鮭と一緒に焼く。</li>
<li>焼き色がついたら、反対側に折り返し、さらに焼く。</li>
<li>焼き上がったら、お皿に並べ、噛みやすく切って、お皿に盛り付ける。</li>
<li>お好みで、塩、醤油、レモン汁などで味付けして完成！</li>
</ol>
<p>鮭とほうれん草としめじが柔らかく、卵液が香ばしさをプラスした、新鮮な味わいのロールができあがります。是非お試しください。</p>
<h2>感想</h2>
<p>マリネにした鮭を野菜やキノコで包んで卵で包んで焼くという料理。なんとなく美味そうな気はする。<code>卵を打つ</code>という工程が謎だが...。</p>
<h1>Q.卵とサラダチキンともやしとオクラを使った意外な組み合わせの料理のレシピを教えてください。</h1>
<p>以下は、卵、サラダチキン、もやし、オクラを使った料理のレシピの一例です。</p>
<p>【材料】</p>
<ul>
<li>卵: 1個</li>
<li>サラダチキン: 1/2カップ</li>
<li>もやし: 1カップ</li>
<li>オクラ: 1カップ</li>
<li>玉ねぎ: 1/2個</li>
<li>薄力粉: 1/4カップ</li>
<li>中濃ソース: 1/4カップ</li>
<li>油: 1/4カップ</li>
<li>塩、胡椒、お好みのスパイス: 少々</li>
</ul>
<p>【作り方】</p>
<ol>
<li>卵をボウルに入れ、塩と胡椒を加えて混ぜます。玉ねぎをみじん切りにし、もやしとオクラを刻んでおきます。</li>
<li>卵をフライパンで炒め、玉ねぎ、もやし、オクラを加えて炒めます。サラダチキンを加えて炒め、薄力粉をまぶして炒めます。</li>
<li>中濃ソースを加え、よく混ぜます。塩、胡椒、お好みのスパイスを加えて味を調えます。</li>
<li>完成した料理を皿に盛ります。好みでサラダや白飯を添えてお召し上がりください。</li>
</ol>
<p>このレシピは、簡単でかつおいしい料理が作れるようになるよう心がけました。ぜひ、試してみてください。</p>
<h2>感想</h2>
<p>材料を全部炒めて中濃ソースで味付けするという料理。イメージできそうで出来ない絶妙な料理。お好みでサラダに添えてもおいしいらしい。</p>
<h1>Q. 納豆と冷凍かぼちゃとナスとピーマンを使った誰も食べたことがないような料理のレシピを教えてください。</h1>
<p>納豆と冷凍かぼちゃとナスとピーマンを使った料理のレシピとして、納豆とナスとピーマンのスパイス風味カレーがあります。このレシピを作るには、まず納豆を冷凍かぼちゃと一緒にフライパンに入れ、炒めます。次に、刻んだナスとピーマンを加え、スパイスを加えて炒めます。その後、カレーの素と水を加えて煮込み、好みの生野菜やサラダを添えて完成です。</p>
<h2>Q. 工程ををもう少し詳しく教えて?</h2>
<p>この料理を作る手順は次の通りです。</p>
<ol>
<li>納豆を冷凍かぼちゃと一緒にフライパンに入れ、中火で炒めます。</li>
<li>刻んだナスとピーマンを加え、さらに炒めます。</li>
<li>スパイスを加えて炒めます。スパイスは個人の好みに応じて、カレー粉やターメリック、コリアンダー、カイエンペッパーなどを使用することができます。</li>
<li>カレーの素と水を加えて、よく混ぜます。</li>
<li>煮込み、沸騰したら火を弱めて、約 20 分間煮込みます。</li>
<li>煮込みが終わったら、好みの生野菜やサラダを添えて完成です。</li>
</ol>
<p>以上が納豆と冷凍かぼちゃとナスとピーマンを使ったスパイス風味カレーの作り方です。もし質問がありましたら、お気軽にお問い合わせください。</p>
<h2>感想</h2>
<p>スパイスカレーだ。納豆トッピングとかよくあるし普通に美味そう。まぁでも誰も食べたことがないような食べ物ではないな..。</p>
<p>詳しい工程を教えてくれない場合があるから追加で質問した。最初の質問でちゃんと付け加えておいた方が良さそう。</p>
<h1>Q. 鶏むね肉と適当な野菜を使った異国風の料理のレシピを教えてください。分量や工程も詳しく教えてください。</h1>
<p>鶏むね肉と野菜を使った異国風の料理のレシピを紹介します。分量や工程は、あなたのお好みに合わせて調整してください。</p>
<p>【材料】</p>
<ul>
<li>鶏むね肉: 大さじ1</li>
<li>にんじん: 1/4本</li>
<li>セロリ: 1/4本</li>
<li>人参: 1/4本</li>
<li>しめじ: 大さじ1</li>
<li>にんにく: 小さじ1</li>
<li>みりん: 大さじ1</li>
<li>みそ: 大さじ1</li>
<li>にんにくみそ: 小さじ1</li>
<li>にんじん: 1/4本</li>
</ul>
<p>【作り方】</p>
<ol>
<li>にんじん、セロリ、人参をおろし、1cm角に切ります。</li>
<li>鶏むね肉を1cm角に切ります。</li>
<li>小鍋ににんじん、セロリ、人参を入れ、弱火で炒めます。</li>
<li>鶏むね肉を加え、炒めます。</li>
<li>しめじを入れ、さらに炒めます。</li>
<li>にんじん、セロリ、人参を加え、炒めます。</li>
<li>にんにく、みりん、みそ、にんにくみそを加え、炒めます。</li>
<li>水でさっと洗ったにんじんを加え、炒めます。</li>
<li>調理が完了したら、皿に盛り付けてお召し上がりください。</li>
</ol>
<p>他の野菜やスパイスを加えることで、さまざまな味わいを楽しめます。また、このレシピは鶏むね肉だけでなく、鶏もも肉や鶏胸肉を使用することもできます。ぜひ、自分の好みに合わせて作ってみてください。</p>
<h2>感想</h2>
<p>人参とにんじんは同じでいいのかな。計3/4本使うってことか。にんにくは固形でも使うし、にんにくみそとしても使うっぽいので臭そう。でもガッツリ感はあり、ご飯に合いそうで美味そうな雰囲気はある。</p>
<p>プロンプトは具体的な食材を指定するのもいいが適当な野菜/肉みたいな指定の方が未知の料理になりやすくて面白いかもしれない。</p>
<h1>現状の良さげなレシピを生成するためのプロンプトTips</h1>
<ul>
<li>「誰も食べたことがないような」とか「異国風の」といった形容句を付けた方がググっても出て来なそうな名も無い料理が出やすそう</li>
<li>「分量や工程も詳しく教えてください。」 を付けた方がいわゆるレシピっぽい文章が生成されて良い</li>
<li>食材は「適当な」で指定した方が幅広い料理が出やすい</li>
</ul>
<h1>随時更新予定...</h1>]]></content:encoded></item><item><title><![CDATA[どのようにしてプログラマはAIに仕事を奪われていくかの妄想]]></title><description><![CDATA[YuheiNakasaka's diary on 2022-12-03]]></description><link>https://yuheinakasaka.github.io/gialog-diary/articles/26</link><guid isPermaLink="true">https://yuheinakasaka.github.io/gialog-diary/articles/26</guid><pubDate>Sat, 03 Dec 2022 08:28:02 GMT</pubDate><content:encoded><![CDATA[<ul>
<li>先日 OpenAI から<a href="https://chat.openai.com/chat">ChatGPT</a>が Beta 公開された</li>
<li>ChatGPT ではどんな質問に対しても何かしらの回答を生成してくれるのだが、ソースコードに関しても中々の筋が良さそうな雰囲気のコード片を生成してくれるということで少し話題になっていた</li>
<li>こうしたプログラムを生成してくれる AI が発展していく中でどういう具合にプログラマの仕事が奪われていくのか興味がある</li>
<li>特に以下では<strong>web アプリやモバイルアプリなどのアプリケーションの開発において</strong>という文脈で考えることにする</li>
<li>まず AI がプログラマの仕事を奪うまでにはいくつかの段階があると思う</li>
</ul>
<h1>コード支援レベル</h1>
<ul>
<li>現状は<a href="https://github.com/features/copilot">GitHub Copilot</a>のようなコーディング支援を行うレベルの AI はある程度実用レベルになっている
<ul>
<li>自分は Copilot が生成したコード片をプロダクションコードに含めるのは権利関係の問題もあり様子見している</li>
<li>しかし Copilot を使っていないわけではなく、変数名や定型作業のサジェストや変数名の補完、コードの書き出しの補助などで利用している
<ul>
<li>例えば API のレスポンスで受け取る予定の JSON をペタッと貼るとそれにあった構造体とか型が丸ッと生成されたりする。スニペットとか静的なコードジェネレータでやってたような作業が良い感じにできるなど。</li>
</ul>
</li>
<li>正直このようなコーディングの支援 AI だけではプログラマの仕事は AI に奪われないだろう。全然奪うというよりプログラマの手助けをするだけなので、これではまだまだプログラマがいないとアプリケーションは完成しない。</li>
</ul>
</li>
</ul>
<h1>ChatGPT レベル</h1>
<ul>
<li>では ChatGPT のようにある程度まとまったサイズのコード片を生成してくれる AI が普及するとどうなるか
<ul>
<li>Twitter ではさまざまなプログラマがコード片の生成を試みているがその内容を見るとそのまま使えるコードが半分、修正が必要なコードが 1〜2 割、完全に間違っているコードが 3〜4 割という感じだ</li>
<li>今のクオリティだと人が書いた方がまだ早い、もしくはプログラマによる手修正が結構必要そう。なのでプログラマがいないとまだアプリケーションは完成させられないだろう</li>
<li>ただし修正すること前提で簡単なタスク用のまとまったコード片を生成してコーディングの時間短縮、といった使い方はできるかもしれない</li>
<li>ある意味これもコーディング支援というレベルではある
<ul>
<li>というか GitHub Copilot が GPT-3 を使ってるから実質同じといえば同じ</li>
</ul>
</li>
</ul>
</li>
</ul>
<h1>かなり高精度にコード生成できるレベル</h1>
<ul>
<li>ではそのまま使えるコード片を ほぼ 100%のクオリティで生成できる AI が登場するようになるとどうか
<ul>
<li>ここまでくると AI に生成してほしいコードの内容を伝えてコード片を大量に生成してもらい、それをプログラマが組み合わせてアプリケーションという形にする流れでも現実的になってきそう
<ul>
<li>例えば「メールアドレス認証するコード書いて」「CRUD なフォームのモデルとコントローラとビューを書いて」等々でいくつかの動くコード片が生成される</li>
<li>人間はこれらをつなぎ合わせるだけでアプリケーションが完成するイメージ
<ul>
<li>こうしたコード片をつなぎ合わせる仕事はアセンブリエンジニアとでも呼ばれるようになりそう</li>
</ul>
</li>
</ul>
</li>
<li><strong>AI には体力が無いかつマシンさえあれば並列で大量に実行できるという人間には成し得ない強力な生産性がある</strong>
<ul>
<li>金とマシンさえあれば 24 時間並列で一気にコード生成してもらえるはず</li>
</ul>
</li>
<li>よって例えば今までだと新規でアプリケーションを完成させるのに必要なプログラマが 1 人月必要だった案件でも AI にコーディング部分を大幅に代替してもらえるなら一部コード修正やレビューが必要にしても、数人日で完成させられるようなことはあるかもしれない</li>
<li>この辺りから一部のプログラマの仕事は AI に奪われたと言われるようになるだろう</li>
</ul>
</li>
<li>とはいえこれらは<strong>新規開発の場合のみの話</strong>だ</li>
<li>仕事におけるプロダクションで稼働するシステム開発の難易度の高い部分は既存システムへ追加・修正などの改修を入れるところである</li>
<li>どんなに正確なコード片を生成できたり、あるいはアプリケーション全体のコードを生成できたとしてもそれは新規開発時のコーディングの代替であり、一度本番に乗ってしまったコードを運用していく際にはちょっとやそっとのコード片の生成レベルでは代替は難しそうだ</li>
</ul>
<h1>既存コードのコンテキストも読み取ってコード生成できるレベル</h1>
<ul>
<li>では改修要望を書くと既存コードのコンテキストを加味した状態の追加修正が入ったコードが丸っと生成されるようになるとどうか
<ul>
<li>これが出来るならアプリケーションのコーディング部分を担当するプログラマはほぼ不要になるかもしれない
<ul>
<li>生成されたコードを既存コードに適用するくらいで済むレベルを想定</li>
</ul>
</li>
<li>残りの仕事に必要なのは下記くらいか
<ul>
<li>生成されたコードが安定して実行し続けられるように周辺環境を作るインフラエンジニア</li>
<li>生成されたコードに問題はないか確認するコードレビューエンジニア</li>
<li>生成されたコードが想定通りに動くか確認する QA エンジニア</li>
<li>AI のコード生成や生成したコードを管理するプロンプトエンジニア/アセンブリエンジニア?
<ul>
<li>AI の癖を知り既存コードとの相性の良いプロンプトを管理するご機嫌伺い役</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>ここまでくると新規開発だけでなく既存システムの改修に関するコーディングはある程度代替できるのでさらに従来のプログラマの仕事は減らせるかもしれない</li>
</ul>
<h1>さらに先の話</h1>
<ul>
<li>さらに AI がプログラマの仕事を奪うにはどんなことが必要か
<ul>
<li>生成されたアプリケーションを実行管理し安定運用してくれるインフラをなんとかしてもらう必要がありそう
<ul>
<li>生成されたアプリケーションと想定するサービス品質などを指定すると自動でインフラを展開して運用までやってくれるような仕組みはできるか？</li>
<li>サーバー・ネットワーク・DB などの知識を隠蔽できるか？</li>
<li>トラブルシューティングは可能か？
<ul>
<li>この辺りができないとインフラ系のエンジニアの仕事はなくせなそう</li>
</ul>
</li>
</ul>
</li>
<li>アプリケーションが正しく動いているか保証できる必要がありそう
<ul>
<li>想定外の挙動はないかコードレビューする</li>
<li>生成されたコードが想定通りの動作をしているかテストを書く</li>
<li>生成されたコードが想定通りの動作をしているか動作確認を行う</li>
<li>誤作動した時にストップできる
<ul>
<li>この辺りを担保できないと品質保証系のエンジニアの仕事はなくせなそう</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>その他仕事に関してはどうか？
<ul>
<li>他の役職に関しては詳しくないので何もいえない
<ul>
<li>というか自分の理解が浅いかもしれない職に関して簡単に奪われる職として挙げるのは憚られる</li>
</ul>
</li>
</ul>
</li>
</ul>
<h1>雑多な話</h1>
<h2>生成されるコード</h2>
<ul>
<li>AI が生成するコードは既存のプログラミング言語で書かれたコードである必要はあるのか
<ul>
<li>コード片を人間が読まなくても良いレベルのクオリティなら既存の言語で吐き出す意味はないのでは
<ul>
<li>トラブルシューティングしづらそう</li>
<li>過去の資産(GitHub 上のコードとか)を利用するなら既存のプログラミング言語の方が吐き出しやすそうではある</li>
</ul>
</li>
</ul>
</li>
<li>AI が吐き出しやすいようなコードを書くという価値観が新たにコーディング規約に追加されたりするかも</li>
<li>そもそも実行バイナリを吐き出すだけではダメか？
<ul>
<li>実行バイナリをブラックボックステストであとは QA エンジニアが検証するだけのお仕事で良いのでは
<ul>
<li>とはいえトラブルシューティングしづらそうなのはキツいか</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2>開発体験</h2>
<ul>
<li>開発体験(DX)の向上は必要か？
<ul>
<li>AI が大方のコード生成をしてくれるなら開発体験の向上にコストをかける必要はあるのか</li>
<li>プログラマがコードに手を入れなくても良いなら lint とか formatter とか型とかもいらないのでは</li>
</ul>
</li>
<li>プログラミング言語やフレームワークの選定はどう変わるか？
<ul>
<li>AI が一番精度良く吐き出せる言語が人気になるか</li>
<li>ただまぁこれは今と変わらず要件次第になりそうではあるな</li>
</ul>
</li>
</ul>
<h2>プログラマの仕事</h2>
<ul>
<li>プログラマの仕事はどう変わるか
<ul>
<li>コードを書く比重が減り、コード片を生成する作業とシステムを組み上げる作業に比重が移りそう</li>
<li>要件を分解しシステムを構成するコード片を生成するためのプロンプト作成作業が大量に発生しそう</li>
<li>より必要になる能力
<ul>
<li>業務知識への明るさ</li>
<li>調整能力(コミュニケーション力含め)</li>
<li>要件の分解とそのそれぞれへの解決策を文章化する能力</li>
<li><strong>システム全体</strong>の設計力</li>
</ul>
</li>
<li>今も似たようなことをやってるはずだし必要な能力は変わらなそう</li>
<li>コード化する部分がめちゃくちゃ爆速になるだけか？</li>
</ul>
</li>
<li>フロントエンドエンジニアとかバックエンドエンジニアみたいな職域の境はなくなり、システム全体を設計して形にできる全部できる強いフルスタックな人が 1 人いればアプリケーション開発には十分というチーム構成になる可能性はあるかも</li>
<li>システムの安定性を向上させたり保証する仕事の重要性が増しそう
<ul>
<li>要は<strong>AI の尻拭い</strong>
<ul>
<li>テストや QA を手厚くやって AI の生成したコードの穴を塞ぐ仕事</li>
<li>コードレビューの仕事</li>
</ul>
</li>
<li>QA 用 AI が出てくる可能性もあるが、その AI の QA を誰がやるのか？とかその AI は業務依存の実装になりそうなので維持管理は内製になりそう
<ul>
<li>AI より安いマンパワーを使った方がコスパ良いとかありそう</li>
</ul>
</li>
</ul>
</li>
<li>インフラ周りは構築はまだしも運用を完全に AI に代替させることで仕事を奪わせるのは難しそうに感じる、というか想像できない
<ul>
<li>ただ自社で DC 持ってるとかよっぽど特殊な要件のアプリケーションでなければクラウドベンダが良い感じのソリューションを出してきそうではある。昔に比べたら今でも十分インフラは深い知識なくてもある程度構築運用できるし。</li>
</ul>
</li>
<li>責任を取ること
<ul>
<li>AI のミスの尻拭いは人間がやる</li>
</ul>
</li>
</ul>
<h2>完全に未知の概念に対応できるか</h2>
<ul>
<li>「イスカルテンダ王国のスルマオン暦のランフォイを求めるコード」みたいな未知の概念は AI に正しく対応できない(はず)</li>
<li>AI が知らないものは人間が頑張るしかない</li>
</ul>
<h2>AI の学習ソースはどうなるのか</h2>
<ul>
<li>現状は GitHub やインターネット上のコードを学習してモデルを作ってると思うが、近い将来学習ソースが枯渇するという話がある</li>
<li>将棋 AI は将棋 AI の生成した棋譜をさらに学習したりしているが、AI が生成したプログラミングのコードをさらに学習したりすれば解決するか？
<ul>
<li>将棋における<a href="http://wdoor.c.u-tokyo.ac.jp/shogi/floodgate.html">floodgate</a>みたいな AI が作ったソースコードが実行されたり共有されたりするものが生まれるか？</li>
</ul>
</li>
</ul>
<h2>信頼性</h2>
<ul>
<li>AI が生成したコードをどこまで信頼できるか
<ul>
<li>例えばある手術に使われる機器のソフトウェアが一切人間の手が入っていない AI による自動生成コードで作られているとして、自分の娘がその機器で手術を受けると知ったら、今の AI のレベルなら 100%手術をやめさせると思う</li>
<li>その信頼性を<strong>担保するための仕事</strong>(コードを人間が書くべきといっているわけではない)はしばらくは人間の仕事になりそう</li>
<li>特に人の営みと高度に接続する必要がある場面では避けられないように思う
<ul>
<li>AI にはパーソナリティや家族のような守るべきものが(現時点では)ないという点がある種の弱点(利点)な気がする</li>
</ul>
</li>
</ul>
</li>
<li>AI は人との営みの中で何か重要なことを行うためには責任感が足りなすぎる
<ul>
<li>失敗しましたごめんな！で済まない場面への対応を整備する必要がありそう</li>
<li>そうなると責任は開発(会社|者)が取るしかない。AI の尻拭いは人間がやる。</li>
</ul>
</li>
<li>ある程度無責任でも良い場面には使えるが強く責任が伴う場面では、失敗した場合のケアや予防策を構築する必要がある</li>
</ul>
<h2>シンギュラリティ</h2>
<ul>
<li>AI が考え、AI が解決案を生み出し、また AI が問題を見つけ、AI が解決を試みるみたいなシンギュラリティ的な世界は一部の分野ではもうすぐあり得そう</li>
<li>社会の中でも広く適用されるためには失敗の責任を自分で取れる、自分で尻拭いできる能力が AI に生まれたら世界は変わりそう。まだまだ SF っぽいだいぶ先の話な気もする。</li>
<li>プログラマはAIの失敗の尻拭いをするために謝罪の練習をしておくと良さそう(?)</li>
</ul>
<h1>[追記] コード生成ではなくシステム生成できるレベル</h1>
<ul>
<li>昨夜もう少しちゃんと考えてみたが、そもそもコード生成というのをやめてシステム全体を生成して展開するところまで一気通貫でやってしまえるならどうか
<ul>
<li>例えば仕様書とシステム構成をアップロードしたらアプリケーションコードが生成されインフラが構築され一気にAWSか何かに展開される感じ
<ul>
<li>生成されたシステムをブラックボックスでテストして振る舞いなど問題なければOKみたいな。</li>
<li>これで十分な案件はかなりあるのでは。</li>
</ul>
</li>
<li>これなら新規開発に関してはもうコーディングが完全にいらないしインフラ周りの仕事も消える</li>
<li>昨日書いた時はどのみち既存システムの改修とかは既存データをどうするかとか既存インフラとのつなぎ合わせとか調整の関係で大変じゃないかと思っていたが、そもそも全て改修時にスクラップ&#x26;ビルドすれば良いなと思った
<ul>
<li>アプリケーションコードもインフラ側も全部都度作り直す</li>
<li>そうなると既存データとどう整合性を保つかだけが問題になる
<ul>
<li>であればここだけ人間が頑張れば良いのでは...</li>
<li>というかここまでできるならデータに関してもAI側でやってくれそう</li>
</ul>
</li>
</ul>
</li>
<li>もうこの段階まで来ると変更容易性だとか<strong>保守性に関する概念すら全て過去の遺物</strong></li>
<li>あとは品質管理だけどうするかだけど、これもテストと品質水準をまとめてAIに提出し検証してもらう感じで良いのかも。
<ul>
<li>ブコメなどでも書かれていたが確かにここまでくるともう人間が把握できる規模ではないかもだし、どのみち機械に頼らないといけない部分も出てきそう。</li>
<li>このへんも時間の問題なのかもしれないな...</li>
</ul>
</li>
</ul>
</li>
</ul>
<h1>[追記] システム開発がなくなる世界線</h1>
<ul>
<li>ここまで簡単にシステム開発を適用できるようになると、そもそも世の中的に必要なソフトウェアが全ての業界に行き渡りあらかた開発され切ってしまったという世界線もあるか</li>
<li>ある意味今でいうところの白物家電みたいな。</li>
<li>そうなるとシステム開発という業種自体かなり下火になりそう</li>
</ul>]]></content:encoded></item><item><title><![CDATA[活字と動画のタイパについての個人的感想]]></title><description><![CDATA[YuheiNakasaka's diary on 2022-10-25]]></description><link>https://yuheinakasaka.github.io/gialog-diary/articles/25</link><guid isPermaLink="true">https://yuheinakasaka.github.io/gialog-diary/articles/25</guid><pubDate>Tue, 25 Oct 2022 03:43:23 GMT</pubDate><content:encoded><![CDATA[<blockquote class="twitter-tweet"><p lang="ja" dir="ltr">動画、活字と比べるとタイパ悪すぎて嫌いなクラスタ。文字ならざっと流し読みして1分で概要わかることを動画で10分解説されるとか… <a href="https://twitter.com/hashtag/%E5%B9%B4%E5%AF%84%E3%82%8A%E3%81%AE%E6%84%9F%E6%83%B3?src=hash&amp;ref_src=twsrc%5Etfw">#年寄りの感想</a> <a href="https://t.co/zNbGbrYuBa">https://t.co/zNbGbrYuBa</a></p>&mdash; Kazuho Oku (@kazuho) <a href="https://twitter.com/kazuho/status/1584263349742628864?ref_src=twsrc%5Etfw">October 23, 2022</a></blockquote> <script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
<p>このツイートを見て自分は活字と動画のタイパというものについて色々と思うところがあったので個人的な感想をまとめておく。</p>
<p>まずタイパという言葉については正直初めて聞いたが、time performance(=時間効率)みたいな和製英語だと思う。なので意味としては「動画の方が活字よりタイパが良い」とは「動画の方が活字より早く情報が読み取れる/理解できる」程度の意味合いで使われていると思われる。</p>
<p>このツイートに対してTwitter上での意見を見ると圧倒的に同意が多く活字の方がタイパが良いに決まってるという人が多く見えた。これだけ活字の方が良いと言っている人が多いのであればそれはそうなのだろうなと思う。</p>
<p>中には一概に活字 >>> 動画ではなく、コンテンツによるよねと言っている人もいた。例えば技術ドキュメントのような説明書タイプのものは検索性が重要なので活字の方がよく、もしこのようなコンテンツが動画だとインデックスがなくてしんどすぎる。一方で料理の作り方や編み物の作り方は実際のビジュアルや実践風景があった方が理解しやすいから動画の方が良い。これも一理ある。</p>
<p>そうした意見の中で自分の<strong>現在</strong>のポジションとしてはどうかというと<strong>活字で情報提供してくれるなら活字で提供してほしい</strong>である。だが同時に動画の方がタイパが良いという人たちについてもかなりの理解ができるという感情もある。</p>
<p>どういうことかというと自分はこれを完全に能力の問題だと捉えているということだ。つまり運動ができる/英語が話せる/プログラミングができるみたいな先天的もしくは後天的な訓練によって得られる能力問題なのだと考えている。</p>
<p>というのも自分は今でこそ動画より活字の方が情報理解の速度が速くなっているがほんの数年前まではツイートの参照先で言われている動画の方がタイパが良いと思っていたタイプだ。その当時のことを思い出すと先の「コンテンツによる」という意見で出ていた実践風景のある方が理解しやすいコンテンツだけでなく説明書的なコンテンツでさえも動画の方が早くない？？と思っていた。</p>
<p>どうしてそう感じていたのかというとこれはそもそも<strong>活字から情報を吸い上げる能力</strong>と<strong>動画から情報を吸い上げる能力</strong>に大きな差があったからだ。例えば活字から情報を吸い上げると毎分2情報で動画から情報を吸い上げると毎分10情報得られるような感じ。こういう人は1分あたり3情報以上詰め込んである情報圧縮された動画を見た方が活字から情報を得るよりタイパは良い。</p>
<p>活字の方がタイパが良いと言っている人は活字から情報を吸い上げる能力が毎分20情報で動画から情報を吸い上げる能力が毎分10情報とかなんだと思う。</p>
<p>またTwitterでこの手の話題が挙がると活字の方がタイパが良いという意見が優勢になるんだけど、これは自分の気持ちを文章にしたり文章から情報を吸い上げる能力が一定以上ある人間、つまり<strong>活字から情報を吸い上げる能力</strong>が十分にある人間がTwitterには多いからだと思う。それならTwitterでは活字の方がタイパが良いという意見は刺さりにくいというのも理解できる。日本の7割くらいがYoutubeを使っている一方でTwitterはせいぜい3,4割程度(アカウントの重複含む)という利用者構成なのに活字の方がタイパ良いという意見がTwitterでこんなに多いのはTwitter独自の偏りがかかっているはず。</p>
<p>なおこうした話題に関して活字派と動画派の人間のどちらが優れているのかという旨の議論もされていたがこれには意味がないと思う。足が速いか否かみたいな話であり優劣の問題ではない。基本的には活字より動画からの情報吸収が得意な人は動画から情報吸収すればいい。ある意味選択肢が昔より増えたということであり良い時代になったということなのかもしれない。</p>
<p>とはいえ一部で動画でしか提供されていないコンテンツが増えることへの危惧というのがあるのも理解できる。先に挙げた通り動画の検索性の低さは一部のコンテンツでは致命的なほどのユーザビリティの悪さをもたらす。さらに活字の逆で動画から情報を吸収する能力が低い人にとっても厳しいはず。なのでそういう人は動画コンテンツが増えることに対して逆の生きづらさを感じるかもしれない。理想的には動画でもテキストでも情報提供されれば両者共にハッピーなのかもしれないがコンテンツ作成コストを考えると中々難しいところではある。</p>
<p>現状地球上に存在する書籍の量やインターネットコンテンツ量を考えると圧倒的に活字から情報吸収する能力が高い人間の方が<strong>有利</strong>であることは確かなので義務教育でこうした能力を開発するカリキュラムに重点をおくべきだというのは理解できる。世界的な標準語が英語なので英語が必修になっているのと同じだ。とはいえ英語が義務教育なのに多くの日本人が英語を話せないように義務教育で何かしら手を施しても活字力の定着もまた個人差が多いにあろうことは理解に難くない。</p>
<p>より個人的な話にはなるが自分が活字から情報を吸収する能力が動画以上になったと感じられるようになったのは26,7歳の大人になってからだ。大体ここ数年の話である。最低限の義務教育は受けてきたし大学も偏差値で言うと60以上の国立大に進学したので人並みに勉強はした方だと思うがそれでも最近までは動画 > 活字だった。そもそも学力とこうした能力に関係はないのかもしれないが。</p>
<p>転機としてはプログラマとして仕事をしていく上で知的生産性の衰えが一番マズイと感じることが増え、<a href="https://razokulover.hateblo.jp/entry/2018/12/15/153203">読書に浸る時間を増やし</a>、<a href="https://razokulover.hateblo.jp/entry/2017/01/03/153810">詰将棋をやったり</a>、<a href="https://razokulover.hateblo.jp/entry/2020/03/07/172956">数学をやってみたり</a>とかなんか脳内の筋肉量増加に寄与しそうなことを色々手探りでやったあたりだ。それでもこの程度である。今でも動画はかなり見るしちょっと難しいことは動画を探す。</p>
<p>職業柄のディスアドバンテージがあるからこれだけ挽回に力を注げたが、それほど喫緊の課題ではない人には無理難題だと思う。</p>
<p>右往左往活してしまったが言いたい事があるとすると、活字から情報吸収する能力がある人は活字から情報を摂取すればいいし、動画から情報吸収する能力がある人は活字から情報を摂取すればいい、自分の置かれた立場に合わせて合理的な判断で好きなように情報摂取すれば良い。それは優劣ではなく得意不得意の問題で、ただそれだけの話。という感じ。</p>]]></content:encoded></item><item><title><![CDATA[あらゆるものを資本と資産と収益の関係でみる]]></title><description><![CDATA[YuheiNakasaka's diary on 2022-09-23]]></description><link>https://yuheinakasaka.github.io/gialog-diary/articles/23</link><guid isPermaLink="true">https://yuheinakasaka.github.io/gialog-diary/articles/23</guid><pubDate>Fri, 23 Sep 2022 03:42:08 GMT</pubDate><content:encoded><![CDATA[<p>たまに転職する際の企業の選び方について聞かれることがある。自分は転職を大して経験してるわけではないから具体的なアドバイスはできないだけどとりあえず<strong>自分なりの</strong>企業の見方について少し話すことにしてる。</p>
<p>それはあらゆるものを資本と資産と収益の関係でみるということだ。</p>
<p>といっても別に財務諸表を読むスキルをつけろと言っているわけではなく(あれば良いに越したことはない)、企業というシステムがどういうロジックで動いていて、組織やそこで働く人々が何をやっているかの大雑把な流れを把握するという話である。</p>
<h1>資本を得る・資産を作る・収益を得る</h1>
<p>まず企業の生産活動というのが何をやっているか？という大雑把な流れを整理すると下記に集約できる。</p>
<ul>
<li>資本を得る</li>
<li>資産を作る</li>
<li>収益を得る</li>
</ul>
<p>基本的にはこの３つを回しているだけだ。</p>
<p>例えば銀行からお金を借りて(資本を得る)、商品を作り(資産を作る)、販売して対価をもらう(収益を得る)といった具合。</p>
<p>資本を得るについては借入やVCや市場からの調達や得た収益が資本になったりする。
資産を作るについては製品を作ったりサービスを作ったりすることがそれにあたる。
収益を得るについては資産を活用してそれを金に変える部分のことだ。</p>
<p>資本を得る→資産を作る→収益を得るという各フェーズの中で営業やマーケティングや開発/生産や経理やらなんやらといった職務の人がおり、彼らがそれぞれの役割で働くことで会社が回っていく。結果的に業績が上がったり下がったりという具合になるわけだ。</p>
<h1>転職に生かす</h1>
<p>で、この企業の見方を前提にして転職に際しては自分がどの役割を担うことになるのか？ということを考える。</p>
<p>例えば自分の場合ならソフトウェアエンジニアなのでほぼ「資産を作る」というフェーズに従事することになるとわかる。だから企業を選ぶ際は、どういう資産(サービスや製品)を作っているか、資産(サービスや製品)の成熟度はどの程度か、どういう体制で資産(サービスや製品)を作っているのか、将来の(資産的な)展望を最初に見る。</p>
<p>まぁこれは誰でもやると思うが、しかしこれだけでは不十分で、一番大事なのは<strong>その資産がどうやって収益を産んでいるのか</strong>まで見ることだ。なぜなら資産が収益を産む構造が乏しい場合は資本が減り資産を作ることに投資する原資が減るから結果として、開発全体への体験が悪くなるし給与も上がらなくなるから。</p>
<p>なので一般的にエンジニアとして良いDXと良い給与を得たいなら資産が収益を生み出す構造が強固な会社を選ぶ方が良い転職になりやすいと思う。</p>
<p>といった感じで資本と資産と収益の観点で企業活動を見ると、自分が企業活動のどこを担い、それがその活動にどれほど寄与できるか理解しやすいし、その寄与が回り回ってDXや給与へどれほどつながりそうかというところまで意識できるようになる。</p>
<h1>業務に生かす</h1>
<p>資本を得る→資産を作る→収益を得るという考え方は普段の業務にも当てはめられる。例えばエンジニアの生産活動は企業全体で見ると資産を作る部分にあたるが、この資産を作る部分のエンジニアチームとしての生産活動をさらに分解して、資本を得る→資産を作る→収益を得るという構造にマッピングしてみる。</p>
<ul>
<li>資本を得る→ 人材(スキル)・時間を得る</li>
<li>資産を作る→ 開発</li>
<li>収益を得る→ リリースと運用</li>
</ul>
<p>少々強引だけど無理矢理マッピングしてみるとこんな感じになるはず。</p>
<p>で仮に自分の役職がインフラエンジニアであれば収益を得るの部分が責任範囲になるし、フロントエンド/サーバーサイドエンジニアであれば資産を作る部分が責任範囲になる、といった具合に考えることができる。</p>
<p>各人はその責任範囲における生産活動を行い、またその責任範囲の中で生産性を向上させられることであれば基本なんでもやっていく道理はあるはずだ。もし新しい言語やフレームワークの導入や技術的負債の返済をしたいとなった時に、この観点で自分の立ち位置を理解できていれば、自分の責任範囲の生産性をどれほど向上させそれが組織にどういう寄与をするかを説明しやすくなる。結果として上司への提言にも説得力が出るので受け入れやすくなると思う。</p>
<p>ここでも大事なのは<strong>資産を作る→収益を得る</strong>の部分。どんなに開発を頑張ってもリリースされて安定運用に乗らなければ意味がない。金をドブに捨てているのと同じことになる。という意味ではデプロイ頻度が向上する仕組みづくりが重要で近年CI/CDの仕組みの重要性やSREが取り沙汰されるのはこの資産を作る→収益を得るの間の生産性を向上させる役割を担うためだと思う。</p>
<p>こうした資本を得る→資産を作る→収益を得るという構造は、エンジニアの生産活動に対してもマッピングできたように他の役職でも多分できるはずで、各種部門内における資本を得る→資産を作る→収益を得るという構造のリソースを調整していく仕事がいわゆるCXOという役職だ。もちろんだけどCTOは会社全体の資本を得る→資産を作る→収益を得るという構造を調整している。</p>
<h1>人生の場合</h1>
<p>資本を得る→資産を作る→収益を得るという構造は日々の生活にも見出すことができる。無理矢理マッピングするとこんな感じか。</p>
<ul>
<li>資本を得る→ 金・時間を得る</li>
<li>資産を作る→ 買い物をする・遊ぶ・勉強する</li>
<li>収益を得る→ 金を得る</li>
</ul>
<p>労働者であれば、働いて金を得て、その金を使って何かを買ったり遊んだり勉強したりして自分という資産を豊かにして、それを労働力として使い金を稼いで...という感じ。もし株式や不動産を買ってそこから収益を得られるなら、収益を得る手段が資産それ自体になったりする。いわゆる不労所得。</p>
<p>ちなみにピエール・ブルデューの文化資本は資産を作る部分の資産の初期値パラメータになりそう。</p>
<p>まぁ人生は大体こんな感じだと思う。</p>
<p>ここでも重要なのは<strong>資産を作る→収益を得る</strong>の部分でどんなに勉強しても収益に繋げる仕組みがないなら金は得られない。自分という資産が収益を産み出すためのの生産性というものを考えるなら、資産を作る部分に力を入れるのと同じだけそこから収益を得る部分にも力を入れないといけない。</p>
<p>とはいえ人生が他の生産活動と違うのは別にそんな生産性なんて考えなくても良いことだ。企業活動では無理だけど人生なら自分が満足すれば何も産まなくても別にいいし生産性なんて考えなくても良い。</p>
<p>資本を得る→資産を作る→収益を得るという構造は人生にも見出すことはできるけど、それに意味があるのかどうかは疑問ではある。</p>
<h1>最後に</h1>
<p>資本・資産・収益の構造で身の回りの生産活動を見渡してみると、割と何にでも当てはめることができるとわかる。が、そのマッピングに意味があるかは別問題だ。</p>
<p>せいぜい暇人の思考実験にはなるのでこの3連休が暇でどうしようもない人にはちょうど良いかもしれない。</p>]]></content:encoded></item><item><title><![CDATA[ジョギングを始めた]]></title><description><![CDATA[YuheiNakasaka's diary on 2022-09-17]]></description><link>https://yuheinakasaka.github.io/gialog-diary/articles/22</link><guid isPermaLink="true">https://yuheinakasaka.github.io/gialog-diary/articles/22</guid><pubDate>Sat, 17 Sep 2022 02:05:50 GMT</pubDate><content:encoded><![CDATA[<h1>背景</h1>
<p>今までは出勤やらなんやらで外を出歩くことが多かったが、リモートワークでそれらが完全になくなった。宅食を使ってるから食事も家でなんとかなってしまうし2日間外に出ないなんてこともまぁまぁあるので良くない。</p>
<p>厚生労働省の<a href="https://www.mhlw.go.jp/www1/topics/kenko21_11/b2.html">身体活動・運動</a>によると生活習慣病やメンタルヘルスの予防には普段からの身体活動量の増加が重要らしい。が、一部周囲の先輩方によると40を超えていきなり運動を始めようとして膝や腰を痛めたりしてさらに不健康になってる人もいた。歳をとると健康のために運動しようと思ってさらに怪我をするという惨状が結構あるみたいで、これを避けるには早いうちから運動習慣をつけた方がいい。</p>
<p>自分は元々十数年前は大学で陸上部に入っていたので基礎的な心得はある。厚生労働省の先の資料にもある通り完全に運動経験のない人は歩くことから始めるべきだが自分の場合はそういう背景もあるのでウォーキングよりもジョギングくらいから始めても大丈夫そうと判断し久々にランニングシューズに足を通してジョギングを始めた。</p>
<h1>準備</h1>
<p>まずはジョギングを始めるための準備で買ったものがいくつかあるので書いておく。</p>
<h2>シャツ</h2>
<p>一つはシャツ。ジョギング用のTシャツはいくらあっても困らんのでユニクロで3,4枚まとめて買った。<a href="https://www.uniqlo.com/jp/ja/products/E449017-000/00?colorDisplayCode=66&#x26;sizeDisplayCode=004">ドライEX系のシャツ</a>がサラサラしてて良さそうだった。まぁ普通に気にならない人ならすでに持っている自前のTシャツでも良いと思う。</p>
<h2>骨伝導イヤホン</h2>
<p><img src="https://user-images.githubusercontent.com/1421093/190836175-4a561518-ec86-4f53-bfc9-fd8b2e23c35b.JPG" alt="IMG_3418_res"></p>
<p>あとは骨伝導イヤホン。Shokzの<a href="https://amzn.to/3qNIeTz">OpenMove</a>というのを購入した。実はこれはジョギング専用ということではなく元々気になってはいたんだけど、ちょうど楽天で30%OFFになっており良い機会なので購入した感じ。普通のイヤホンだと耳に入れないといけないが、汗をかくと気持ち悪い感じになるし走ってると抜け落ちそうになるので怖い。OpenMoveなら耳の上にかけるだけだし走ってもブレないので良い。加えて周囲の音がしっかり聞こえるので脇道からの急な自転車の飛び出しなどにも気付きやすいというのもある。</p>
<p>骨伝導イヤホンの便利さについてはこの記事がわかりやすい。自分も似たような意見だ。</p>
<ul>
<li><a href="https://honeshabri.hatenablog.com/entry/aftershokz-air2">骨伝導ヘッドセット着けっぱなしな生活を始めて1年が過ぎた</a></li>
</ul>
<h2>スマホを入れるやつ</h2>
<p>本当は走るときは何も持たない方が楽だけど、出先での何かあった時に困るのでスマホは持ち歩きたい。普段はスマートウォッチとしてシャオミの<a href="https://amzn.to/3DydBZQ">Mi Band</a>を使っているのだけど、これはスマホを携帯していないとワークアウト時の計測の精度が出ない。実測してみたがスマホを携帯している時と比べてだいぶ少なめに走行距離が計測される。たくさん走ったのに過小記録されるとモチベが落ちるので避けたい。</p>
<p>世の中の人々はスマホをどうやって持ち歩いてるのか調べてみたところ、<a href="https://amzn.to/3LnCFEB">腕につけるタイプ</a>と<a href="https://amzn.to/3Dz0U12">腰につけるタイプ</a>の人が多かった。前者は「ランニング アームバンド」とかで検索すれば良いし、後者は「ランニング ウエストポーチ」で検索すれば良い。が自分はどちらも買わずにダイソーで<a href="https://jp.daisonet.com/collections/accessory0205/products/4549131941081">200円のウエストポーチ</a>を購入し、それを襷掛けして使っている。少し揺れるのでだるい感じもあるがある程度使うと慣れるし、最初は安物でいいやと思ってこれを使ってる。</p>
<h2>ランニングシューズ</h2>
<p>10年前に購入したランニングシューズがあったのでそれをそのまま利用。</p>
<h2>ズボン</h2>
<p>陸上部時代の短パンがあったのでそれをそのまま使ってる。</p>
<h1>走る</h1>
<p>実際に準備が整ったので走り始めた。走る前には入念にストレッチをする。準備運動を怠ると体に支障を起こすので絶対にやる。</p>
<p>走るコースは近所にちょうどよくランニングに適した歩道があるのでそこを適当に走ってみることにした。時間帯は朝に走るのは精神的にキツすぎるので仕事終わりの夜。涼しいし人も少ないので集中できる。寝る前すぎると交感神経が高まってしまい睡眠の質が落ちそうなので寝る2時間以上前には走ることにしてる。</p>
<p>初日。走り始めて500mくらいで両脚が死んだ。痛いんじゃなくて400mとかを走って乳酸が溜まり激重になった感じが両脚全体を襲っていた。自分がこんなに走れなくなっていることに絶望しながら結局10分/km程度の激遅ペースで2kmくらい走って終わった。惨敗である。</p>
<p>それから1日おきくらいに走り続けて今は大体10回目くらいなんだけど今は8分/kmのペースで5kmくらいは走れるところまで改善した。足の筋肉が衰えまくっており初日の惨劇を引き起こしていたが心肺機能の方はそれほど衰えていなくて思ったよりも早く走れるようになってきている。</p>
<p>当面は最低10分/kmで1時間くらいは走り続けられるようになることを目標にしている。別に大会に出る予定もないので楽なペースで一定時間走り続けられれば良い。</p>
<h1>Podcast</h1>
<p>ところで走りつづけている際にPodcastを聴くようにしてるのだけどこれがとても良い。大体どのPodcastも1~2時間くらいなので倍速で聴きながら走り終えるとちょうどいい感じでPodcastを一つ消化できる。走ることとPodcastを聴くことしかやれないので、PCやスマホやその他の雑事が集中を妨げることもない。集中してPodcastを聴ける。</p>
<p>聞いているチャンネルは主に技術Podcast。今は下記のPodcastあたりを聴いているところ。</p>
<ul>
<li><a href="https://rebuild.fm/">rebuild.fm</a></li>
<li><a href="https://podcasts.apple.com/jp/podcast/texta-fm/id1530076592?l=en">texta.fm</a></li>
<li><a href="https://misreading.chat/">misreading chat</a></li>
</ul>
<p>Podcastにそんなに詳しくないので技術系のPodcastでおすすめのものがあったら教えてほしい所存。</p>
<h1>感想</h1>
<p>走ると単純に気持ちいい。元々走り慣れているのもあるが走ると不要なことを考えずに集中できるので脳が整理される。</p>
<p>幸い足の関節が痛くなったりということは発生していない。おそらくBMI17.6くらいの低体重なので足への負荷が少ないのと普段から家で体幹トレーニングやスクワットなどをやっているから基礎筋力はついているのだと思う。走り方も昔取った杵柄で悪くないというのもありそう。</p>
<p>ただ足の裏の皮が軽く剥がれたりしててそれはちょっと痛い。豆みたいなもの。これはどうしようもなさそうだが走り続けていけば落ち着くと思う。</p>
<p>あとジョギング後に食べるアイスが美味しすぎてやばい。これはいわゆるサウナ後に飲むオロポみたいなもので麻薬的な"良さ"がある。気をつけたい。</p>
<p>これからはより走りやすい季節になってくるし走るのが楽しくなっていきそう。</p>]]></content:encoded></item><item><title><![CDATA[スマホからTwitterのアプリを消した]]></title><description><![CDATA[YuheiNakasaka's diary on 2022-09-02]]></description><link>https://yuheinakasaka.github.io/gialog-diary/articles/21</link><guid isPermaLink="true">https://yuheinakasaka.github.io/gialog-diary/articles/21</guid><pubDate>Fri, 02 Sep 2022 10:52:51 GMT</pubDate><content:encoded><![CDATA[<p><img src="https://user-images.githubusercontent.com/1421093/188124391-18c7e3d6-c6b9-4cc9-b0f6-27db4fa6a3f8.png" alt="ダウンロード"></p>
<p>コロナで家にいることが多くなって以来、暇があればスマホのTwitterを開くことが多くなっていてあまり良くない習慣だなと思い端末からTwitterのアプリを消した。</p>
<p>以前はせいぜいモバイルのTwitterは移動中や外出先で待ち時間などに触る程度だったが、家で作業していると一休みがてらTwitterを開くようになってしまった。これは生活環境的な理由の他にTwitterのアルゴリズムに依るところも大きい。</p>
<p>以前はリアルタイム順の投稿だったりフォローしている人のツイートがメインだったが最近は1日以上前の知らない誰かの投稿がバンバンTLに流れてくる。それの何がよくないかというとどれもいいねやRTの多い目を引く内容だということだ。</p>
<p>目を引くインパクトのある内容は刺激が強くて、いわば味の強いスナック菓子みたいなものだから引き込まれやすい。その結果そのツイート群を次々に読んでいってしまう。ちょっとTwitterを見てただけなのにいつの間にか数十分経っていたりしてびっくりする。ユーザーの滞在時間を指標にしているTwitter側のアルゴリズムとしては優秀だがQoL的には最悪である。</p>
<p>良くないと感じているのは内容だけでなくTwitterの性質によるものもある。ツイートは140文字前後の文章で一つのコンテキストが完結している。この閉じた内容のテキストが矢継ぎ早にどんどん流れてくる。以前は「めっちゃうんこでた！！」みたいなどうでもいいようなテキストも流れてきたからあんまり感じなかったけど、今はある程度まとまりのある、しかも刺激の強いまとまったテキストが次々に流れてくる。次から次へと脳に流れてくるテキストは感情を強く揺さぶり、そしてすぐまた別のコンテキストのテキストが感情を揺さぶってくる。</p>
<p>数十ツイートそうしたテキストを浴びると、最初に読んだツイートはなんだったか覚えておらず、しかし何か興奮した感覚だけは残るという状態になる。このような脳の使い方は記憶力の低下や思考を短慮にしてしまうことに繋がりそうに感じるし、一つの事柄に対する集中力の衰えにもつながるように感じた。</p>
<p>読書と思考力の間の関係性にどういった効果があるのか科学的なところはわからないが、思うに一つのテーマについてある程度時間を使い考えるという体験が深い思考力を養うことにつながるのではないか。その意味では今のTwitterを長い時間見続けることはその逆の効果をもたらしそうに感じる。</p>
<p>もちろんTwitterでも一つのツイートに対してじっくり時間をかけて考えることもできるが、サービスの性質上それが難しい作りになっている。なので少しでもTwitterのストリームに溺れないようにアプリだけでも削除してみるという選択になった。</p>
<p>昔はTwitterアプリ経由のSSOでログインしないといけないサービスもあったが今は非推奨なので問題なさそう。結局PCでTweetDeckを開くのではというのは確かにそうなんだけど、自分はスタンディングデスクでPCを使うからモバイルアプリほどくつろいで閲覧できないし、Twitter以上に開発をするという誘惑もあったりするからそれほど熱中しなくて済む。</p>
<p>それなら退会すればいいのではみたいな話もあるが、もうかれこれTwitterを10年以上やっていて、少なからずそこでしか繋がりのない関係性もあったりするので辞めるのは不可能。そもそも現実では人間関係のようなものが全くないからTwitterまで失うと社会性が終わるので無理、という感じ。Twitter無しで生きてる人はどうやって人間と関わっているんだ...。</p>
<p>あとちなみにアイキャッチ画像はstable diffusionで「Twitterに囚われている人」で生成した。</p>]]></content:encoded></item><item><title><![CDATA[TaPLを読んでる]]></title><description><![CDATA[YuheiNakasaka's diary on 2022-08-27]]></description><link>https://yuheinakasaka.github.io/gialog-diary/articles/20</link><guid isPermaLink="true">https://yuheinakasaka.github.io/gialog-diary/articles/20</guid><pubDate>Sat, 27 Aug 2022 09:22:56 GMT</pubDate><content:encoded><![CDATA[<p>RustやTypeScriptに関するちょっと込み入ったドキュメントや記事を読んだりすると「部分型」だとか「多相」のようなワードが頻出するのだけどこれらの意味があんまりよくわかっていなかった。</p>
<p>普段よく書いているプログラミング言語のはずなのにその(主に型の)解説で使われている単語が全くわからんというのはどうなのかというあたりに<a href="https://amzn.to/3dPn7wK">型システム入門</a>(通称 TaPL)を読み始めたモチベーションがある。</p>
<p>しかしまぁ普段プログラミングをしていると型キャストしたりジェネリクスを使ったりとか、何かしらの形でそういったワードに由来する言語機能を<strong>使う経験</strong>自体はすでにあり、今更小難しい話を知らなくても使い方はわかるので大して困ることもないわけで。</p>
<p>それにこの先プログラミング言語を本格的に開発する予定もないし、その理論的な意味といったものに特別興味を持つことはなかったわけだがふと<a href="https://qiita.com/dico_leque/items/06ac5837b7a333c5c8da">TypeScriptの型メモ</a>というQiitaの記事なんかを読もうと思うと知らない単語が大量に出てきてぐぬぬ...となるのが不便というのもまた事実。</p>
<p>Blockchain関連の開発の情報を追うのも少し飽きてきてたところなので良い機会と思い重い腰を上げた。</p>
<p>Amazonから届いて読み始めた当初は噂に違わぬ難解な書籍であるな...と感じた。その辺りの苦慮は<a href="https://scrapbox.io/razokulover-tech-memo/%E5%9E%8B%E3%81%AB%E9%96%A2%E9%80%A3%E3%81%99%E3%82%8B%E3%82%88%E3%81%8F%E5%88%86%E3%81%8B%E3%82%89%E3%82%93%E7%94%A8%E8%AA%9E%E3%81%8C%E3%81%82%E3%82%8A%E3%81%99%E3%81%8E%E3%82%8B">型に関連するよく分からん用語がありすぎる</a>に書いている...。</p>
<p>とはいうものの実際10章くらいまでの型付きラムダ計算を理解し操作的意味論を読み下せるまで根気強く粘ることができれば、あとはそれ以降は全ての証明や演習問題は理解できるとは言わなくとも、各概念のエッセンスについて理解する土台は整う気がする。それでも全く簡単ではなく、特に後半はMLやHaskell等の関数型言語の経験がない自分には見たこともない概念だらけで苦戦した。</p>
<p>ちなみに型付きラムダ計算に関してはYoutubeに名大の木原准教授の講義動画があり、これが本当に大変素晴らしく、「あれ？俺、ラムダ計算完全に理解した！？！？」と錯覚させられるのでおすすめ。</p>
<ul>
<li><a href="https://www.youtube.com/playlist?list=PLQJysrzOMzUlaYej_MMl5929fJ5A0qdLK">名大・講義 計算論</a></li>
</ul>
<p>第Ⅲ章 部分型以降は、TaPL読む -> 知らない概念に出会う -> 本文を読み込む -> 意味わからん -> ググる -> 「OOOはXXXみたいなイメージやで」みたいな解説を読む -> 自分なりに噛み砕く -> TaPL読む -> 知らない概念に出会う -> ...の繰り返しになる。</p>
<p>今でも全然理解出来ているとは思わないが以前よりは各種ワードに対するアレルギーのようなものはなく「OOOの言語で言うところのアレね」とか「なるほど、{ ∃X, T }のことね〜」、みたいな論理記号を見てやりたいことがほんのりわかるというくらいにはなってはきた。それだけでも読む価値があったなと思う。</p>
<p>反面、言葉の意味的なものを知りたいだけならWikipediaなりググって各種大学の講義PDFとか読めば良いのでは？みたいな感覚もあった。あくまでTaPLは型理論を大学院以上で学んでいく学生に入門的な知識を授ける本なので、型についてちょっと知りたいくらいのレベルの人には重すぎるかも。その辺はご自身の体力とご相談という気がする。</p>
<p>あと今後はHaskell・OCaml、あとはidrisあたりに手を出してみるとTaPLで出てきた完全に知らんかった概念を言語機能レベルで体感できて身になりそうだな〜と思った。これはこの先の宿題としてみる。</p>]]></content:encoded></item><item><title><![CDATA[深大寺に行った]]></title><description><![CDATA[YuheiNakasaka's diary on 2022-08-20]]></description><link>https://yuheinakasaka.github.io/gialog-diary/articles/19</link><guid isPermaLink="true">https://yuheinakasaka.github.io/gialog-diary/articles/19</guid><pubDate>Sat, 20 Aug 2022 09:59:10 GMT</pubDate><content:encoded><![CDATA[<p>東京都調布市にある深大寺という寺に行った。おそらく調布駅が最寄りだがそこから歩くとなると30分以上はかかる。吉祥寺方面から行くにいても調布側から行くにしてもバスを乗り継ぐ方が良い。車があるなら駐車場はたくさんあるので車で行くべき。そのくらいの距離感の場所にあるので少々アクセス的には面倒な場所である。</p>
<p>しかしながらその距離感のおかげが深大寺自体は夏休み真っ只中の晴天の日でもそれほど混雑しておらず快適に過ごせた。</p>
<p>深大寺には文字通り"深大寺"という寺がある。深大寺には都内では唯一の<a href="https://www.jindaiji.or.jp/about/kokuho.php">国宝・釈迦如来像</a>がありそれを目当てに遠くからやってくる人々がいるようだ。自分はというと深大寺それ自体よりもその周辺の店々や自然豊かな植物園を散歩したくて行った。</p>
<p><img src="https://user-images.githubusercontent.com/1421093/185739346-b6d01671-1439-40c4-a271-76697c1080f7.png" alt="mosaic_20220820183523_600 (1)"></p>
<p>深大寺は蕎麦が有名だ。なんでも周辺には20店ほどの蕎麦屋が深大寺を取り囲むように軒を連ねているらしい。もちろん自分もそばを食べた。晴れていたのでテラス席で池を目の前にして蕎麦を啜った。味はまぁ普通という感じではあったが自然に囲まれた場所で蕎麦を食べられる体験は中々よかった。</p>
<p><img src="https://user-images.githubusercontent.com/1421093/185739573-48cc4089-722d-4215-b2b4-dcec4611a830.jpg" alt="VPih22h5iI6ab0k1660988394_1660988448_600">
<img src="https://user-images.githubusercontent.com/1421093/185739619-433a2c26-9248-41c0-aaf3-7ab04e60cf66.JPG" alt="IMG_3325_600"></p>
<p>また調布市にゆかりのある水木しげるにちなんでゲゲゲの鬼太郎に関する店もあった。寺の前に鬼太郎のモニュメントが飾られていて謎のロケーションではあったが子供を中心にそれなりな人だかりを作っていた。</p>
<p><img src="https://user-images.githubusercontent.com/1421093/185739698-2e7ad039-91a7-4600-bcb1-433d72c8b6e9.png" alt="mosaic_20220820184335_600 (1)"></p>
<p><img src="https://user-images.githubusercontent.com/1421093/185739737-a3934f1d-6e3a-4431-9fab-92631b5cb470.JPG" alt="IMG_3330_600"></p>
<p>深大寺の裏手には<a href="https://ja.wikipedia.org/wiki/%E7%A5%9E%E4%BB%A3%E6%A4%8D%E7%89%A9%E5%85%AC%E5%9C%92">神代植物公園</a>という都内としてはかなり広大な植物公園(有料: 大人500円)がある。有料公園ということでこれまた休日なのに人が全然いないのでとてもゆったり過ごせる。雑木林を歩いたり、広い芝生の広場でピクニックをしたり、4000種類以上のバラが拝めるバラ園があったりとただ歩いてるだけでも飽きない。カナヘビの赤ちゃんを発見して懐かしい気持ちになったりもした。</p>
<p><img src="https://user-images.githubusercontent.com/1421093/185739782-065cdcae-4f6f-4a1b-b34b-2ad0a2156452.JPG" alt="IMG_3338_600"></p>
<p><img src="https://user-images.githubusercontent.com/1421093/185739819-02412eee-64f6-421b-aa51-b9115cf7335f.JPG" alt="IMG_3337_600"></p>
<p>いろんな園がある中でもバラ園の横にある大温室という熱帯植物を中心に展示されている施設が面白かった。ここではあの2年に1度しか咲かない花で有名な<a href="https://ja.wikipedia.org/wiki/%E3%82%B7%E3%83%A7%E3%82%AF%E3%83%80%E3%82%A4%E3%82%AA%E3%82%AA%E3%82%B3%E3%83%B3%E3%83%8B%E3%83%A3%E3%82%AF">ショクダイオオコンニャク</a>が育てられている。今回訪れた際はその姿を拝むことはできなかったが巨大なプランターはその大きさを物語っていた。その他にも背丈を遥かに超えるバナナの木や食虫植物などもあり自然のパワーを感じた。</p>
<p><img src="https://user-images.githubusercontent.com/1421093/185739892-132d5f5a-e38a-417a-aee3-c0df139030a4.JPG" alt="IMG_3341_600">
<img src="https://user-images.githubusercontent.com/1421093/185739917-0168506d-ecc1-45cc-b0b9-5b781a662448.JPG" alt="IMG_3346_600">
<img src="https://user-images.githubusercontent.com/1421093/185739977-7e0eef04-ceef-405b-b26a-54fe63a6eb08.png" alt="mosaic_20220820185044_600 (1)">
<img src="https://user-images.githubusercontent.com/1421093/185740015-a0e50519-c0f2-4bc4-8463-8f4e6a5540fb.JPG" alt="IMG_3343_600">
<img src="https://user-images.githubusercontent.com/1421093/185740065-f3e0a56a-bb42-4d7e-8c1c-2c5ca0b795d7.JPG" alt="IMG_3353_600"></p>
<p>バラ園の前に百台ほどのベンチが一列に並んでいるエリアがある。誰も座ってなくて異様な雰囲気だった。しかもよく見てみると8割くらいのベンチにメッセージが彫ってあってめちゃくちゃ不気味だった。座りずらすぎる...
<img src="https://user-images.githubusercontent.com/1421093/185740263-e0dc2642-3c38-400b-8e3e-4c64c2ecc561.JPG" alt="IMG_3355_600">
<img src="https://user-images.githubusercontent.com/1421093/185740291-beabbcb1-aef1-47ff-be53-85ad9ccc1965.JPG" alt="IMG_3357_600"></p>
<p>都内で静かに自然を感じたいと思った時に選択として挙がるのは、</p>
<ul>
<li>等々力渓谷</li>
<li>高尾山</li>
<li>奥多摩</li>
<li>秋川渓谷</li>
</ul>
<p>くらいなものかなと思っていたのだけど、如何せん等々力渓谷以外はおいそれと気軽に行けるような位置にない。しかし深大寺は自分が今住んでいる地域からアクセスがそれほど悪くない(せいぜい1時間以内で行ける)のでいい場所を見つけた気がした。</p>
<p>他にも都内で自然を感じられるお手軽スポット情報があれば教えてほしい。</p>]]></content:encoded></item><item><title><![CDATA[楽しそうなおじさんを見るのが好き]]></title><description><![CDATA[YuheiNakasaka's diary on 2022-08-18]]></description><link>https://yuheinakasaka.github.io/gialog-diary/articles/18</link><guid isPermaLink="true">https://yuheinakasaka.github.io/gialog-diary/articles/18</guid><pubDate>Thu, 18 Aug 2022 11:51:14 GMT</pubDate><content:encoded><![CDATA[<p>先日Juice=Juice(ハロプロ)と山崎あおいというシンガーソングライターとの対バンライブに行ってきた。ハロプロのアイドルと他ジャンルの歌手との対バンライブは中々珍しい。どういうファンが集まるのかなと少しワクワクしていたが、ほぼ普段の現場と変わらないハロオタだらけであった。</p>
<p>ハロオタといえば大体おじさんであるが、自分もその中の一人だ。だからなのかはわからないがおじさんには親近感がある。特にアイドル現場にいるおじさんはみんな幸せそうな顔をしていて好きだ。</p>
<p>女性アイドルのライブに行ったことのない人は想像できないかもしれないが、アラフォー・アラフィフのおじさん達がめちゃくちゃニコニコで誰の目を気にすることもなくサイリウムを振ったり踊っていたりする。たまにステージで踊っているメンバーよりキレ良く振りコピをしてるおじさんがいたりするのを見るのも良い。皆同じ方向を向いてニコニコして幸せそうな顔をしている。</p>
<p>街中や通勤電車で見かける勤労中のおじさん、中には疲弊してヘロヘロのおじさんも結構いる。彼らは大体みんな険しい顔をしていると思うんだけど、そういうおじさん達がアイドル現場では弾けんばかりの笑顔で楽しんでいるのでその姿を見ると嬉しくなる。</p>
<p>おっさん同士の肩組みみたいな馴れ合いは別に好きではないけど、おじさんになると基本的にうっすら全方面から嫌われるし頼れるものが少なくなっていくからみんなで同じ方向を見て好き勝手楽しめる時間ってすごく貴重だよと思った。</p>]]></content:encoded></item></channel></rss>