{"pageProps":{"issue":{"body":"RustやTypeScriptに関するちょっと込み入ったドキュメントや記事を読んだりすると「部分型」だとか「多相」のようなワードが頻出するのだけどこれらの意味があんまりよくわかっていなかった。\r\n\r\n普段よく書いているプログラミング言語のはずなのにその(主に型の)解説で使われている単語が全くわからんというのはどうなのかというあたりに[型システム入門](https://amzn.to/3dPn7wK)(通称 TaPL)を読み始めたモチベーションがある。\r\n\r\nしかしまぁ普段プログラミングをしていると型キャストしたりジェネリクスを使ったりとか、何かしらの形でそういったワードに由来する言語機能を**使う経験**自体はすでにあり、今更小難しい話を知らなくても使い方はわかるので大して困ることもないわけで。\r\n\r\nそれにこの先プログラミング言語を本格的に開発する予定もないし、その理論的な意味といったものに特別興味を持つことはなかったわけだがふと[TypeScriptの型メモ](https://qiita.com/dico_leque/items/06ac5837b7a333c5c8da)というQiitaの記事なんかを読もうと思うと知らない単語が大量に出てきてぐぬぬ...となるのが不便というのもまた事実。\r\n\r\nBlockchain関連の開発の情報を追うのも少し飽きてきてたところなので良い機会と思い重い腰を上げた。\r\n\r\nAmazonから届いて読み始めた当初は噂に違わぬ難解な書籍であるな...と感じた。その辺りの苦慮は[型に関連するよく分からん用語がありすぎる](https://scrapbox.io/razokulover-tech-memo/%E5%9E%8B%E3%81%AB%E9%96%A2%E9%80%A3%E3%81%99%E3%82%8B%E3%82%88%E3%81%8F%E5%88%86%E3%81%8B%E3%82%89%E3%82%93%E7%94%A8%E8%AA%9E%E3%81%8C%E3%81%82%E3%82%8A%E3%81%99%E3%81%8E%E3%82%8B)に書いている...。\r\n\r\nとはいうものの実際10章くらいまでの型付きラムダ計算を理解し操作的意味論を読み下せるまで根気強く粘ることができれば、あとはそれ以降は全ての証明や演習問題は理解できるとは言わなくとも、各概念のエッセンスについて理解する土台は整う気がする。それでも全く簡単ではなく、特に後半はMLやHaskell等の関数型言語の経験がない自分には見たこともない概念だらけで苦戦した。\r\n\r\nちなみに型付きラムダ計算に関してはYoutubeに名大の木原准教授の講義動画があり、これが本当に大変素晴らしく、「あれ？俺、ラムダ計算完全に理解した！？！？」と錯覚させられるのでおすすめ。\r\n\r\n- [名大・講義 計算論](https://www.youtube.com/playlist?list=PLQJysrzOMzUlaYej_MMl5929fJ5A0qdLK)\r\n\r\n第Ⅲ章 部分型以降は、TaPL読む -> 知らない概念に出会う -> 本文を読み込む -> 意味わからん -> ググる -> 「OOOはXXXみたいなイメージやで」みたいな解説を読む -> 自分なりに噛み砕く -> TaPL読む -> 知らない概念に出会う -> ...の繰り返しになる。\r\n\r\n今でも全然理解出来ているとは思わないが以前よりは各種ワードに対するアレルギーのようなものはなく「OOOの言語で言うところのアレね」とか「なるほど、{ ∃X, T }のことね〜」、みたいな論理記号を見てやりたいことがほんのりわかるというくらいにはなってはきた。それだけでも読む価値があったなと思う。\r\n\r\n反面、言葉の意味的なものを知りたいだけならWikipediaなりググって各種大学の講義PDFとか読めば良いのでは？みたいな感覚もあった。あくまでTaPLは型理論を大学院以上で学んでいく学生に入門的な知識を授ける本なので、型についてちょっと知りたいくらいのレベルの人には重すぎるかも。その辺はご自身の体力とご相談という気がする。\r\n\r\nあと今後はHaskell・OCaml、あとはidrisあたりに手を出してみるとTaPLで出てきた完全に知らんかった概念を言語機能レベルで体感できて身になりそうだな〜と思った。これはこの先の宿題としてみる。","bodyHTML":"<p>RustやTypeScriptに関するちょっと込み入ったドキュメントや記事を読んだりすると「部分型」だとか「多相」のようなワードが頻出するのだけどこれらの意味があんまりよくわかっていなかった。</p>\n<p>普段よく書いているプログラミング言語のはずなのにその(主に型の)解説で使われている単語が全くわからんというのはどうなのかというあたりに<a href=\"https://amzn.to/3dPn7wK\">型システム入門</a>(通称 TaPL)を読み始めたモチベーションがある。</p>\n<p>しかしまぁ普段プログラミングをしていると型キャストしたりジェネリクスを使ったりとか、何かしらの形でそういったワードに由来する言語機能を<strong>使う経験</strong>自体はすでにあり、今更小難しい話を知らなくても使い方はわかるので大して困ることもないわけで。</p>\n<p>それにこの先プログラミング言語を本格的に開発する予定もないし、その理論的な意味といったものに特別興味を持つことはなかったわけだがふと<a href=\"https://qiita.com/dico_leque/items/06ac5837b7a333c5c8da\">TypeScriptの型メモ</a>というQiitaの記事なんかを読もうと思うと知らない単語が大量に出てきてぐぬぬ...となるのが不便というのもまた事実。</p>\n<p>Blockchain関連の開発の情報を追うのも少し飽きてきてたところなので良い機会と思い重い腰を上げた。</p>\n<p>Amazonから届いて読み始めた当初は噂に違わぬ難解な書籍であるな...と感じた。その辺りの苦慮は<a href=\"https://scrapbox.io/razokulover-tech-memo/%E5%9E%8B%E3%81%AB%E9%96%A2%E9%80%A3%E3%81%99%E3%82%8B%E3%82%88%E3%81%8F%E5%88%86%E3%81%8B%E3%82%89%E3%82%93%E7%94%A8%E8%AA%9E%E3%81%8C%E3%81%82%E3%82%8A%E3%81%99%E3%81%8E%E3%82%8B\">型に関連するよく分からん用語がありすぎる</a>に書いている...。</p>\n<p>とはいうものの実際10章くらいまでの型付きラムダ計算を理解し操作的意味論を読み下せるまで根気強く粘ることができれば、あとはそれ以降は全ての証明や演習問題は理解できるとは言わなくとも、各概念のエッセンスについて理解する土台は整う気がする。それでも全く簡単ではなく、特に後半はMLやHaskell等の関数型言語の経験がない自分には見たこともない概念だらけで苦戦した。</p>\n<p>ちなみに型付きラムダ計算に関してはYoutubeに名大の木原准教授の講義動画があり、これが本当に大変素晴らしく、「あれ？俺、ラムダ計算完全に理解した！？！？」と錯覚させられるのでおすすめ。</p>\n<ul>\n<li><a href=\"https://www.youtube.com/playlist?list=PLQJysrzOMzUlaYej_MMl5929fJ5A0qdLK\">名大・講義 計算論</a></li>\n</ul>\n<p>第Ⅲ章 部分型以降は、TaPL読む -> 知らない概念に出会う -> 本文を読み込む -> 意味わからん -> ググる -> 「OOOはXXXみたいなイメージやで」みたいな解説を読む -> 自分なりに噛み砕く -> TaPL読む -> 知らない概念に出会う -> ...の繰り返しになる。</p>\n<p>今でも全然理解出来ているとは思わないが以前よりは各種ワードに対するアレルギーのようなものはなく「OOOの言語で言うところのアレね」とか「なるほど、{ ∃X, T }のことね〜」、みたいな論理記号を見てやりたいことがほんのりわかるというくらいにはなってはきた。それだけでも読む価値があったなと思う。</p>\n<p>反面、言葉の意味的なものを知りたいだけならWikipediaなりググって各種大学の講義PDFとか読めば良いのでは？みたいな感覚もあった。あくまでTaPLは型理論を大学院以上で学んでいく学生に入門的な知識を授ける本なので、型についてちょっと知りたいくらいのレベルの人には重すぎるかも。その辺はご自身の体力とご相談という気がする。</p>\n<p>あと今後はHaskell・OCaml、あとはidrisあたりに手を出してみるとTaPLで出てきた完全に知らんかった概念を言語機能レベルで体感できて身になりそうだな〜と思った。これはこの先の宿題としてみる。</p>","active_lock_reason":null,"assignee":null,"assignees":[],"author_association":"OWNER","closed_at":null,"comments":0,"comments_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/20/comments","created_at":"2022-08-27T09:22:56Z","events_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/20/events","html_url":"https://github.com/YuheiNakasaka/gialog-diary/issues/20","id":1352994529,"labels":[],"labels_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/20/labels{/name}","locked":false,"milestone":null,"node_id":"I_kwDOHaM3jc5QpQ7h","number":20,"performed_via_github_app":null,"reactions":{"+1":0,"-1":0,"confused":0,"eyes":0,"heart":0,"hooray":0,"laugh":0,"rocket":0,"total_count":0,"url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/20/reactions"},"repository_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary","state":"open","state_reason":null,"timeline_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/20/timeline","title":"TaPLを読んでる","updated_at":"2022-08-27T10:03:43Z","url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/20","user":{"avatar_url":"https://avatars.githubusercontent.com/u/1421093?v=4","events_url":"https://api.github.com/users/YuheiNakasaka/events{/privacy}","followers_url":"https://api.github.com/users/YuheiNakasaka/followers","following_url":"https://api.github.com/users/YuheiNakasaka/following{/other_user}","gists_url":"https://api.github.com/users/YuheiNakasaka/gists{/gist_id}","gravatar_id":"","html_url":"https://github.com/YuheiNakasaka","id":1421093,"login":"YuheiNakasaka","node_id":"MDQ6VXNlcjE0MjEwOTM=","organizations_url":"https://api.github.com/users/YuheiNakasaka/orgs","received_events_url":"https://api.github.com/users/YuheiNakasaka/received_events","repos_url":"https://api.github.com/users/YuheiNakasaka/repos","site_admin":false,"starred_url":"https://api.github.com/users/YuheiNakasaka/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/YuheiNakasaka/subscriptions","type":"User","url":"https://api.github.com/users/YuheiNakasaka"}},"issueComments":[],"pickupArticles":[{"body":"![IMG_4468_res](https://github.com/YuheiNakasaka/gialog-diary/assets/1421093/6ea7040a-e2eb-48fa-8332-26950410a5fe)\r\n202カリー堂の6月1日からの新作スイーツはマンゴーレアチーズケーキ。これまで1年以上バスクチーズケーキだけ出してきたところに新たな試みとしてのレアチーズケーキだ。流石にネタ切れ感もあったからいい挑戦な気がする。\r\n\r\n味は思ったよりもチーズが強くなくてふんわりした卵多め?のような味。マンゴーと生クリームもよく合うのでとてもおいしかった。バスクチーズケーキと比べると全体的に軽い印象でカレーを食べた後の食後のデザートとしては最適なボリューム。バスクチーズケーキはそれ単体でもお腹にズシリとくるのでこのレアチーズケーキくらいの重さの方が全体の食事のバランスを考えると良いのかもしれない。\r\n\r\n今後はレアチーズケーキ縛りで季節のフルーツと合わせた新作が続くのかな〜と思うとまた毎月の楽しみが増えそうで嬉しい。","active_lock_reason":null,"assignee":null,"assignees":[],"author_association":"OWNER","closed_at":null,"comments":0,"comments_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/45/comments","created_at":"2023-06-03T05:47:01Z","events_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/45/events","html_url":"https://github.com/YuheiNakasaka/gialog-diary/issues/45","id":1739196475,"labels":[],"labels_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/45/labels{/name}","locked":false,"milestone":null,"node_id":"I_kwDOHaM3jc5nqgg7","number":45,"performed_via_github_app":null,"reactions":{"+1":0,"-1":0,"confused":0,"eyes":0,"heart":0,"hooray":0,"laugh":0,"rocket":0,"total_count":0,"url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/45/reactions"},"repository_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary","state":"open","state_reason":null,"timeline_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/45/timeline","title":"202カリー堂の6月1日からの新作。マンゴーレアチーズケーキ。","updated_at":"2023-06-03T05:47:01Z","url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/45","user":{"avatar_url":"https://avatars.githubusercontent.com/u/1421093?v=4","events_url":"https://api.github.com/users/YuheiNakasaka/events{/privacy}","followers_url":"https://api.github.com/users/YuheiNakasaka/followers","following_url":"https://api.github.com/users/YuheiNakasaka/following{/other_user}","gists_url":"https://api.github.com/users/YuheiNakasaka/gists{/gist_id}","gravatar_id":"","html_url":"https://github.com/YuheiNakasaka","id":1421093,"login":"YuheiNakasaka","node_id":"MDQ6VXNlcjE0MjEwOTM=","organizations_url":"https://api.github.com/users/YuheiNakasaka/orgs","received_events_url":"https://api.github.com/users/YuheiNakasaka/received_events","repos_url":"https://api.github.com/users/YuheiNakasaka/repos","site_admin":false,"starred_url":"https://api.github.com/users/YuheiNakasaka/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/YuheiNakasaka/subscriptions","type":"User","url":"https://api.github.com/users/YuheiNakasaka"}},{"body":"[研鑽Rubyプログラミング 実践的なコードのための原則とトレードオフ](https://amzn.to/3Vfsqra)を読んだ。モチベーションとしては最近Rubyistの間でよく話題にされていたので気になったというミーハーな気持ちと、仕事でよく書くのはRuby(というかRailsでアプリ開発するのが多い)ので何か得られたらラッキーくらいな気持ち半々。\r\n\r\nどんな本かについては他の著名なRubyistの方々が色々と書いておられるのでそちらを読む方が良いかもしれない。例えば[「研鑽Rubyプログラミング」はライブラリ作者の知識・技術の幅と深さを拡大する1冊](https://tagomoris.hatenablog.com/entry/2023/04/19/123501)とかTechRachoの[\r\n『研鑽Rubyプログラミング』は英語版を買った人も買うべき](https://techracho.bpsinc.jp/hachi8833/2023_04_19/129409)とか。\r\n\r\nまたこの本を一言で表した文章としてあとがきから引用すると下記が端的。\r\n>Rubyコミュニティのリーダーをして「完璧超人か」と言わしめるような優れたプログラマーが、「読者が『すでにRubyをよく知っている』ことを前提」として、「Rubyプログラミングの原則と、実装方針を決めるにあたって考慮すべきトレードオフ」を伝えるために執筆されています\r\n\r\nこのような本なのでいわゆる初心者(シンタックスを覚え、ライブラリやアプリケーションの構築方法をやっと覚えたくらいの人たち)には結構ハードな内容かもしれない。一方で自分のような仕事でRubyを書きRailsを使い...といった日々を過ごす中級者くらいの人にとっては全17章のうちどの章からも示唆深い考え方や概念や手法を得られると思う。\r\n\r\nコードを書く時に、Webアプリケーション開発にせよライブラリ開発にせよ、中級者以上になるとプログラマーは常に何かしらの決断を下しながらコードを書いていると思う。どういう設計にするか？どのアルゴリズムを使うか？メソッド名はどうするか？等々の大なり小なりの判断が常に求められる。その時に最良の決断をするために必要なのは「**複数の選択肢を持ち、適切に選択できる力**」だ。これは業務やOSSなどで他人のコードをある程度読み書きする経験を積む過程で自然と醸成されていくことが多いと思うが、この本ではそうした力を得るための指標やコツを惜しみなく書き記してくれているので今までは時間をかけて経験的に学んでいくであろう内容を高速道路的に得られる。\r\n\r\n先んじてレビューを書いてくださっているRubyistの方々もブログの中で書いてあるとおり、こんな書き方ええんか...(例えばデフォルト引数のところの書き方とか)みたいな議論が必要そうなものもある。しかしそれを採用するかしないかに関わらずとりえる選択肢の一つとして頭の片隅に置いておくことは重要であると思う。仕事などで実際に直面する課題に対して、最良の答えを出すためには大抵いくつかの方法があり、それらにはどれも互いにトレードオフが存在し、我々は何かしらの根拠を持って決断する必要がある。その時に一つしか倒し方を知らない人よりも幾つも倒し方を知っている中で最良なものを選択できる人の方がより多くのパターンを考慮できており信頼できる。信頼できる開発者になるためにはともすると無駄かもしれない知識も持っておいた方が良い。\r\n\r\n第一部はRubyの基本的な機能に関する原則とトレードオフについて書かれている。この部では各章で自分のRubyに対する理解力がはっきりとわかる。Rubyは書き手にフレンドリーで何となくでも良い感じに書けてしまうから細かい仕様に関して甘い人も多いと思うが、割とそういう人は取りこぼしている知識などがちょくちょくあって学びがある(特に引数のところとかめちゃくちゃ解説が詳しい)。\r\n\r\n第二部は主にライブラリを書く人向けの話題が中心のような雰囲気だが、何かしらのgemの作者でなくともコードの設計や拡張、リファクタリングやテスト、最適化についての話は一般的な話題なのでアプリ開発してるだけの人でも自分なりのツッコミを入れながら楽しめる感じだった。メタプログラミングについては[メタプログラミングRuby](https://amzn.to/412T1ZP)を読んだ方がいいし、リファクタリングについては[リファクタリング:Rubyエディション](https://amzn.to/3pbzTeS)を読んだ方が良いとは思う。デザインパターンだと[このサイト](https://refactoring.guru/ja/design-patterns/ruby)とかが良さそう。\r\n\r\n第三部はウェブプログラミングに関する話。ここは流石にRubyというコンテキストだけで語るには薄くならざるを得ない気がしていて、実際DBと簡単なアーキテクチャとセキュリティの話くらいしかない。多分Rubyでウェブ開発する人の多くはRails開発者だと思うので最近だと[Sustainable Web Development with Ruby on Rails](https://amzn.to/3VxI1T2)あたりが思想は独特だが面白いのでおすすめ(だいぶ好き嫌い分かれる内容だとは思う...)。その時の感想は[Sustainable Web Development with Ruby on Railsと悲しい性](https://yuheinakasaka.github.io/gialog-diary/articles/3)に書いた。\r\n\r\nとまぁこんな感じで、全体通して個人的には第一部がクライマックスで、第二部は14章のプロファイリングとベンチマーク全般の記述と図書館に呪いの本を実装するギャグみたいなプラグインを書いていく8章の話が面白かったという感想。\r\n\r\n誰彼構わず万人に薦めるのはどうか？という気もするが、中級レベルの開発者がこういう考え方もあるよな〜とクリティカルに読みつつ見識深めていくのが良い読み方なのかなと思った。\r\n\r\n先にもあげたレビューを読んだり、[研鑽Rubyプログラミング](https://scrapbox.io/kensan-ruby/)という日本語サポートページがScrapboxにあるのでこちらを見たりしながら、一つでも気になる部分があれば手に取ってみるといいんじゃないでしょうか。","active_lock_reason":null,"assignee":null,"assignees":[],"author_association":"OWNER","closed_at":null,"comments":0,"comments_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/43/comments","created_at":"2023-05-05T12:25:27Z","events_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/43/events","html_url":"https://github.com/YuheiNakasaka/gialog-diary/issues/43","id":1697533206,"labels":[],"labels_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/43/labels{/name}","locked":false,"milestone":null,"node_id":"I_kwDOHaM3jc5lLk0W","number":43,"performed_via_github_app":null,"reactions":{"+1":0,"-1":0,"confused":0,"eyes":0,"heart":0,"hooray":0,"laugh":0,"rocket":0,"total_count":0,"url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/43/reactions"},"repository_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary","state":"open","state_reason":null,"timeline_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/43/timeline","title":"『研鑽Rubyプログラミング』を読んだ","updated_at":"2023-05-05T12:25:27Z","url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/43","user":{"avatar_url":"https://avatars.githubusercontent.com/u/1421093?v=4","events_url":"https://api.github.com/users/YuheiNakasaka/events{/privacy}","followers_url":"https://api.github.com/users/YuheiNakasaka/followers","following_url":"https://api.github.com/users/YuheiNakasaka/following{/other_user}","gists_url":"https://api.github.com/users/YuheiNakasaka/gists{/gist_id}","gravatar_id":"","html_url":"https://github.com/YuheiNakasaka","id":1421093,"login":"YuheiNakasaka","node_id":"MDQ6VXNlcjE0MjEwOTM=","organizations_url":"https://api.github.com/users/YuheiNakasaka/orgs","received_events_url":"https://api.github.com/users/YuheiNakasaka/received_events","repos_url":"https://api.github.com/users/YuheiNakasaka/repos","site_admin":false,"starred_url":"https://api.github.com/users/YuheiNakasaka/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/YuheiNakasaka/subscriptions","type":"User","url":"https://api.github.com/users/YuheiNakasaka"}},{"body":"![ダウンロード](https://user-images.githubusercontent.com/1421093/188124391-18c7e3d6-c6b9-4cc9-b0f6-27db4fa6a3f8.png)\r\n\r\nコロナで家にいることが多くなって以来、暇があればスマホのTwitterを開くことが多くなっていてあまり良くない習慣だなと思い端末からTwitterのアプリを消した。\r\n\r\n以前はせいぜいモバイルのTwitterは移動中や外出先で待ち時間などに触る程度だったが、家で作業していると一休みがてらTwitterを開くようになってしまった。これは生活環境的な理由の他にTwitterのアルゴリズムに依るところも大きい。\r\n\r\n以前はリアルタイム順の投稿だったりフォローしている人のツイートがメインだったが最近は1日以上前の知らない誰かの投稿がバンバンTLに流れてくる。それの何がよくないかというとどれもいいねやRTの多い目を引く内容だということだ。\r\n\r\n目を引くインパクトのある内容は刺激が強くて、いわば味の強いスナック菓子みたいなものだから引き込まれやすい。その結果そのツイート群を次々に読んでいってしまう。ちょっとTwitterを見てただけなのにいつの間にか数十分経っていたりしてびっくりする。ユーザーの滞在時間を指標にしているTwitter側のアルゴリズムとしては優秀だがQoL的には最悪である。\r\n\r\n良くないと感じているのは内容だけでなくTwitterの性質によるものもある。ツイートは140文字前後の文章で一つのコンテキストが完結している。この閉じた内容のテキストが矢継ぎ早にどんどん流れてくる。以前は「めっちゃうんこでた！！」みたいなどうでもいいようなテキストも流れてきたからあんまり感じなかったけど、今はある程度まとまりのある、しかも刺激の強いまとまったテキストが次々に流れてくる。次から次へと脳に流れてくるテキストは感情を強く揺さぶり、そしてすぐまた別のコンテキストのテキストが感情を揺さぶってくる。\r\n\r\n数十ツイートそうしたテキストを浴びると、最初に読んだツイートはなんだったか覚えておらず、しかし何か興奮した感覚だけは残るという状態になる。このような脳の使い方は記憶力の低下や思考を短慮にしてしまうことに繋がりそうに感じるし、一つの事柄に対する集中力の衰えにもつながるように感じた。\r\n\r\n読書と思考力の間の関係性にどういった効果があるのか科学的なところはわからないが、思うに一つのテーマについてある程度時間を使い考えるという体験が深い思考力を養うことにつながるのではないか。その意味では今のTwitterを長い時間見続けることはその逆の効果をもたらしそうに感じる。\r\n\r\nもちろんTwitterでも一つのツイートに対してじっくり時間をかけて考えることもできるが、サービスの性質上それが難しい作りになっている。なので少しでもTwitterのストリームに溺れないようにアプリだけでも削除してみるという選択になった。\r\n\r\n昔はTwitterアプリ経由のSSOでログインしないといけないサービスもあったが今は非推奨なので問題なさそう。結局PCでTweetDeckを開くのではというのは確かにそうなんだけど、自分はスタンディングデスクでPCを使うからモバイルアプリほどくつろいで閲覧できないし、Twitter以上に開発をするという誘惑もあったりするからそれほど熱中しなくて済む。\r\n\r\nそれなら退会すればいいのではみたいな話もあるが、もうかれこれTwitterを10年以上やっていて、少なからずそこでしか繋がりのない関係性もあったりするので辞めるのは不可能。そもそも現実では人間関係のようなものが全くないからTwitterまで失うと社会性が終わるので無理、という感じ。Twitter無しで生きてる人はどうやって人間と関わっているんだ...。\r\n\r\nあとちなみにアイキャッチ画像はstable diffusionで「Twitterに囚われている人」で生成した。","active_lock_reason":null,"assignee":null,"assignees":[],"author_association":"OWNER","closed_at":null,"comments":0,"comments_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/21/comments","created_at":"2022-09-02T10:52:51Z","events_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/21/events","html_url":"https://github.com/YuheiNakasaka/gialog-diary/issues/21","id":1360028674,"labels":[],"labels_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/21/labels{/name}","locked":false,"milestone":null,"node_id":"I_kwDOHaM3jc5REGQC","number":21,"performed_via_github_app":null,"reactions":{"+1":0,"-1":0,"confused":0,"eyes":0,"heart":0,"hooray":0,"laugh":0,"rocket":0,"total_count":0,"url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/21/reactions"},"repository_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary","state":"open","state_reason":null,"timeline_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/21/timeline","title":"スマホからTwitterのアプリを消した","updated_at":"2022-09-02T10:59:00Z","url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/21","user":{"avatar_url":"https://avatars.githubusercontent.com/u/1421093?v=4","events_url":"https://api.github.com/users/YuheiNakasaka/events{/privacy}","followers_url":"https://api.github.com/users/YuheiNakasaka/followers","following_url":"https://api.github.com/users/YuheiNakasaka/following{/other_user}","gists_url":"https://api.github.com/users/YuheiNakasaka/gists{/gist_id}","gravatar_id":"","html_url":"https://github.com/YuheiNakasaka","id":1421093,"login":"YuheiNakasaka","node_id":"MDQ6VXNlcjE0MjEwOTM=","organizations_url":"https://api.github.com/users/YuheiNakasaka/orgs","received_events_url":"https://api.github.com/users/YuheiNakasaka/received_events","repos_url":"https://api.github.com/users/YuheiNakasaka/repos","site_admin":false,"starred_url":"https://api.github.com/users/YuheiNakasaka/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/YuheiNakasaka/subscriptions","type":"User","url":"https://api.github.com/users/YuheiNakasaka"}}]},"__N_SSG":true}