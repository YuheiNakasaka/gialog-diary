{"pageProps":{"issue":{"body":"RustやTypeScriptに関するちょっと込み入ったドキュメントや記事を読んだりすると「部分型」だとか「多相」のようなワードが頻出するのだけどこれらの意味があんまりよくわかっていなかった。\r\n\r\n普段よく書いているプログラミング言語のはずなのにその(主に型の)解説で使われている単語が全くわからんというのはどうなのかというあたりに[型システム入門](https://amzn.to/3dPn7wK)(通称 TaPL)を読み始めたモチベーションがある。\r\n\r\nしかしまぁ普段プログラミングをしていると型キャストしたりジェネリクスを使ったりとか、何かしらの形でそういったワードに由来する言語機能を**使う経験**自体はすでにあり、今更小難しい話を知らなくても使い方はわかるので大して困ることもないわけで。\r\n\r\nそれにこの先プログラミング言語を本格的に開発する予定もないし、その理論的な意味といったものに特別興味を持つことはなかったわけだがふと[TypeScriptの型メモ](https://qiita.com/dico_leque/items/06ac5837b7a333c5c8da)というQiitaの記事なんかを読もうと思うと知らない単語が大量に出てきてぐぬぬ...となるのが不便というのもまた事実。\r\n\r\nBlockchain関連の開発の情報を追うのも少し飽きてきてたところなので良い機会と思い重い腰を上げた。\r\n\r\nAmazonから届いて読み始めた当初は噂に違わぬ難解な書籍であるな...と感じた。その辺りの苦慮は[型に関連するよく分からん用語がありすぎる](https://scrapbox.io/razokulover-tech-memo/%E5%9E%8B%E3%81%AB%E9%96%A2%E9%80%A3%E3%81%99%E3%82%8B%E3%82%88%E3%81%8F%E5%88%86%E3%81%8B%E3%82%89%E3%82%93%E7%94%A8%E8%AA%9E%E3%81%8C%E3%81%82%E3%82%8A%E3%81%99%E3%81%8E%E3%82%8B)に書いている...。\r\n\r\nとはいうものの実際10章くらいまでの型付きラムダ計算を理解し操作的意味論を読み下せるまで根気強く粘ることができれば、あとはそれ以降は全ての証明や演習問題は理解できるとは言わなくとも、各概念のエッセンスについて理解する土台は整う気がする。それでも全く簡単ではなく、特に後半はMLやHaskell等の関数型言語の経験がない自分には見たこともない概念だらけで苦戦した。\r\n\r\nちなみに型付きラムダ計算に関してはYoutubeに名大の木原准教授の講義動画があり、これが本当に大変素晴らしく、「あれ？俺、ラムダ計算完全に理解した！？！？」と錯覚させられるのでおすすめ。\r\n\r\n- [名大・講義 計算論](https://www.youtube.com/playlist?list=PLQJysrzOMzUlaYej_MMl5929fJ5A0qdLK)\r\n\r\n第Ⅲ章 部分型以降は、TaPL読む -> 知らない概念に出会う -> 本文を読み込む -> 意味わからん -> ググる -> 「OOOはXXXみたいなイメージやで」みたいな解説を読む -> 自分なりに噛み砕く -> TaPL読む -> 知らない概念に出会う -> ...の繰り返しになる。\r\n\r\n今でも全然理解出来ているとは思わないが以前よりは各種ワードに対するアレルギーのようなものはなく「OOOの言語で言うところのアレね」とか「なるほど、{ ∃X, T }のことね〜」、みたいな論理記号を見てやりたいことがほんのりわかるというくらいにはなってはきた。それだけでも読む価値があったなと思う。\r\n\r\n反面、言葉の意味的なものを知りたいだけならWikipediaなりググって各種大学の講義PDFとか読めば良いのでは？みたいな感覚もあった。あくまでTaPLは型理論を大学院以上で学んでいく学生に入門的な知識を授ける本なので、型についてちょっと知りたいくらいのレベルの人には重すぎるかも。その辺はご自身の体力とご相談という気がする。\r\n\r\nあと今後はHaskell・OCaml、あとはidrisあたりに手を出してみるとTaPLで出てきた完全に知らんかった概念を言語機能レベルで体感できて身になりそうだな〜と思った。これはこの先の宿題としてみる。","bodyHTML":"<p>RustやTypeScriptに関するちょっと込み入ったドキュメントや記事を読んだりすると「部分型」だとか「多相」のようなワードが頻出するのだけどこれらの意味があんまりよくわかっていなかった。</p>\n<p>普段よく書いているプログラミング言語のはずなのにその(主に型の)解説で使われている単語が全くわからんというのはどうなのかというあたりに<a href=\"https://amzn.to/3dPn7wK\">型システム入門</a>(通称 TaPL)を読み始めたモチベーションがある。</p>\n<p>しかしまぁ普段プログラミングをしていると型キャストしたりジェネリクスを使ったりとか、何かしらの形でそういったワードに由来する言語機能を<strong>使う経験</strong>自体はすでにあり、今更小難しい話を知らなくても使い方はわかるので大して困ることもないわけで。</p>\n<p>それにこの先プログラミング言語を本格的に開発する予定もないし、その理論的な意味といったものに特別興味を持つことはなかったわけだがふと<a href=\"https://qiita.com/dico_leque/items/06ac5837b7a333c5c8da\">TypeScriptの型メモ</a>というQiitaの記事なんかを読もうと思うと知らない単語が大量に出てきてぐぬぬ...となるのが不便というのもまた事実。</p>\n<p>Blockchain関連の開発の情報を追うのも少し飽きてきてたところなので良い機会と思い重い腰を上げた。</p>\n<p>Amazonから届いて読み始めた当初は噂に違わぬ難解な書籍であるな...と感じた。その辺りの苦慮は<a href=\"https://scrapbox.io/razokulover-tech-memo/%E5%9E%8B%E3%81%AB%E9%96%A2%E9%80%A3%E3%81%99%E3%82%8B%E3%82%88%E3%81%8F%E5%88%86%E3%81%8B%E3%82%89%E3%82%93%E7%94%A8%E8%AA%9E%E3%81%8C%E3%81%82%E3%82%8A%E3%81%99%E3%81%8E%E3%82%8B\">型に関連するよく分からん用語がありすぎる</a>に書いている...。</p>\n<p>とはいうものの実際10章くらいまでの型付きラムダ計算を理解し操作的意味論を読み下せるまで根気強く粘ることができれば、あとはそれ以降は全ての証明や演習問題は理解できるとは言わなくとも、各概念のエッセンスについて理解する土台は整う気がする。それでも全く簡単ではなく、特に後半はMLやHaskell等の関数型言語の経験がない自分には見たこともない概念だらけで苦戦した。</p>\n<p>ちなみに型付きラムダ計算に関してはYoutubeに名大の木原准教授の講義動画があり、これが本当に大変素晴らしく、「あれ？俺、ラムダ計算完全に理解した！？！？」と錯覚させられるのでおすすめ。</p>\n<ul>\n<li><a href=\"https://www.youtube.com/playlist?list=PLQJysrzOMzUlaYej_MMl5929fJ5A0qdLK\">名大・講義 計算論</a></li>\n</ul>\n<p>第Ⅲ章 部分型以降は、TaPL読む -> 知らない概念に出会う -> 本文を読み込む -> 意味わからん -> ググる -> 「OOOはXXXみたいなイメージやで」みたいな解説を読む -> 自分なりに噛み砕く -> TaPL読む -> 知らない概念に出会う -> ...の繰り返しになる。</p>\n<p>今でも全然理解出来ているとは思わないが以前よりは各種ワードに対するアレルギーのようなものはなく「OOOの言語で言うところのアレね」とか「なるほど、{ ∃X, T }のことね〜」、みたいな論理記号を見てやりたいことがほんのりわかるというくらいにはなってはきた。それだけでも読む価値があったなと思う。</p>\n<p>反面、言葉の意味的なものを知りたいだけならWikipediaなりググって各種大学の講義PDFとか読めば良いのでは？みたいな感覚もあった。あくまでTaPLは型理論を大学院以上で学んでいく学生に入門的な知識を授ける本なので、型についてちょっと知りたいくらいのレベルの人には重すぎるかも。その辺はご自身の体力とご相談という気がする。</p>\n<p>あと今後はHaskell・OCaml、あとはidrisあたりに手を出してみるとTaPLで出てきた完全に知らんかった概念を言語機能レベルで体感できて身になりそうだな〜と思った。これはこの先の宿題としてみる。</p>","active_lock_reason":null,"assignee":null,"assignees":[],"author_association":"OWNER","closed_at":null,"comments":0,"comments_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/20/comments","created_at":"2022-08-27T09:22:56Z","events_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/20/events","html_url":"https://github.com/YuheiNakasaka/gialog-diary/issues/20","id":1352994529,"labels":[],"labels_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/20/labels{/name}","locked":false,"milestone":null,"node_id":"I_kwDOHaM3jc5QpQ7h","number":20,"performed_via_github_app":null,"reactions":{"+1":0,"-1":0,"confused":0,"eyes":0,"heart":0,"hooray":0,"laugh":0,"rocket":0,"total_count":0,"url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/20/reactions"},"repository_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary","state":"open","state_reason":null,"timeline_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/20/timeline","title":"TaPLを読んでる","updated_at":"2022-08-27T10:03:43Z","url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/20","user":{"avatar_url":"https://avatars.githubusercontent.com/u/1421093?v=4","events_url":"https://api.github.com/users/YuheiNakasaka/events{/privacy}","followers_url":"https://api.github.com/users/YuheiNakasaka/followers","following_url":"https://api.github.com/users/YuheiNakasaka/following{/other_user}","gists_url":"https://api.github.com/users/YuheiNakasaka/gists{/gist_id}","gravatar_id":"","html_url":"https://github.com/YuheiNakasaka","id":1421093,"login":"YuheiNakasaka","node_id":"MDQ6VXNlcjE0MjEwOTM=","organizations_url":"https://api.github.com/users/YuheiNakasaka/orgs","received_events_url":"https://api.github.com/users/YuheiNakasaka/received_events","repos_url":"https://api.github.com/users/YuheiNakasaka/repos","site_admin":false,"starred_url":"https://api.github.com/users/YuheiNakasaka/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/YuheiNakasaka/subscriptions","type":"User","url":"https://api.github.com/users/YuheiNakasaka"}},"issueComments":[],"pickupArticles":[{"body":"6/29、モーニング娘。とJuice=Juiceの新メンバーが[ハロプロ公式Youtubeチャンネル](https://www.youtube.com/watch?v=OIjk6pzQl30)にて発表された。\r\n\r\n娘。には一般オーデから1人、Juiceには一般オーデから1人+研修生から1人という結果である。\r\n[http://www.helloproject.com/news/14778/](http://www.helloproject.com/news/14778/)\r\n\r\n雑感としては、\r\n\r\n- 研修生から石山咲良が昇格してくれて最高\r\n- 研修生からの昇格人数少なすぎ！？\r\n\r\nという感じ。\r\n\r\n石山咲良に関しては年齢的にも辞めるか否かの瀬戸際だったと思うのでここで選ばれなければもうあとはないかもしれないと誰もが思っていたと思う。なので彼女の昇格に関しては誰もがおめでとうという気持ちなはず。しかも本人がずっと好きだったグループへ加入できることになったわけなのでオタクだけでなく本人の希望も叶った形で全方位丸く収まっている感じがした。\r\n\r\n問題はもう一つの方で、研修生からの昇格人数少なくない？というやつ。\r\n特に今年は研修生の実力診断テストで念願のBPを獲った古株の松原&小野田ペアの昇格を心待ちにしていたオタクも少なくなかったはず。というか自分もこの2人+一般1人の計3人が娘。入りかな〜などと考えてたところもあるので今回の新メンバー発表には驚かされた。松原オタとまーオタを兼ねていた人はまーちゃんのエメグリを受け継いでくれることを確信していたんじゃないかなと思うし、ショックだっただろうと思う。\r\n\r\nさらに追い討ちをかけたのはその後に発表されハロプロ研修生ユニットである。研修生の歴の順に上から5名が選ばれてハロプロ研修生ユニットとして活動すると発表されたのだが、これがあからさまな塩漬け感を感じさせる人選であるし活動も何をどのくらいやるのか未定なため当該メンバーのオタクは激しく落胆した。発表直後は界隈のTwitter/Space/Youtubeが研修生オタクの悲しみと怒りの声で溢れていた。\r\n\r\n色々な話はあると思うがどうしてこういう人選になったのか少し考えてみたが、個人的にはやはり事務所の経営的にメンバーを増やす余力があまり無いのではないか？という説が濃厚なのではと思った。\r\n\r\nOCHA NORMAのデビューもあるしハロプロだけですでに70人近いメンバーを抱えているから人件費だけでも数千万/月と固定費が膨らんでいるはず。しかしここ数年はコロナで興行は思うようにできないので経営的にまだ厳しい。が、研修生はたくさんいるし、せっかくここまで育ててきたのに辞めさせたくはない。となると取れる選択肢としては経営を圧迫しないギリギリの枠を用意して、そこに1番やめる確率の高いメンバーだけを昇格させようとなるはず。\r\n\r\nそれが石山咲良だけだったのではないか。今年BPを獲った2人は歴は長いがなんだかんだでまだ若い。石山と比べた時にギリまだ研修活動の継続ができる余力がある。\r\n\r\nそう考えると割と今回の人選は理解できる。何より昨今の事務所は頑張ってきた研修生を辞めさせたくないのだ、ここが大事だ。だから石山昇格を急いだし、残りの研修生のための引き留め措置としてのグループを作ったのだと思う。\r\n\r\nという感じで厳しい経営状況と研修生への親心みたいなものが生んだのが今回の人選と新体制の発表だったのではないか。\r\n\r\nまぁ塩漬けされた側のオタク各位は放心状態だと思うし同情するが、研修生グループもまた新グルとしてデビューさせるようなOCHA NORMAパターンと決まったわけではないし、今年末~来年にかけてまた卒業するメンバーも出てきそうな雰囲気もなんとなく感じるのでそこで空いた穴を埋めるためにあっさりデビューみたいなこともあるかもしれない。\r\n\r\nその辺りは全くわからんのだけど、今回の件で事務所も昔のように鬼ではないのかもなと思ったので、何かしらの形で彼女たちが報われるようにしてくれるんじゃないかなと淡い期待をしておく。","active_lock_reason":null,"assignee":null,"assignees":[],"author_association":"OWNER","closed_at":null,"comments":0,"comments_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/11/comments","created_at":"2022-06-30T15:49:04Z","events_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/11/events","html_url":"https://github.com/YuheiNakasaka/gialog-diary/issues/11","id":1290332256,"labels":[],"labels_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/11/labels{/name}","locked":false,"milestone":null,"node_id":"I_kwDOHaM3jc5M6Ohg","number":11,"performed_via_github_app":null,"reactions":{"+1":0,"-1":0,"confused":0,"eyes":0,"heart":0,"hooray":0,"laugh":0,"rocket":0,"total_count":0,"url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/11/reactions"},"repository_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary","state":"open","state_reason":null,"timeline_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/11/timeline","title":"ハロプロ新メンバー発表に対する雑感","updated_at":"2022-06-30T15:49:04Z","url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/11","user":{"avatar_url":"https://avatars.githubusercontent.com/u/1421093?v=4","events_url":"https://api.github.com/users/YuheiNakasaka/events{/privacy}","followers_url":"https://api.github.com/users/YuheiNakasaka/followers","following_url":"https://api.github.com/users/YuheiNakasaka/following{/other_user}","gists_url":"https://api.github.com/users/YuheiNakasaka/gists{/gist_id}","gravatar_id":"","html_url":"https://github.com/YuheiNakasaka","id":1421093,"login":"YuheiNakasaka","node_id":"MDQ6VXNlcjE0MjEwOTM=","organizations_url":"https://api.github.com/users/YuheiNakasaka/orgs","received_events_url":"https://api.github.com/users/YuheiNakasaka/received_events","repos_url":"https://api.github.com/users/YuheiNakasaka/repos","site_admin":false,"starred_url":"https://api.github.com/users/YuheiNakasaka/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/YuheiNakasaka/subscriptions","type":"User","url":"https://api.github.com/users/YuheiNakasaka"}},{"body":"- [技術的なアウトプットに疲弊したので振り返る](https://blog.arthur1.dev/entry/2023/01/08/195840)という記事を読んだ\r\n- 内容は「たくさん技術エントリを書いてきたが全然読まれないのでモチベーションが保てない」というお話\r\n- 気持ちはめちゃくちゃ理解できるが、少し思うところもあったので自分の考えをまとめておく\r\n- そもそも論\r\n  - ブコメやエントリに関連したツイートでの言及をみると「モチベが理解できない」「自分のために書くべきでは」「承認欲求のためにやってるのか」みたいなものが結構あった\r\n  - まぁ確かに正論ではあるが、悩み相談に対する正論というのは安易だ。悩みを持つ当人への理解を捨てた浅い回答にしかならないことが多い。正論を述べる側は気持ちいいかもしれないが...。\r\n  - 悩んでいる当人の気持ちを推し測って寄り添った回答を捻り出したいという気持ちがある\r\n- テクニックの話\r\n  - このエントリに対しての反応として先のそもそも論以外だと「自分はOOを気をつけている」「OOをターゲットにして書いている」など技術記事を書く時のコツを述べている人も多かった\r\n  - しかしかの筆者がエントリで**仮説**として書いている内容を見るに、Twitterで知らん人々が適当につぶやいた「技術記事を書くときのコツ」なんかはとっくの昔に本人も考えて実践してるのでは？と思った\r\n    - 確かに[去年は182本の記事を書いた人から見た、技術的なアウトプットに疲弊しないようにするコツ - Lambdaカクテル](https://blog.3qe.us/entry/2023/01/09/221705)で述べられているような、機械的な書き方のフォーマットのようなものはあると思うが瑣末な問題にすぎなそう\r\n- 内容の話\r\n  - 技術記事なので「結局は誰が？どんな内容を？書いたかがほぼ全て」という声は確かに...と思う\r\n    - 信用できる人か否か\r\n    - 有益な情報か否か\r\n  - ただし良い内容なら多くの人に**すぐに**読まれる、というのは間違い\r\n    - 情報はその人にとって**必要な時**でないと刺さらない\r\n      - つまりすぐに多くの人に読まれるには多くの人が**その時に必要としているトピック**を選ぶ方が良い\r\n        - 例えばChatGPTが流行ったときにすぐにAIについての話を書くとか\r\n          - この記事は箇条書きだしフォーマットはめちゃくちゃだけど300はてブ超えた\r\n            - [どのようにしてプログラマはAIに仕事を奪われていくかの妄想](https://yuheinakasaka.github.io/gialog-diary/articles/26)\r\n    - しかし別にIT系メディアの運営をしてるわけではないのでそんな頑張りが必要かと言われると微妙。個人的には不毛な努力だと思う。書きたいときに書きたいことを書くべきだ。\r\n  - 技術記事に関しては**すぐに**という制約がなければわりかし多くの人に読まれやすい\r\n    - 特に検索流入でいつかは誰かに読まれるということが多い。数年前の記事がいきなり知らんところでバズってたみたいなこともある。数年後の自分が読むということも結構ある。\r\n  - 最低限のクオリティを持った技術記事はその中で取り扱った技術コミュニティに対する貢献になるし、インターネット全体の資産にもなる。\r\n  - **すぐに**多くの人に読まれたいという気持ちさえなんとかなれば良さそう\r\n- 暖簾に腕押し\r\n  - かのエントリでは冒頭で暖簾に腕押しという言葉が使われている\r\n  - なぜ読まれないのか？についての考察など色々書いたりしているが結局のところ暖簾に腕押しという言葉に全てが詰まってると思う\r\n  - それなりに時間をかけて対象も吟味してできる限りの手は尽くした、つまり頑張ったわけだ。しかしそれがすぐには報われない。\r\n  - 自分なりによくできたと思って作ったものが、期待に反して全く評価されないという経験は誰しも多かれ少なかれあると思う\r\n  - そもそも論の文脈で言えば、期待値(まともな技術記事は多くの人にすぐ読まれるという期待)が間違っているということになる\r\n  - が、先に述べたようにそれを言ってもまぁ瞑想しましょうねくらいの精神論しかなくて現実的ではない解決策にしかならないと思う\r\n- 解決策 \r\n  - それなりに精神論的な善処は期待しつつ(重要)、かの筆者にかけられる自分からの言葉としては「Twitterを教えてくれ、フォローするよ。」だと思う\r\n  - 流石に自分にとって有益でなければ記事をはてブしたりRTしたりはしないけど、疲弊した気持ちをアウトプットしてくれたことはありがたい。ではそれを読んで何か自分が無理ない範囲でできることがないか？を考えるとTwitterをフォローする、くらいは丁度良い感じの柔らか回答になる気がする。\r\n  - 少なくとも1人はかの筆者の書いた技術記事を読む可能性のある人が増えるわけだ。フォローするだけなら自分にも負荷はない。\r\n  - よっぽどの内容に難があるような人でなければ技術記事を書くことは誰であれ無理ない範囲で続けてほしい。\r\n- その他\r\n  - アウトプットが継続している人はほとんどが自分のために書いている。これは本当にそうだと思う。\r\n  - 実際に30代になってくると脳のメモリやディスク容量が減ってくる。そうなると学んだことが定着しづらくなっていく。\r\n  - 昔なら読んだ本の細かい内容を丸ごと覚えられたのに、今は読んだ本のトピックは覚えているけど細部が思い出せないという感じになりつつある\r\n  - そういう状況になるとどうなっていくかというと、全内容を丸ごと頭に入れるのではなく、全内容にたどり着くためのインデックスだけメモリに入れておくようになる\r\n    - 例えば昔はRubyのtimestampのフォーマット構文を丸ごと暗記していたが今はリファレンスの当該ページへたどり着くためのパスだけ覚えておく、みたいな\r\n    - あそこに行けばOOOの情報にたどり着けるというパス情報。\r\n  - そのインデックスを自分なりに作るのに良いのが技術メモだ。調べたことや読書の感想をとにかく文章にしてアウトプットしておく。そうすると先の例だと「timestampのフォーマットは自分のscrapboxのOOのところにあるな」という感じでパスを自分なりに集約できるようになる。これがないと毎回ググって出てきた記事を読み、その信頼性をチェックして...みたいな感じになってしまう。\r\n  - 自分のためにアウトプットするというのは別に強がりではなくて、自分の老化した脳に対して仕方なくやらないといけない対策という側面が割とある\r\n  - 老化は辛いね...","active_lock_reason":null,"assignee":null,"assignees":[],"author_association":"OWNER","closed_at":null,"comments":0,"comments_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/31/comments","created_at":"2023-01-10T02:56:06Z","events_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/31/events","html_url":"https://github.com/YuheiNakasaka/gialog-diary/issues/31","id":1526677831,"labels":[],"labels_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/31/labels{/name}","locked":false,"milestone":null,"node_id":"I_kwDOHaM3jc5a_0FH","number":31,"performed_via_github_app":null,"reactions":{"+1":0,"-1":0,"confused":0,"eyes":0,"heart":0,"hooray":0,"laugh":0,"rocket":0,"total_count":0,"url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/31/reactions"},"repository_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary","state":"open","state_reason":null,"timeline_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/31/timeline","title":"技術的なアウトプットに疲弊しないようにするコツという記事を読んで思ったこと","updated_at":"2023-01-10T09:08:17Z","url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/31","user":{"avatar_url":"https://avatars.githubusercontent.com/u/1421093?v=4","events_url":"https://api.github.com/users/YuheiNakasaka/events{/privacy}","followers_url":"https://api.github.com/users/YuheiNakasaka/followers","following_url":"https://api.github.com/users/YuheiNakasaka/following{/other_user}","gists_url":"https://api.github.com/users/YuheiNakasaka/gists{/gist_id}","gravatar_id":"","html_url":"https://github.com/YuheiNakasaka","id":1421093,"login":"YuheiNakasaka","node_id":"MDQ6VXNlcjE0MjEwOTM=","organizations_url":"https://api.github.com/users/YuheiNakasaka/orgs","received_events_url":"https://api.github.com/users/YuheiNakasaka/received_events","repos_url":"https://api.github.com/users/YuheiNakasaka/repos","site_admin":false,"starred_url":"https://api.github.com/users/YuheiNakasaka/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/YuheiNakasaka/subscriptions","type":"User","url":"https://api.github.com/users/YuheiNakasaka"}},{"body":"昨日gialogで作ったブログを少しカスタマイズした。\r\n\r\n具体的にはOGPの設定やTwitterボタンの設置。\r\n\r\n最初GitHubのAPIにそんなに詳しくないからYAML front-matterでIssueから渡ってくるレスポンスの種類にどんなものがあるのかわからなかった。とりあえずはGitHubの[APIリファレンス](https://docs.github.com/ja/rest/issues/issues)を読むと大体解決した。\r\n\r\nOGPの画像は記事内を正規表現で走査して最初に登場する画像を設定するようにしている。`/\\((http[s]*.+\\.(?:png|jpg|jpeg|gif))?\\)/i`みたいなやつを使っているが、後方参照のキャプチャしないやつの書き方を思い出せなくてちょっと迷った。今回はキャプチャされてもいいんだけど、気分的に無駄なキャプチャは嫌である。グローバルな一致とかだとパフォーマンス問題が起きたりするなど[詳説 正規表現](https://amzn.to/3NaYcAs)に書いてた気もするから避けられるなら避けた方が良さげ。\r\n\r\nあとちょっと困ってるのはOGP画像が仕様を超える解像度だった場合にTwitter Cardでうまく表示されない問題がある。これはどう対応したものかちょっと考えているところ。\r\n\r\nそれと雑でもいいので検索を設置したくてGoogle検索へのリンクを配置したがまだインデックスされていないから機能しない。時間が解決するのかなこれ。。\r\n\r\n\r\n最後にOGPのテスト。先日[和処黒木](https://twitter.com/kurokijiro)に行った時に八木メシでお馴染みの八木栞FSKと撮った牛しぐれうどんでも載せておく。\r\n![IMG_2962](https://user-images.githubusercontent.com/1421093/170851081-73034fa3-91c3-43be-94db-dcc08b642156.JPG)","active_lock_reason":null,"assignee":null,"assignees":[],"author_association":"OWNER","closed_at":null,"comments":0,"comments_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/2/comments","created_at":"2022-05-29T03:46:32Z","events_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/2/events","html_url":"https://github.com/YuheiNakasaka/gialog-diary/issues/2","id":1251778935,"labels":[],"labels_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/2/labels{/name}","locked":false,"milestone":null,"node_id":"I_kwDOHaM3jc5KnKF3","number":2,"performed_via_github_app":null,"reactions":{"+1":0,"-1":0,"confused":0,"eyes":0,"heart":0,"hooray":0,"laugh":0,"rocket":0,"total_count":0,"url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/2/reactions"},"repository_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary","state":"open","state_reason":null,"timeline_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/2/timeline","title":"ブログのカスタマイズ","updated_at":"2022-05-29T03:46:32Z","url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/2","user":{"avatar_url":"https://avatars.githubusercontent.com/u/1421093?v=4","events_url":"https://api.github.com/users/YuheiNakasaka/events{/privacy}","followers_url":"https://api.github.com/users/YuheiNakasaka/followers","following_url":"https://api.github.com/users/YuheiNakasaka/following{/other_user}","gists_url":"https://api.github.com/users/YuheiNakasaka/gists{/gist_id}","gravatar_id":"","html_url":"https://github.com/YuheiNakasaka","id":1421093,"login":"YuheiNakasaka","node_id":"MDQ6VXNlcjE0MjEwOTM=","organizations_url":"https://api.github.com/users/YuheiNakasaka/orgs","received_events_url":"https://api.github.com/users/YuheiNakasaka/received_events","repos_url":"https://api.github.com/users/YuheiNakasaka/repos","site_admin":false,"starred_url":"https://api.github.com/users/YuheiNakasaka/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/YuheiNakasaka/subscriptions","type":"User","url":"https://api.github.com/users/YuheiNakasaka"}}]},"__N_SSG":true}