{"pageProps":{"issue":{"body":"※以下、エンジニア=ウェブアプリケーションエンジニアとして書いています\r\n\r\n[エンジニアとして今の自分を形成した本を5冊紹介する](https://panda-program.com/posts/introduce-five-books)という記事を読み、自分だったらどの本を選ぶかなと考えてみた。\r\n\r\nこの記事を読んでみた感じ、名著が多いな〜という印象を受けた。対象読者に関しては、\r\n\r\n> 独学でプログラムを書き始めた人やエンジニアスクールを卒業したばかりの方というよりは、実務経験を1~3年くらい積んでいるけど次に何を学べば良いかわからず、自分でイマイチ伸び悩んでいると感じている人\r\n\r\nと著者も書いている通りちょっと実務経験のある人になっているので確かにそういう人達には丁度良さそうだなと思う。\r\n\r\n自分もこのブログの著者が書いているようないわゆる名著の部類に入る本をそういう時期にいくつか読んではいるが、それらはタメになった本ではあるものの\"今の自分を形成した\"とまではいえないよなーと思う。\r\n\r\n本というのは読むタイミングが大切だ。プログラミングを始めたての頃にClean Architectureを読んだ時の感想(ふーんとしかならなかった)と負債に塗れたプロジェクトをくぐり抜けた後に読んだClean Architectureへの感想では全く異なるはずである。\r\n\r\nまたいくら名著といっても時間と共に古くなってしまう考えや方法が出てきてしまう。技術書であればなおさらだ。よくこういう記事で挙げられる「UNIXという考え方」もその一つで、[名著「UNIXという考え方 - UNIX哲学」は本当に名著なのか？ 〜 著者のガンカーズは何者なのかとことん調べてみた](https://qiita.com/ko1nksm/items/f1800c6ff6dd649d7429)という記事ではこの本の今では古臭くなってしまっている箇所などを丁寧に検証してくれている。\r\n\r\n古くなってしまったからもうその本は読む必要がない、というわけではないからこそ名著であるというのもまた事実である。現代に至るまでの歴史の中で今を振り返るために、また未来を見据えるために重要なヒントをくれたりする。\r\n\r\nでは\"自分を形成した\"本とはどういう本なのか、それはこの道へのめり込むきっかけや感動を得た本ではないかなと思う。\r\n\r\nそれが結果的に名著と呼ばれる本であることも多いが自分にとってはどちらかというとスキルが圧倒的に未熟な頃に読んだ本、いわゆる入門書のようなものがそれにあたるのではないかと考えた。今風にいうと\"駆け出しエンジニア\"のようなスキルレベルの頃に読んだ本である。\r\n\r\n未熟な頃に感動した思い出があるからこそ今もエンジニアとして仕事を続けられていると思う。なのでそういう思い出が詰まった本、思い出補正全開本を\"自分を形成した本\"として5冊選んでみた。思い出補正全開ゆえ今回選んだ本は決して全てがおすすめできるわけではないので悪しからず。\r\n\r\n# [初めてのRuby](https://www.oreilly.co.jp/books/9784873113678/) \r\nRuby1.8と1.9に対応している。現在3.1とかを使っていることを考えると感慨深い...。この本を読んだのは大学卒業~新卒入社した位のタイミングだ。当時の会社ではPHPでウェブアプリケーションを(なんとなく)書いていた。しかし世間はどこもかしこもRuby on Railsを使っておりミーハー心からRubyについて学ばねばな〜などと思い手に取った本だ。\r\n\r\n完全な初学者が手を出すとわからないかもと思えるような一見無味乾燥な本ではあるけど解説がとても丁寧なので当時の自分くらいのレベルでも理解できた。この本を読み切れたことで技術書を読むことのハードルが下がった。またRubyという言語の面白さとかスピリットみたいなものが垣間見えた気がしている。と同時に各種一般的なプログラミングに関する用語についての理解も深まったのでPHPを書く時やドキュメントを読む時の理解力も上がったという副次効果もあった気がする。\r\n\r\n対応Rubyバージョンを見て貰えば分かるとおり今読むべき本ではないとは思うけどあのぐいぐいと引き込まれる体験は確実に今の自分を形成するスタート地点になっていると思う。\r\n\r\n# [Rails3レシピブック](https://www.sbcr.jp/product/4797363821/)\r\nRailsといえば[Ruby on Railsチュートリアル](https://railstutorial.jp/)である。ウェブアプリケーション開発者においては言わずと知れた当時の神サイトだ。当時はまだ全て無料で閲覧できたのでその点もありがたかった。\r\n\r\nこのサイトでTwitterもどきを作ったり、このRails3レシピブックと睨めっこしながら粛々と自分の考える最強のwebサービスを開発するみたいなことを毎日やっていた。その開発体験から派生してすぐあとに起業することになるわけであるが、その時も開発時にいつも横にはRails3レシピブックがあった。\r\n\r\nこれまた対応Railsバージョンを見て貰えば分かるとおり今読むべき本ではないものの、当時の自分にwebサービス開発の楽しさを教えてくれた気がするので個人的に思い出深い本であることは確かである。\r\n\r\n# [リファクタリング: Rubyエディション](https://www.amazon.co.jp/%E3%83%AA%E3%83%95%E3%82%A1%E3%82%AF%E3%82%BF%E3%83%AA%E3%83%B3%E3%82%B0-Ruby%E3%82%A8%E3%83%87%E3%82%A3%E3%82%B7%E3%83%A7%E3%83%B3-Jay-Fields/dp/4048678841)\r\n起業してから一人で我流でwebサービス開発を続けていく中でコードが肥大化していきどうしたもんかね...となってしまう時期がきた。恥ずかしながらこの頃は**Done is better than perfect**よろしく、動けば良い、さっさとリリースじゃ!とガンガン積み木を重ねていくようにコーディングをしていた。実際自分以外に誰もコードを触らないわけなのでなんとかなっていたわけであるが、それなりにコードが大きくなると自分一人でもこれは不味いなと感じるようなコードが増えてきた。その時に手に取ったのがリファクタリング: Rubyエディションである。\r\n\r\nこの本は[リファクタリング 既存のコードを安全に改善する](https://amzn.to/3b3ACYK)というオリジナルのRuby版である。元の本の方はJavaで書かれているのだが、PHPとかJavascriptとか当時のweb開発の言語しか触っていなかった自分に敷居が高く感じられた。一方Ruby版の方はすでに慣れ親しんだ言語で書かれているということで臆せず読み始められた。\r\n\r\nデザインパターンやOOPなどの実装テクニックについて見聞きしたことはあっても実際にどう使えばいいのかというのがいまいち理解できずにいたが、これを読んで腑に落ちた。実際のコードベースに取り入れやすいという環境やタイミングがぴったり合ったというのも大きいがそれにしても学んだ概念がすぐに実践で活用できたというのは気持ちよかった。\r\n\r\n# [コンピュータシステムの理論と実装 ―モダンなコンピュータの作り方](https://amzn.to/3J5EuFa)\r\nある程度webサービスなどが作れるようになるともっとコンピュータの仕組みとか低レイヤーについても知りたくなった。こういうことは本来大学でCSを学んできている人には素地としてあるのかもしれないが自分には全くその手の知識がなかった。\r\n\r\n巷でおすすめされている本やいわゆる名著というものを手に取って読んだりはしてみたが難しいしピンとこないものが多かった。元来頭が良くなくて抽象化能力とか理解力が低いという自覚はあったので理論が延々と続くようなちゃんとした教科書が得意ではないのである。\r\n\r\nそんな時に手に取ったのが[コンピュータシステムの理論と実装 ―モダンなコンピュータの作り方](https://amzn.to/3J5EuFa)だ。これはNANDという電子素子から始まり、CPU、OS、コンパイル、VMと実装していき最終的にはNAND Tetrisと呼ばれるゲームまで作ろうという本。作ると言っても物理的に回路を構築したりするわけではなくHDLや好きな言語(自分はPython)でコードを書いて組み上げていくという流れになる。とはいえ本格的に論理回路から順に組み上げて一応は一通りのコンピュータがどうやって動いているのかを手を動かしながら知れるのでコンピュータへの解像度が爆上がりして感動した。\r\n\r\nOSとか言語を作る部分は流石に全然物足りないのだけど低レイヤーを理解するための足がかりにはなるはず。この本はすでに名著の部類に入ってるし今でも十分おすすめできる。[From Nand To Tetris](https://www.nand2tetris.org/)や巷にすでに実装を行なっている人たちのコードがGitHubやQiitaやZennにたくさんあるのでそれらを参照しながら挑戦すると良いと思う。\r\n\r\n# [Writing An Interpreter In Go](https://amzn.to/3PCmynY)\r\n上記の本を読み始めたのと同じ理由でこの本を読んだ。タイトルの通りGolangでインタプリタを書く本である。プログラミング言語を作ってみるというのは誰もがやってみたいことの一つではあると思うが、いきなりドラゴンブックを読めるわけはないのでどうしたもんかと思っているような人に丁度良い本。\r\n\r\nこれまた解説メインではなくLexer・Parser・Evaluatorを実際に手を動かしながら順を追って解説してくれるのが嬉しい。プログラミング言語を作るっていうのはこういうことなのかと膝を叩く経験ができる。\r\n\r\n今だと日本語版で[Go言語でつくるインタプリタ](https://amzn.to/3PZvOmd)という本になっているので手に取りやすそう。同じ著者がこの本の[コンパイラ版](https://amzn.to/3POSB3K)も出しているのでそちらも読むとさらに理解が深まると思われる。\r\n\r\nよく考えると最初から最後までしっかりと読み込んだ洋書はこれが初めてだったかもしれない。そういう意味でも自分の身になった良い本だったなと思う。\r\n\r\n# 最後に\r\n[エンジニアとして今の自分を形成した本を5冊紹介する](https://panda-program.com/posts/introduce-five-books)という記事を読み、自分にとっての5冊を選んで書いてみた。\r\n\r\n今の自分を形成した本というのは必ずしも万人にとって有益な本ではないかもしれないが、その人の人生を垣間見ることができるという意味で酒のつまみにはなるようなネタだなと思った。他の人(もっと自分より年季の入った人)の経験も読みたい。\r\n\r\nわからない概念だったものが腑に落ちて一段解像度が上がる体験をすると感動してしまうタイプの人間なので分からないことだらけのエンジニア初期の頃に読んだ本の方が贔屓目で見てしまう。新卒の彼らに技術書をお薦めする時は慎重を期して選出するのだけどある意味おじさんの自分語りのようなレベルならばこういう少し偏った選び方もありだと思う。\r\n\r\nそういえばこれを書くために今までどんな本を読んできたかなと振り返ってみたが、圧倒的にインターネット上の記事やドキュメントなどのコンテンツを読んでいる方が多いと思った。\r\n\r\n今は当時にも増してweb上のコンテンツがテキスト・動画問わず溢れているので「おすすめの本」というのを挙げることにそんなに意味はなくなっていくのかもしれない。とはいえ媒体が変わっても初心者が成長していく過程でブレークスルーのきっかけとなった思い出の\"何か\"はあるわけでそれを共有して感慨に浸っているのをみるのはまぁまぁ面白いと思う。\r\n\r\n最後に自分がプログラミングで万能感を得た最古の原体験として、このゆーすけベーさんのブログ記事が出発点だったなと思い出したので貼っておく。一人部屋にこもってこの記事を読みながらクローラを書いていた、フォルダに溜まっていく大量の画像を見つめながら万能感に浸っていたのがめちゃくちゃ懐かしい...\r\n\r\n- [Rubyやってみる！（新おっぱいスクリプトもあるぉ）](https://yusukebe.com/posts/2012/0520074309/)","bodyHTML":"<p>※以下、エンジニア=ウェブアプリケーションエンジニアとして書いています</p>\n<p><a href=\"https://panda-program.com/posts/introduce-five-books\">エンジニアとして今の自分を形成した本を5冊紹介する</a>という記事を読み、自分だったらどの本を選ぶかなと考えてみた。</p>\n<p>この記事を読んでみた感じ、名著が多いな〜という印象を受けた。対象読者に関しては、</p>\n<blockquote>\n<p>独学でプログラムを書き始めた人やエンジニアスクールを卒業したばかりの方というよりは、実務経験を1~3年くらい積んでいるけど次に何を学べば良いかわからず、自分でイマイチ伸び悩んでいると感じている人</p>\n</blockquote>\n<p>と著者も書いている通りちょっと実務経験のある人になっているので確かにそういう人達には丁度良さそうだなと思う。</p>\n<p>自分もこのブログの著者が書いているようないわゆる名著の部類に入る本をそういう時期にいくつか読んではいるが、それらはタメになった本ではあるものの\"今の自分を形成した\"とまではいえないよなーと思う。</p>\n<p>本というのは読むタイミングが大切だ。プログラミングを始めたての頃にClean Architectureを読んだ時の感想(ふーんとしかならなかった)と負債に塗れたプロジェクトをくぐり抜けた後に読んだClean Architectureへの感想では全く異なるはずである。</p>\n<p>またいくら名著といっても時間と共に古くなってしまう考えや方法が出てきてしまう。技術書であればなおさらだ。よくこういう記事で挙げられる「UNIXという考え方」もその一つで、<a href=\"https://qiita.com/ko1nksm/items/f1800c6ff6dd649d7429\">名著「UNIXという考え方 - UNIX哲学」は本当に名著なのか？ 〜 著者のガンカーズは何者なのかとことん調べてみた</a>という記事ではこの本の今では古臭くなってしまっている箇所などを丁寧に検証してくれている。</p>\n<p>古くなってしまったからもうその本は読む必要がない、というわけではないからこそ名著であるというのもまた事実である。現代に至るまでの歴史の中で今を振り返るために、また未来を見据えるために重要なヒントをくれたりする。</p>\n<p>では\"自分を形成した\"本とはどういう本なのか、それはこの道へのめり込むきっかけや感動を得た本ではないかなと思う。</p>\n<p>それが結果的に名著と呼ばれる本であることも多いが自分にとってはどちらかというとスキルが圧倒的に未熟な頃に読んだ本、いわゆる入門書のようなものがそれにあたるのではないかと考えた。今風にいうと\"駆け出しエンジニア\"のようなスキルレベルの頃に読んだ本である。</p>\n<p>未熟な頃に感動した思い出があるからこそ今もエンジニアとして仕事を続けられていると思う。なのでそういう思い出が詰まった本、思い出補正全開本を\"自分を形成した本\"として5冊選んでみた。思い出補正全開ゆえ今回選んだ本は決して全てがおすすめできるわけではないので悪しからず。</p>\n<h1><a href=\"https://www.oreilly.co.jp/books/9784873113678/\">初めてのRuby</a></h1>\n<p>Ruby1.8と1.9に対応している。現在3.1とかを使っていることを考えると感慨深い...。この本を読んだのは大学卒業~新卒入社した位のタイミングだ。当時の会社ではPHPでウェブアプリケーションを(なんとなく)書いていた。しかし世間はどこもかしこもRuby on Railsを使っておりミーハー心からRubyについて学ばねばな〜などと思い手に取った本だ。</p>\n<p>完全な初学者が手を出すとわからないかもと思えるような一見無味乾燥な本ではあるけど解説がとても丁寧なので当時の自分くらいのレベルでも理解できた。この本を読み切れたことで技術書を読むことのハードルが下がった。またRubyという言語の面白さとかスピリットみたいなものが垣間見えた気がしている。と同時に各種一般的なプログラミングに関する用語についての理解も深まったのでPHPを書く時やドキュメントを読む時の理解力も上がったという副次効果もあった気がする。</p>\n<p>対応Rubyバージョンを見て貰えば分かるとおり今読むべき本ではないとは思うけどあのぐいぐいと引き込まれる体験は確実に今の自分を形成するスタート地点になっていると思う。</p>\n<h1><a href=\"https://www.sbcr.jp/product/4797363821/\">Rails3レシピブック</a></h1>\n<p>Railsといえば<a href=\"https://railstutorial.jp/\">Ruby on Railsチュートリアル</a>である。ウェブアプリケーション開発者においては言わずと知れた当時の神サイトだ。当時はまだ全て無料で閲覧できたのでその点もありがたかった。</p>\n<p>このサイトでTwitterもどきを作ったり、このRails3レシピブックと睨めっこしながら粛々と自分の考える最強のwebサービスを開発するみたいなことを毎日やっていた。その開発体験から派生してすぐあとに起業することになるわけであるが、その時も開発時にいつも横にはRails3レシピブックがあった。</p>\n<p>これまた対応Railsバージョンを見て貰えば分かるとおり今読むべき本ではないものの、当時の自分にwebサービス開発の楽しさを教えてくれた気がするので個人的に思い出深い本であることは確かである。</p>\n<h1><a href=\"https://www.amazon.co.jp/%E3%83%AA%E3%83%95%E3%82%A1%E3%82%AF%E3%82%BF%E3%83%AA%E3%83%B3%E3%82%B0-Ruby%E3%82%A8%E3%83%87%E3%82%A3%E3%82%B7%E3%83%A7%E3%83%B3-Jay-Fields/dp/4048678841\">リファクタリング: Rubyエディション</a></h1>\n<p>起業してから一人で我流でwebサービス開発を続けていく中でコードが肥大化していきどうしたもんかね...となってしまう時期がきた。恥ずかしながらこの頃は<strong>Done is better than perfect</strong>よろしく、動けば良い、さっさとリリースじゃ!とガンガン積み木を重ねていくようにコーディングをしていた。実際自分以外に誰もコードを触らないわけなのでなんとかなっていたわけであるが、それなりにコードが大きくなると自分一人でもこれは不味いなと感じるようなコードが増えてきた。その時に手に取ったのがリファクタリング: Rubyエディションである。</p>\n<p>この本は<a href=\"https://amzn.to/3b3ACYK\">リファクタリング 既存のコードを安全に改善する</a>というオリジナルのRuby版である。元の本の方はJavaで書かれているのだが、PHPとかJavascriptとか当時のweb開発の言語しか触っていなかった自分に敷居が高く感じられた。一方Ruby版の方はすでに慣れ親しんだ言語で書かれているということで臆せず読み始められた。</p>\n<p>デザインパターンやOOPなどの実装テクニックについて見聞きしたことはあっても実際にどう使えばいいのかというのがいまいち理解できずにいたが、これを読んで腑に落ちた。実際のコードベースに取り入れやすいという環境やタイミングがぴったり合ったというのも大きいがそれにしても学んだ概念がすぐに実践で活用できたというのは気持ちよかった。</p>\n<h1><a href=\"https://amzn.to/3J5EuFa\">コンピュータシステムの理論と実装 ―モダンなコンピュータの作り方</a></h1>\n<p>ある程度webサービスなどが作れるようになるともっとコンピュータの仕組みとか低レイヤーについても知りたくなった。こういうことは本来大学でCSを学んできている人には素地としてあるのかもしれないが自分には全くその手の知識がなかった。</p>\n<p>巷でおすすめされている本やいわゆる名著というものを手に取って読んだりはしてみたが難しいしピンとこないものが多かった。元来頭が良くなくて抽象化能力とか理解力が低いという自覚はあったので理論が延々と続くようなちゃんとした教科書が得意ではないのである。</p>\n<p>そんな時に手に取ったのが<a href=\"https://amzn.to/3J5EuFa\">コンピュータシステムの理論と実装 ―モダンなコンピュータの作り方</a>だ。これはNANDという電子素子から始まり、CPU、OS、コンパイル、VMと実装していき最終的にはNAND Tetrisと呼ばれるゲームまで作ろうという本。作ると言っても物理的に回路を構築したりするわけではなくHDLや好きな言語(自分はPython)でコードを書いて組み上げていくという流れになる。とはいえ本格的に論理回路から順に組み上げて一応は一通りのコンピュータがどうやって動いているのかを手を動かしながら知れるのでコンピュータへの解像度が爆上がりして感動した。</p>\n<p>OSとか言語を作る部分は流石に全然物足りないのだけど低レイヤーを理解するための足がかりにはなるはず。この本はすでに名著の部類に入ってるし今でも十分おすすめできる。<a href=\"https://www.nand2tetris.org/\">From Nand To Tetris</a>や巷にすでに実装を行なっている人たちのコードがGitHubやQiitaやZennにたくさんあるのでそれらを参照しながら挑戦すると良いと思う。</p>\n<h1><a href=\"https://amzn.to/3PCmynY\">Writing An Interpreter In Go</a></h1>\n<p>上記の本を読み始めたのと同じ理由でこの本を読んだ。タイトルの通りGolangでインタプリタを書く本である。プログラミング言語を作ってみるというのは誰もがやってみたいことの一つではあると思うが、いきなりドラゴンブックを読めるわけはないのでどうしたもんかと思っているような人に丁度良い本。</p>\n<p>これまた解説メインではなくLexer・Parser・Evaluatorを実際に手を動かしながら順を追って解説してくれるのが嬉しい。プログラミング言語を作るっていうのはこういうことなのかと膝を叩く経験ができる。</p>\n<p>今だと日本語版で<a href=\"https://amzn.to/3PZvOmd\">Go言語でつくるインタプリタ</a>という本になっているので手に取りやすそう。同じ著者がこの本の<a href=\"https://amzn.to/3POSB3K\">コンパイラ版</a>も出しているのでそちらも読むとさらに理解が深まると思われる。</p>\n<p>よく考えると最初から最後までしっかりと読み込んだ洋書はこれが初めてだったかもしれない。そういう意味でも自分の身になった良い本だったなと思う。</p>\n<h1>最後に</h1>\n<p><a href=\"https://panda-program.com/posts/introduce-five-books\">エンジニアとして今の自分を形成した本を5冊紹介する</a>という記事を読み、自分にとっての5冊を選んで書いてみた。</p>\n<p>今の自分を形成した本というのは必ずしも万人にとって有益な本ではないかもしれないが、その人の人生を垣間見ることができるという意味で酒のつまみにはなるようなネタだなと思った。他の人(もっと自分より年季の入った人)の経験も読みたい。</p>\n<p>わからない概念だったものが腑に落ちて一段解像度が上がる体験をすると感動してしまうタイプの人間なので分からないことだらけのエンジニア初期の頃に読んだ本の方が贔屓目で見てしまう。新卒の彼らに技術書をお薦めする時は慎重を期して選出するのだけどある意味おじさんの自分語りのようなレベルならばこういう少し偏った選び方もありだと思う。</p>\n<p>そういえばこれを書くために今までどんな本を読んできたかなと振り返ってみたが、圧倒的にインターネット上の記事やドキュメントなどのコンテンツを読んでいる方が多いと思った。</p>\n<p>今は当時にも増してweb上のコンテンツがテキスト・動画問わず溢れているので「おすすめの本」というのを挙げることにそんなに意味はなくなっていくのかもしれない。とはいえ媒体が変わっても初心者が成長していく過程でブレークスルーのきっかけとなった思い出の\"何か\"はあるわけでそれを共有して感慨に浸っているのをみるのはまぁまぁ面白いと思う。</p>\n<p>最後に自分がプログラミングで万能感を得た最古の原体験として、このゆーすけベーさんのブログ記事が出発点だったなと思い出したので貼っておく。一人部屋にこもってこの記事を読みながらクローラを書いていた、フォルダに溜まっていく大量の画像を見つめながら万能感に浸っていたのがめちゃくちゃ懐かしい...</p>\n<ul>\n<li><a href=\"https://yusukebe.com/posts/2012/0520074309/\">Rubyやってみる！（新おっぱいスクリプトもあるぉ）</a></li>\n</ul>","active_lock_reason":null,"assignee":null,"assignees":[],"author_association":"OWNER","closed_at":null,"comments":0,"comments_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/16/comments","created_at":"2022-07-26T07:58:54Z","events_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/16/events","html_url":"https://github.com/YuheiNakasaka/gialog-diary/issues/16","id":1317850509,"labels":[],"labels_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/16/labels{/name}","locked":false,"milestone":null,"node_id":"I_kwDOHaM3jc5OjM2N","number":16,"performed_via_github_app":null,"reactions":{"+1":0,"-1":0,"confused":0,"eyes":0,"heart":0,"hooray":0,"laugh":0,"rocket":0,"total_count":0,"url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/16/reactions"},"repository_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary","state":"open","state_reason":null,"timeline_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/16/timeline","title":"エンジニアとして今の自分を形成した本","updated_at":"2022-07-26T08:00:11Z","url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/16","user":{"avatar_url":"https://avatars.githubusercontent.com/u/1421093?v=4","events_url":"https://api.github.com/users/YuheiNakasaka/events{/privacy}","followers_url":"https://api.github.com/users/YuheiNakasaka/followers","following_url":"https://api.github.com/users/YuheiNakasaka/following{/other_user}","gists_url":"https://api.github.com/users/YuheiNakasaka/gists{/gist_id}","gravatar_id":"","html_url":"https://github.com/YuheiNakasaka","id":1421093,"login":"YuheiNakasaka","node_id":"MDQ6VXNlcjE0MjEwOTM=","organizations_url":"https://api.github.com/users/YuheiNakasaka/orgs","received_events_url":"https://api.github.com/users/YuheiNakasaka/received_events","repos_url":"https://api.github.com/users/YuheiNakasaka/repos","site_admin":false,"starred_url":"https://api.github.com/users/YuheiNakasaka/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/YuheiNakasaka/subscriptions","type":"User","url":"https://api.github.com/users/YuheiNakasaka"}},"issueComments":[],"pickupArticles":[{"body":"※**専門家ではないので、以下の文章はn=1の経験談として読んでください。**\r\n\r\n[腰痛エンジニアを支える技術](https://zenn.dev/ryo_kawamata/articles/a596e3325ba865)や[手が痺れるエンジニアを支える技術](https://zenn.dev/seya/articles/35cd238d79b6e0)を読んだ。\r\n\r\n上の記事の腰痛や神経痛をはじめ、肩こり・頭痛・神経痛・腹痛など**すぐに死ぬわけではないがQoLに結構な支障をきたす慢性の疾患**を抱えたエンジニアというのは回りを見渡しても割と多いと感じる。自分の場合はそれが**痔**である。\r\n\r\n下痢や便秘の際に切れ痔になった経験があるという人は結構多い。だから「あー痔か、自分もなったことあるよ」みたいな軽い反応をもらうのだけどそういう人の痔は一過性のもので、いわば転んで擦りむいたくらいのレベル。自分の場合は外痔核である。\r\n\r\n外痔核とは何かという説明をする前にそもそも痔にはいくつか種類があるので簡単に説明しておく。\r\n\r\n# 痔の種類\r\n## 裂肛\r\nいわゆる切れ痔である。便秘で便が固くなってしまった場合や下痢でゆるくなり便の排出速度が上がり切れてしまうなどが主な原因。通常は一般的な切り傷同様数日で直るが、何度も繰り返していると潰瘍ができたり傷が直る際に肛門が狭くなっていく肛門狭窄という状態になる。この段階までくると排便時は毎回切れ痔が起きるようになってしまう。\r\n\r\n## 痔核\r\nいわゆるいぼ痔である。肛門に強い力がかかるとうっ血が発生し、手に血豆ができるような感じでイボができる。日常生活における肛門に負荷をかかる全ての場面で発生する可能性がある。痔核の中でも肛門の中にできる内痔核と外痔核がありそれぞれ症状や対処法は異なる。\r\n\r\n### 内痔核\r\n内痔核は肛門の中にイボができるタイプの痔核である。段階がレベル1~4まであり1~2ではそれほど生活に支障はないが3~4レベルになると手術が推奨される。1~2レベルの内側の痔は排便時に血は出たりイボが露出したりするが痛みはそれほどないが、それ以上のレベルになると下着に鮮血が見られるような状態になる。ここまでくると手術だ。\r\n\r\n### 外痔核\r\n外痔核は肛門の外にイボができるタイプの痔核である。この痔の特徴はなんと言っても**とにかく痛いこと**である。肛門の中とは違い、肛門の外側は神経が集中しているのでイボに何かが触れると激痛が走る。強めの口内炎が肛門にできたと想像してほしい。排便時に100%の確率でそれが刺激されるのでどう頑張っても痛みから逃れられない。排便はほぼ毎日あるので毎日の排便が恐怖になる。\r\n\r\n### 痔ろう\r\n肛門内部が炎症を起こし化膿、その膿を排出するための膿の管が肛門に残った状態のこと。激しい痛みや発熱を伴う。どの段階であれ、痔ろうとなればほぼ手術になる。\r\n\r\n# 対処法\r\n痔ろう以外はどの痔の場合も酷くない場合は基本的に保存療法か外来処置(飲み薬や塗り薬など)で済むはず。一方で慢性化している場合は手術となることが多い。最悪の場合は人工肛門になることもあるし、そもそも大腸などに腫瘍があったりして別の病気の場合もある。\r\n\r\nとにかく早めの受診によりあらゆる悲劇は避けられるので自分で判断せず早めに近くの肛門科へ行くのが最適解だ。\r\n\r\n# 自分の話\r\nここまでは痔の一般的な話だが、ここからは自分の経験の話をする。\r\n\r\n先述した通り自分の場合は外痔核だった。月に数回、肛門に力を入れた瞬間激痛が走る日が来て、それを境に1~2週間ほどは毎日排便時にお尻を針で刺されたような感じになる。辛いは辛いのだけど、とはいえこれは日常生活の工夫により少し快方することもあるのでのらりくらりと病院へ行かず10年ほど経ってしまっていた。\r\n\r\nいよいよ厳しいな...と感じてきて病院へ。そこでレベル2程度の外痔核とレベル1程度の内痔核と診断された。内側の痔に関しては病院で検査を受けて発覚したくらいのレベルで自覚もなかった程度。出血もない。\r\n\r\nただどうしても外痔核が辛いなら痔核の部分を切開して取る、内痔核なら内痔核硬化療法(ジオン注射)を勧められたが、まだ必須というほどでもないという。様子見でも今は大丈夫とのことだったので一旦は保留にして1年ほど時間が経ち、今に至るという感じ。\r\n\r\nなのでいまだに痔と共に生きるという生活をしている。(余談だが先生自体も痔持ちで、数年前に手術したが時間が経ってまた痔になっちゃった...と言ってて大変そうだった)。\r\n\r\n診察の中で、そもそも自分は何故外痔核ができやすいのか？を先生といろいろ振り返りながら話してみて気づいたのは**排便時のいきみの強さ**である。\r\n\r\n体質や食生活の問題で固い便になりやすかったこと、元々スポーツをやっていてある程度筋肉があったこと、決まった時間に必ず排便しようとすること、などが重なったことで、必要以上に強くいきんで硬めの便を無理してでも排出しようという習慣ができてしまっていた。これは幼い頃からの習慣だが誰にも注意されなかったし、自分でも悪いことだと気づかなかった。なんか気づかずにやっていた悪習が自然と痔を招いてしまっていたのだ。\r\n\r\n# 痔を悪化させないためにやってること\r\n以下は主に痔核を悪化させないためにやっていることを書く。\r\n\r\n## 肛門に力をかけない\r\n外痔核に関してはとにかく肛門に過度な力をかけないことが一番重要。なので排便時は無理して出すために腹筋に力を入れたりしない。ちゃんと便意を待て。腹筋に力を入れたりしなくても便は出る。すぐ出ないからといって急がない。\r\n\r\nその他にもスクワットなどの筋トレで踏ん張る時や重いものを持つ時なども肛門に力がかかり続けないように気を付ける。肛門への負荷を気をつけるだけでもかなり良くなる。\r\n\r\n肛門に力をかけずに直腸から便を送り出すような意識で排便する訓練(ヨガに近い)もやっていて、これはコツが掴めるととても楽に排便ができるようになる。言葉では上手く伝えられないが、これができないと手術してもまた下手くそな排便により痔が再発する。排便のフォーム矯正と思ってやった。\r\n\r\n## 水分を十分に摂る\r\n固い便になるとどうしても排便に力が必要になってしまう。これを防ぐために水分は十分に摂った方が安全。\r\n\r\n自分の場合は500mlのタンブラーでぬるま湯を最低3杯~4杯は飲むようにしている。しかもこまめに摂るようにしている。これはがぶ飲みしても人間が一度に吸収できる量には限界があるので。ただしトイレの頻度が多くなってしまうのでなかなか難しいという人もいるかも。\r\n\r\n## 食事\r\n食事に関しては人それぞれだろうなという感じ。よく言われるのは3食バランスよくしっかり食べる方が良いくらいな感じで、特に野菜がいいとか発酵食品がいいみたいなものはない。\r\n\r\nが、自分がいろいろ試してみた結果だけ参考までに書いておく。これが正解!とかいうものはない。\r\n\r\n- 飯を食べる前にまず多めに水を飲む\r\n  - 飲む場合と飲まない場合で翌日の便の硬さが変わるっぽい\r\n- お米を最低1合は食べる\r\n  - 米を食べる量が少ないと排便サイクルが狂う。便も何故か硬くなる。\r\n- 納豆・ヨーグルト・キムチを毎日適度に摂る\r\n  - 腸がよく動いてるな〜と感じるようになる。便秘予防にはなりそう。単純に発酵食品が好きというのもあるので楽しみ半分で続けている。\r\n- アルコールを摂取しない\r\n  - 酒を飲むと翌日の便が硬くなるっぽかったのでやめた。\r\n- 寝る3時間前までに食事は済ませる\r\n  - 寝る前まで何か食べてると翌日変なタイミングで便意がきたりするようになる。変なタイミングだと都合によっては我慢しないといけないことにもなりかねない。我慢すると便が固くなっていく原因になるのでなるべく避けている。\r\n\r\n食事に関してはこれくらい。あとは外食などでも好きなものを好きなように食っている。\r\n\r\n## 睡眠\r\n夜更かしすればするほど内臓の調子がおかしくなる。大抵排便サイクルが狂うし便がいつもと違う感じになる。そもそも一般的に考えても寝るべき時間に寝た方が内臓や神経系にも良いはずなので無理せず寝ている。\r\n\r\n## 毎日湯船に浸かる\r\n下半身の冷えは血流を悪くして痔ができやすくなる元なので毎日湯船に浸かるようになった。これは病院の先生にも勧められたのでやっている。それまでは湯船を洗うのも湯を準備するのもとにかく面倒だからシャワーで済ませることが多かったが今は毎日湯船で体の芯まで温めるようになった。\r\n\r\n痔が辛い時も温かいお湯に使っていると血行が良くなり、いくらか治りが早くなるので痔持ちの人は全員湯船に浸かった方が良い。\r\n\r\n## 座り続けない、またはスタンディングデスク\r\n上記の生活習慣的な対策は前提として、それ以外にできることとして座りすぎないようにするというのがある。エンジニアは職業柄椅子に座り続けがちだが、それは上述の「肛門に負荷をかける」につながるので良くない。\r\n\r\n自分は適当に60分おきにiPhoneでタイマーをセットして時間が来たら立ち上がり少しフラフラしてまた座る、といった習慣で作業していた。これはこれで良い。\r\n\r\nが、外痔核真っ只中の時はとにかく座ってるだけで痛いことがある。そういう時は立っていた方が楽。なのでそういう時はスタンディングデスクで作業している。\r\n\r\n[電動昇降デスク](https://flexispot.jp/e7-set.html)というスタンディングデスク専用の机があったりするので検討はしたがちょっと試してみるか〜と買うには高いしデカい。要らなくなった時の処理が面倒。\r\n\r\nそこで自宅にあったデスクとちゃぶ台で下のようなハリボテスタンディングデスクを作って使っている(もうかれこれ半年以上これで仕事してる)。\r\n\r\n![https://user-images.githubusercontent.com/1421093/180774838-28eb541b-9d6b-4b9b-8998-92d54f935d7a.JPG](https://user-images.githubusercontent.com/1421093/180774838-28eb541b-9d6b-4b9b-8998-92d54f935d7a.JPG)\r\n\r\nポイントは下のクッション部分。これ無しで床に立って作業するとすぐ足の裏が痛くて終わる。たまたま普段使いしていた座椅子がちょうど良い高さだったのでこれでなんとかやれている。\r\n\r\n座椅子が微妙という時は[リカバリーサンダル](https://amzn.to/3RCOp9I)というのをスリッパがわりにして履いて作業するのも良かった。看護師さんなど長時間立ち仕事をしてる人たちが履いているらしい。\r\n\r\n![IMG_3954_res](https://user-images.githubusercontent.com/1421093/216818045-1deb3b26-24a0-4db1-a26c-018cc15a6d42.JPG)\r\n\r\n基本的に1時間~２時間くらい立ち続けて、少し座って休んで、みたいな感じで1日仕事をしている。最初のうちは30分も作業してるとキツくなってくるがこれは慣れ。続けてれば慣れてくる。\r\n\r\n座らなくなることでお尻への負荷だけでなく腰への負荷も体感的に減ってる。**変な姿勢で座るより変な姿勢で立つ方が難しい**ので姿勢の維持の観点では個人的には立ってる方が楽だ。\r\n\r\nただし立ち続けると足が痛くなってくるのでそれは適度に休みを入れるしかない。あと、デスクの高さの設定をミスると肩が凝る。高さの微調整を細かくやりたいなら先程の挙げたちゃんとした電動昇降デスクを買った方が良さそう。\r\n\r\n# 現在\r\n病院に通って以降色々やったのもあって、最近はもう少なくとも3~4ヶ月は外痔核で苦しんでいない。上記の悪化させないための諸々を今後も続けていく必要はありそうだけど、基本的には硬い便を避けつつ排便時に気をつけることさえできればあとはなんとかなりそう。\r\n\r\nまた以前のような厳しい状態になったら本格的に手術を検討してみようかねとも先生とは話している。手術せずになんとか終えられたら良いな…という感じ(内痔核の手術なら術後の痛みは少なめだからすぐやってもいいけど、外痔核の術後は出産を経験した人でも辛かったと聞いたのでめちゃくちゃ怖いのが正直なところ)。\r\n\r\n# おわりに\r\n痔の\"エンジニア\"を支える技術と題して書き始めたがエンジニア的な要素はスタンディングデスクくらいで、その他は痔一般の知識と痔主の経験談になってしまったので申し訳ない(のでZennではなく自分のブログに書いた)。\r\n\r\n排便は食事と同じくほぼ避けることができないし肛門以外の場所で代替することもできない。肛門はとてもクリティカルな場所だからこそ健康に保つための最低限の知識は全員持っておいて損はない。\r\n\r\n痔は身近な病気であり軽んじられがちだが、悪化させるとQoLが駄々下がりするはめになる。[何年も痔に苦しんでいる - 怠惰を求めて勤勉に行き着く](https://fushiroyama.hatenablog.com/entry/2022/11/20/063019)では慢性的な切れ痔に悩まされているエンジニアの話が書いてある。痔核の場合は手術(と術後の結構な痛み)を耐えられればある程度の期間は良くなるようだが悪化した切れ痔の場合はより大変そうだ。痔ろうに関しては言わずもがな。\r\n\r\n痔に関してはどの状況でもとりあえず病院に行くのがいつでも最適解なので気になったら恥ずかしがらずにすぐ行け。\r\n\r\n# リンク\r\n- [痔の総合情報サイト《痔-web》](https://www.iwadare.jp/G-WEB/)\r\n  - 痔主の聖典","active_lock_reason":null,"assignee":null,"assignees":[],"author_association":"OWNER","closed_at":null,"comments":0,"comments_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/40/comments","created_at":"2023-02-05T13:12:02Z","events_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/40/events","html_url":"https://github.com/YuheiNakasaka/gialog-diary/issues/40","id":1571425666,"labels":[],"labels_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/40/labels{/name}","locked":false,"milestone":null,"node_id":"I_kwDOHaM3jc5dqg2C","number":40,"performed_via_github_app":null,"reactions":{"+1":0,"-1":0,"confused":0,"eyes":0,"heart":0,"hooray":0,"laugh":0,"rocket":0,"total_count":0,"url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/40/reactions"},"repository_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary","state":"open","state_reason":null,"timeline_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/40/timeline","title":"痔のエンジニアを支える技術","updated_at":"2023-02-05T13:12:02Z","url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/40","user":{"avatar_url":"https://avatars.githubusercontent.com/u/1421093?v=4","events_url":"https://api.github.com/users/YuheiNakasaka/events{/privacy}","followers_url":"https://api.github.com/users/YuheiNakasaka/followers","following_url":"https://api.github.com/users/YuheiNakasaka/following{/other_user}","gists_url":"https://api.github.com/users/YuheiNakasaka/gists{/gist_id}","gravatar_id":"","html_url":"https://github.com/YuheiNakasaka","id":1421093,"login":"YuheiNakasaka","node_id":"MDQ6VXNlcjE0MjEwOTM=","organizations_url":"https://api.github.com/users/YuheiNakasaka/orgs","received_events_url":"https://api.github.com/users/YuheiNakasaka/received_events","repos_url":"https://api.github.com/users/YuheiNakasaka/repos","site_admin":false,"starred_url":"https://api.github.com/users/YuheiNakasaka/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/YuheiNakasaka/subscriptions","type":"User","url":"https://api.github.com/users/YuheiNakasaka"}},{"body":"[目の見えない人は世界をどう見ているのか](https://amzn.to/3P9Tl3g)という本を読んだ。その中に目の見える人と目の見えない人が美術館で一緒に作品を鑑賞するソーシャルビューという試みが書いてあった。\r\n\r\nソーシャルビューではまず見える人が作品について語る。その際に重視するのは作品の形や客観的な情報ではなく本人の主観的な感想だ。それを聞いた目の見えない人たちはどう言った作品なのか想像しながら質問したり感想を述べたりする。このインタラクティブなやり取りの中で互いに作品の意図や意味を感じ楽しむ。このような美術鑑賞の試みがソーシャルビューである。\r\n\r\n> 情報化の時代にわざわざ集まってみんなで鑑賞する面白さは、見えないもの、つまり「意味」の部分を共有すること\r\n\r\n作品そのものを見るだけで得られるものはただのデータである。そのデータを受けた鑑賞者がそこにどのような意味を見出すのか。その共有を通じて目の見えない人は作品を脳内で立体的に補完し、さらにその補完した作品を受けてそこに自らの意味を見出していく。こういう営みだ。\r\n\r\n> 作品を鑑賞するとは自分で作品を作り直すこと\r\n\r\n「鑑賞する = 自分で作り直す」という文章に感銘を受けた。\r\n\r\nというのも自分は鑑賞が苦手だからだ。映画やアニメや漫画などあらゆる物語に対してそのストーリーを追うことしかできない。キャラクターに感情移入することもないしストーリーの不自然さに苛立つこともない。だから深読みとか考察みたいなものもできない。登場人物のパラメータの暗記と筋書きを追うことで満足してしまう。\r\n\r\nいわば\"物語\"という食べ物を食べても消化されずに排泄されてしまう感覚に近い。胃で消化されず腸で吸収されず体の一部になるような、そういう摂取の仕方が\"鑑賞\"なのだと思うのだけど、自分の場合は舌で感じた味くらいしか摂取できないわけだ。\r\n\r\n大味なバトル漫画を読んだりするときは心臓がバクバクすることもある。スナック菓子を食べているような感覚。刺激の強い味はどんどん食べたくなるしよく噛まずに早食いになる。物語を異常な速度で雑に食ってると変なアドレナリンが出ちゃうのだと思う。\r\n\r\nこれは老化とか体調が悪いからとかそういうのは関係なくて昔からこんな感じである。むしろそういう自分に自覚的になってきた分まだマシだ。\r\n\r\n鑑賞することは自分で作り直すということであるならば、自分は全く鑑賞が出来ていない。勿体無いなと思う。クリティカルシンキングだとか共感性の問題だとか、色々と理由はあるのかもしれないが浅い人間だな〜と感じてしまう。\r\n\r\nそういえばオードリーのオールナイトニッポンで春日が何十年もジャンプを読み続けているがどの作品も誰々が強いとか弱いみたいな話だけで自分と作品との関係から出てくる感想とか考察みたいなものが一切なくて若林にdisられてたのを聞いてめちゃくちゃ共感と安心感を覚えた。俺だ〜〜〜となった。","active_lock_reason":null,"assignee":null,"assignees":[],"author_association":"OWNER","closed_at":null,"comments":0,"comments_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/12/comments","created_at":"2022-07-08T09:00:11Z","events_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/12/events","html_url":"https://github.com/YuheiNakasaka/gialog-diary/issues/12","id":1298710077,"labels":[],"labels_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/12/labels{/name}","locked":false,"milestone":null,"node_id":"I_kwDOHaM3jc5NaL49","number":12,"performed_via_github_app":null,"reactions":{"+1":0,"-1":0,"confused":0,"eyes":0,"heart":0,"hooray":0,"laugh":0,"rocket":0,"total_count":0,"url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/12/reactions"},"repository_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary","state":"open","state_reason":null,"timeline_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/12/timeline","title":"鑑賞が出来ない","updated_at":"2022-07-08T09:00:11Z","url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/12","user":{"avatar_url":"https://avatars.githubusercontent.com/u/1421093?v=4","events_url":"https://api.github.com/users/YuheiNakasaka/events{/privacy}","followers_url":"https://api.github.com/users/YuheiNakasaka/followers","following_url":"https://api.github.com/users/YuheiNakasaka/following{/other_user}","gists_url":"https://api.github.com/users/YuheiNakasaka/gists{/gist_id}","gravatar_id":"","html_url":"https://github.com/YuheiNakasaka","id":1421093,"login":"YuheiNakasaka","node_id":"MDQ6VXNlcjE0MjEwOTM=","organizations_url":"https://api.github.com/users/YuheiNakasaka/orgs","received_events_url":"https://api.github.com/users/YuheiNakasaka/received_events","repos_url":"https://api.github.com/users/YuheiNakasaka/repos","site_admin":false,"starred_url":"https://api.github.com/users/YuheiNakasaka/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/YuheiNakasaka/subscriptions","type":"User","url":"https://api.github.com/users/YuheiNakasaka"}},{"body":"![IMG_2791](https://user-images.githubusercontent.com/1421093/174434078-aca7b457-1701-4cde-a1a1-2ad6ae79acf1.JPG)\r\n\r\n\r\n下北沢にある[202カリー堂](https://www.instagram.com/202currydou/)というカレー屋の抹茶バスクチーズケーキが旨い。\r\n\r\n個人的には過去に食べてきたバスクチーズケーキの中で1番好き。チーズの味が濃厚、程よいとろみ、深みのある抹茶のほろ苦さ、香ばしい焼き加減、抹茶クリームの甘味が全てマッチしてて最高。少し時間が経つと(溶けて?)柔らかくなってしまいやや口当たりが微妙になるので提供されたらすぐ食べた方が良い。\r\n\r\n店名にある通りスパイスカレー屋がメインではある(しそれ自体も普通に美味しい)んだけど、ここは抹茶のバスクチーズケーキ屋を名乗った方が良いレベル。\r\n\r\nその他にも抹茶のプリンもマッドな口当たりでたまらん旨さだしテリーヌも良かった。スイーツ全般ハズレがない。\r\n\r\n下北沢駅からのアクセスも良いしもちろん人気店なので休日の昼間やティータイムは最低でも1時間は並ぶがその価値はある。夜は列が落ち着いて少し早めに入れるので夜に行くのはアリかもしれない。\r\n\r\n客層は20~30代くらいの女性が9割くらいなのでその辺はおっさんが単騎で乗り込むには少し躊躇するかもしれないけど気合いで並びましょう。\r\n\r\nちなみにスイーツ単体注文時はドリンクを注文しないといけないのでその点は注意が必要。","active_lock_reason":null,"assignee":null,"assignees":[],"author_association":"OWNER","closed_at":null,"comments":1,"comments_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/9/comments","created_at":"2022-06-18T10:37:45Z","events_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/9/events","html_url":"https://github.com/YuheiNakasaka/gialog-diary/issues/9","id":1275757390,"labels":[],"labels_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/9/labels{/name}","locked":false,"milestone":null,"node_id":"I_kwDOHaM3jc5MCoNO","number":9,"performed_via_github_app":null,"reactions":{"+1":0,"-1":0,"confused":0,"eyes":0,"heart":0,"hooray":0,"laugh":0,"rocket":0,"total_count":0,"url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/9/reactions"},"repository_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary","state":"open","state_reason":null,"timeline_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/9/timeline","title":"202カリー堂のバスクチーズケーキ","updated_at":"2022-12-17T12:15:58Z","url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/9","user":{"avatar_url":"https://avatars.githubusercontent.com/u/1421093?v=4","events_url":"https://api.github.com/users/YuheiNakasaka/events{/privacy}","followers_url":"https://api.github.com/users/YuheiNakasaka/followers","following_url":"https://api.github.com/users/YuheiNakasaka/following{/other_user}","gists_url":"https://api.github.com/users/YuheiNakasaka/gists{/gist_id}","gravatar_id":"","html_url":"https://github.com/YuheiNakasaka","id":1421093,"login":"YuheiNakasaka","node_id":"MDQ6VXNlcjE0MjEwOTM=","organizations_url":"https://api.github.com/users/YuheiNakasaka/orgs","received_events_url":"https://api.github.com/users/YuheiNakasaka/received_events","repos_url":"https://api.github.com/users/YuheiNakasaka/repos","site_admin":false,"starred_url":"https://api.github.com/users/YuheiNakasaka/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/YuheiNakasaka/subscriptions","type":"User","url":"https://api.github.com/users/YuheiNakasaka"}}]},"__N_SSG":true}