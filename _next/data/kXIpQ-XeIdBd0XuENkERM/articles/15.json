{"pageProps":{"issue":{"body":"4月頃に痔が酷くなり座るのが嫌になってしまった。座りたくないのであれば立って仕事をするしかないが、スタンディングデスクをいきなり買っても使わなくなるんじゃないのか？という不安もありまずは手近でスタンディングデスクっぽいものをこしらえて試してみることにした。\r\n\r\n# 最初の1~2週間\r\nめちゃくちゃ足が痛くなる。そりゃ毎日8時間くらいほぼ立ち続けているから当然だ。足の裏、股関節、ふくらはぎなどへの疲れがすごい。風呂に浸かってマッサージをしてた。\r\n\r\n作業はというと割と普通にできる。腰が痛くなったり首が痛くなったりということはない。長時間座っていると腰が痛くなることがあったがそれがなくなったのは少し良かったかなと感じた程度。\r\n\r\n会議が無駄に長くなったりするとキレそうになる。さっさと要点まとめて終われボケ...と強く思うようになる。\r\n\r\n# 1ヶ月ほど経過\r\n立ち続けることがそれほど気にならなくなる。2時間くらいは平気で立ったままでいられる感じ。とはいえ一日の仕事が終わると座って仕事をしている時よりも全身の疲労感は多め。\r\n\r\nスタンディング力が高まったおかげでダラダラ続く会議への苛立ちが少し減った。さっさと終われとは思うけど...。\r\n\r\n夏が近づくとPCからの熱と部屋全体の熱気が顔の辺りを覆う。座っている時よりも汗をかきやすくなる。30℃を超えると流石に冷房がないとキツくなった。\r\n\r\n# 2ヶ月経過\r\n特に普段と変わりなくスタンディングワークをしていることに特別感すら感じなくなる。\r\n\r\nそういえばこの頃から電車で立っていることが苦ではなくなっていた。コロナ関係なく外出時はあまり人と接触したくなくて立ってることもまぁまぁ多めだったので疲れにくくなったのはありがたい。\r\n\r\n# 2ヶ月半頃\r\nこの頃からか、足の裏の特に踵や母指球辺りが硬くなってきて時折結構な痛みが出るようになった。当時はスリッパを履いてフローリングの上に立っていたわけだが、おそらく足の裏の出っぱっている部分に力がかかりやすくなっていてタコのようなものができる寸前になっていたのだと思う。\r\n\r\n1時間立って作業をして5分座って休み、また1時間立つみたいなインターバルをちゃんと入れるようになった。今までは疲れたら座って休憩みたいな感じだったけど疲れてなくても休憩を入れるようにした。\r\n\r\nまぁそれでも痛みはちょくちょくやってきたりするもので途方に暮れていた。\r\n\r\n<img width=\"591\" alt=\"スクリーンショット 2022-07-25 21 04 21\" src=\"https://user-images.githubusercontent.com/1421093/180773703-76e6eda7-e959-4104-8194-76c00a9de302.png\">\r\n\r\n# 現在\r\nついに足の裏の痛み問題を解決する術を発見した。地面をふにゃふにゃにするのである。\r\n\r\n今まではスリッパを履いていたとはいえ、足場は平面で硬かった。故に足の裏への負担が偏ってしまっていた。その足場に別の部屋で浸かっていたロングな座椅子を置きその上に立って作業をするようにしてみた。すると1日中立っていても全然痛くなくなったのだ....。\r\n\r\nさらにしゃがめばすぐ足元は座椅子なのですぐにリラックスタイムに入れる。立って良し、座って良しのロング座椅子便利すぎる。\r\n\r\nそれに合わせて足元に小さめのちゃぶ台を置いたり座椅子にクッションを追加したりしてようやく文句ないスタンディングワーク環境ができた。\r\n\r\n# 作業環境全体像\r\n現在の作業環境の全体像はこんな感じ(後ろの椅子はほぼ使っていない)\r\n![IMG_3244](https://user-images.githubusercontent.com/1421093/180774838-28eb541b-9d6b-4b9b-8998-92d54f935d7a.JPG)\r\n\r\nスタンディングデスクを購入すると結構高い(まともなやつだと5万くらいする)し合わなかったらマジで邪魔な机なので、家に最初からあったちゃぶ台とかテーブルを重ねたり魔改造してそれっぽい机にしている。\r\n\r\n普通こういう作業環境を公開するエンジニアのブログなどでは配線周りやキーボード、ディスプレイ、椅子などもこだわりぬいて綺麗な写真を載せているのだけども、自分はそういう細部へのデザインセンスがなく美的感覚が終わっているためこんな有様になっている。\r\n\r\nニトリとか激安通販とかで買った家に元々あったものばかりなので、新たに費やした費用は0円。もしスタンディングワークをやめるとしても臆することなく辞められるのが利点。\r\n\r\nそもそも論として痔を治せばこんながんばらんでも良いのでは？みたいな話もあるが、まだ手術するほどではない(と病院で言われた)のと手術後は出産後よりキツかったと知り合いの妊婦さんが言っていたのを聞いて恐れ慄いており、対処療法でギリギリまで頑張って悪化させないぞ!!!と決意したという経緯があります。。。\r\n\r\n(ジオン注射なら日帰りで痛みもそんなにないとか色々言われてはおりますが中々踏み出せないものです...)","bodyHTML":"<p>4月頃に痔が酷くなり座るのが嫌になってしまった。座りたくないのであれば立って仕事をするしかないが、スタンディングデスクをいきなり買っても使わなくなるんじゃないのか？という不安もありまずは手近でスタンディングデスクっぽいものをこしらえて試してみることにした。</p>\n<h1>最初の1~2週間</h1>\n<p>めちゃくちゃ足が痛くなる。そりゃ毎日8時間くらいほぼ立ち続けているから当然だ。足の裏、股関節、ふくらはぎなどへの疲れがすごい。風呂に浸かってマッサージをしてた。</p>\n<p>作業はというと割と普通にできる。腰が痛くなったり首が痛くなったりということはない。長時間座っていると腰が痛くなることがあったがそれがなくなったのは少し良かったかなと感じた程度。</p>\n<p>会議が無駄に長くなったりするとキレそうになる。さっさと要点まとめて終われボケ...と強く思うようになる。</p>\n<h1>1ヶ月ほど経過</h1>\n<p>立ち続けることがそれほど気にならなくなる。2時間くらいは平気で立ったままでいられる感じ。とはいえ一日の仕事が終わると座って仕事をしている時よりも全身の疲労感は多め。</p>\n<p>スタンディング力が高まったおかげでダラダラ続く会議への苛立ちが少し減った。さっさと終われとは思うけど...。</p>\n<p>夏が近づくとPCからの熱と部屋全体の熱気が顔の辺りを覆う。座っている時よりも汗をかきやすくなる。30℃を超えると流石に冷房がないとキツくなった。</p>\n<h1>2ヶ月経過</h1>\n<p>特に普段と変わりなくスタンディングワークをしていることに特別感すら感じなくなる。</p>\n<p>そういえばこの頃から電車で立っていることが苦ではなくなっていた。コロナ関係なく外出時はあまり人と接触したくなくて立ってることもまぁまぁ多めだったので疲れにくくなったのはありがたい。</p>\n<h1>2ヶ月半頃</h1>\n<p>この頃からか、足の裏の特に踵や母指球辺りが硬くなってきて時折結構な痛みが出るようになった。当時はスリッパを履いてフローリングの上に立っていたわけだが、おそらく足の裏の出っぱっている部分に力がかかりやすくなっていてタコのようなものができる寸前になっていたのだと思う。</p>\n<p>1時間立って作業をして5分座って休み、また1時間立つみたいなインターバルをちゃんと入れるようになった。今までは疲れたら座って休憩みたいな感じだったけど疲れてなくても休憩を入れるようにした。</p>\n<p>まぁそれでも痛みはちょくちょくやってきたりするもので途方に暮れていた。</p>\n<img width=\"591\" alt=\"スクリーンショット 2022-07-25 21 04 21\" src=\"https://user-images.githubusercontent.com/1421093/180773703-76e6eda7-e959-4104-8194-76c00a9de302.png\">\n<h1>現在</h1>\n<p>ついに足の裏の痛み問題を解決する術を発見した。地面をふにゃふにゃにするのである。</p>\n<p>今まではスリッパを履いていたとはいえ、足場は平面で硬かった。故に足の裏への負担が偏ってしまっていた。その足場に別の部屋で浸かっていたロングな座椅子を置きその上に立って作業をするようにしてみた。すると1日中立っていても全然痛くなくなったのだ....。</p>\n<p>さらにしゃがめばすぐ足元は座椅子なのですぐにリラックスタイムに入れる。立って良し、座って良しのロング座椅子便利すぎる。</p>\n<p>それに合わせて足元に小さめのちゃぶ台を置いたり座椅子にクッションを追加したりしてようやく文句ないスタンディングワーク環境ができた。</p>\n<h1>作業環境全体像</h1>\n<p>現在の作業環境の全体像はこんな感じ(後ろの椅子はほぼ使っていない)\r\n<img src=\"https://user-images.githubusercontent.com/1421093/180774838-28eb541b-9d6b-4b9b-8998-92d54f935d7a.JPG\" alt=\"IMG_3244\"></p>\n<p>スタンディングデスクを購入すると結構高い(まともなやつだと5万くらいする)し合わなかったらマジで邪魔な机なので、家に最初からあったちゃぶ台とかテーブルを重ねたり魔改造してそれっぽい机にしている。</p>\n<p>普通こういう作業環境を公開するエンジニアのブログなどでは配線周りやキーボード、ディスプレイ、椅子などもこだわりぬいて綺麗な写真を載せているのだけども、自分はそういう細部へのデザインセンスがなく美的感覚が終わっているためこんな有様になっている。</p>\n<p>ニトリとか激安通販とかで買った家に元々あったものばかりなので、新たに費やした費用は0円。もしスタンディングワークをやめるとしても臆することなく辞められるのが利点。</p>\n<p>そもそも論として痔を治せばこんながんばらんでも良いのでは？みたいな話もあるが、まだ手術するほどではない(と病院で言われた)のと手術後は出産後よりキツかったと知り合いの妊婦さんが言っていたのを聞いて恐れ慄いており、対処療法でギリギリまで頑張って悪化させないぞ!!!と決意したという経緯があります。。。</p>\n<p>(ジオン注射なら日帰りで痛みもそんなにないとか色々言われてはおりますが中々踏み出せないものです...)</p>","active_lock_reason":null,"assignee":null,"assignees":[],"author_association":"OWNER","closed_at":null,"comments":0,"comments_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/15/comments","created_at":"2022-07-25T12:30:43Z","events_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/15/events","html_url":"https://github.com/YuheiNakasaka/gialog-diary/issues/15","id":1316769318,"labels":[],"labels_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/15/labels{/name}","locked":false,"milestone":null,"node_id":"I_kwDOHaM3jc5OfE4m","number":15,"performed_via_github_app":null,"reactions":{"+1":0,"-1":0,"confused":0,"eyes":0,"heart":0,"hooray":0,"laugh":0,"rocket":0,"total_count":0,"url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/15/reactions"},"repository_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary","state":"open","state_reason":null,"timeline_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/15/timeline","title":"スタンディングワークを3ヶ月ほど続けた感想","updated_at":"2022-07-25T12:37:42Z","url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/15","user":{"avatar_url":"https://avatars.githubusercontent.com/u/1421093?v=4","events_url":"https://api.github.com/users/YuheiNakasaka/events{/privacy}","followers_url":"https://api.github.com/users/YuheiNakasaka/followers","following_url":"https://api.github.com/users/YuheiNakasaka/following{/other_user}","gists_url":"https://api.github.com/users/YuheiNakasaka/gists{/gist_id}","gravatar_id":"","html_url":"https://github.com/YuheiNakasaka","id":1421093,"login":"YuheiNakasaka","node_id":"MDQ6VXNlcjE0MjEwOTM=","organizations_url":"https://api.github.com/users/YuheiNakasaka/orgs","received_events_url":"https://api.github.com/users/YuheiNakasaka/received_events","repos_url":"https://api.github.com/users/YuheiNakasaka/repos","site_admin":false,"starred_url":"https://api.github.com/users/YuheiNakasaka/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/YuheiNakasaka/subscriptions","type":"User","url":"https://api.github.com/users/YuheiNakasaka"}},"issueComments":[],"pickupArticles":[{"body":"最近ほぼ毎日カレーを食ってるんだけど、今日はなんとなくの思い付きで火鍋をカレーにしたらめちゃくちゃ美味かったので忘れないようにレシピを書き記しておく。\r\n\r\n# 材料(2人分)\r\n## A) 火鍋\r\n- 豆板醤: 大さじ1\r\n- 花椒: 小さじ1\r\n- 八角: ちょっと\r\n- 鷹の爪: 1カケラ\r\n- 桃屋のしびれと辛さががっつり効いた麻辣香油(もしない場合は普通の食べるラー油+ニンニクをガッツリ): 1/3瓶\r\n- ウェイパー: 小さじ1\r\n- 水: 300cc前後\r\n\r\n## B) 具(何入れてもOK)\r\n- とり肉: 適当\r\n- にんじん: 適当\r\n- 玉ねぎ: 適当\r\n- じゃがいも: 適当\r\n\r\n## C) カレー\r\n- S&Bのカレーフレーク(固形でも多分OKだが安物はやめろ、最低限ジャワ): 大さじ2.5\r\n\r\n## 作り方\r\n### 鍋にA)火鍋を全部投入して中火にかけて煮立たせる(15分くらい)\r\nぐつぐつの方が火鍋感が出て良い。\r\n\r\n### B)具を火が通るまで炒める\r\n具は何を入れてもOK。にんじんが美味かったのでおすすめ。\r\n\r\n### B)を火鍋に投入する\r\n具が馴染むまで少しかき混ぜる\r\n\r\n### C)カレー を鍋に投入する\r\nカレーが全体に溶け切るまで混ぜる。もしとろみが足りなければルーを足す。とろみが多すぎたら水を足せ。\r\n\r\n## 写真\r\n![IMG_3277 2](https://user-images.githubusercontent.com/1421093/183254406-995b65fb-c721-40ba-9c85-1875b49997fb.JPG)\r\n![IMG_3278](https://user-images.githubusercontent.com/1421093/183254480-e3a1a331-8210-4d2d-97d1-9f3459398007.JPG)\r\n![IMG_3281](https://user-images.githubusercontent.com/1421093/183254425-1b6ba9f0-e277-4092-8a9e-a806b5e0d38e.JPG)\r\n\r\n## 感想\r\n基本はカレーだが遠くで中華の声が聞こえるような感じの味。花椒とニンニクとシビ辛が効いていて最高。火鍋自体で出汁みたいなものが効いているので全体として味の密度が異常。\r\n\r\n[桃屋のしびれと辛さががっつり効いた麻辣香油](https://www.momoya.co.jp/shop/products/detail/115)がかなり重要なのでお近くのスーパーで買ってくれ。カレールーは固定のやつでも全然OKだがPBの安物はやめた方が良い。火鍋に味が負けるので。最低でもジャワあたりで。\r\n\r\n全体的に結構辛めなのでお腹が弱い人は注意。\r\n\r\nおすすめ。","active_lock_reason":null,"assignee":null,"assignees":[],"author_association":"OWNER","closed_at":null,"comments":0,"comments_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/17/comments","created_at":"2022-08-06T15:06:37Z","events_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/17/events","html_url":"https://github.com/YuheiNakasaka/gialog-diary/issues/17","id":1330775595,"labels":[],"labels_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/17/labels{/name}","locked":false,"milestone":null,"node_id":"I_kwDOHaM3jc5PUgYr","number":17,"performed_via_github_app":null,"reactions":{"+1":0,"-1":0,"confused":0,"eyes":0,"heart":0,"hooray":0,"laugh":0,"rocket":0,"total_count":0,"url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/17/reactions"},"repository_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary","state":"open","state_reason":null,"timeline_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/17/timeline","title":"火鍋カレー","updated_at":"2022-08-06T15:10:30Z","url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/17","user":{"avatar_url":"https://avatars.githubusercontent.com/u/1421093?v=4","events_url":"https://api.github.com/users/YuheiNakasaka/events{/privacy}","followers_url":"https://api.github.com/users/YuheiNakasaka/followers","following_url":"https://api.github.com/users/YuheiNakasaka/following{/other_user}","gists_url":"https://api.github.com/users/YuheiNakasaka/gists{/gist_id}","gravatar_id":"","html_url":"https://github.com/YuheiNakasaka","id":1421093,"login":"YuheiNakasaka","node_id":"MDQ6VXNlcjE0MjEwOTM=","organizations_url":"https://api.github.com/users/YuheiNakasaka/orgs","received_events_url":"https://api.github.com/users/YuheiNakasaka/received_events","repos_url":"https://api.github.com/users/YuheiNakasaka/repos","site_admin":false,"starred_url":"https://api.github.com/users/YuheiNakasaka/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/YuheiNakasaka/subscriptions","type":"User","url":"https://api.github.com/users/YuheiNakasaka"}},{"body":"# 背景\r\n今までは出勤やらなんやらで外を出歩くことが多かったが、リモートワークでそれらが完全になくなった。宅食を使ってるから食事も家でなんとかなってしまうし2日間外に出ないなんてこともまぁまぁあるので良くない。\r\n\r\n厚生労働省の[身体活動・運動](https://www.mhlw.go.jp/www1/topics/kenko21_11/b2.html)によると生活習慣病やメンタルヘルスの予防には普段からの身体活動量の増加が重要らしい。が、一部周囲の先輩方によると40を超えていきなり運動を始めようとして膝や腰を痛めたりしてさらに不健康になってる人もいた。歳をとると健康のために運動しようと思ってさらに怪我をするという惨状が結構あるみたいで、これを避けるには早いうちから運動習慣をつけた方がいい。\r\n\r\n自分は元々十数年前は大学で陸上部に入っていたので基礎的な心得はある。厚生労働省の先の資料にもある通り完全に運動経験のない人は歩くことから始めるべきだが自分の場合はそういう背景もあるのでウォーキングよりもジョギングくらいから始めても大丈夫そうと判断し久々にランニングシューズに足を通してジョギングを始めた。\r\n\r\n# 準備\r\nまずはジョギングを始めるための準備で買ったものがいくつかあるので書いておく。\r\n\r\n## シャツ\r\n一つはシャツ。ジョギング用のTシャツはいくらあっても困らんのでユニクロで3,4枚まとめて買った。[ドライEX系のシャツ](https://www.uniqlo.com/jp/ja/products/E449017-000/00?colorDisplayCode=66&sizeDisplayCode=004)がサラサラしてて良さそうだった。まぁ普通に気にならない人ならすでに持っている自前のTシャツでも良いと思う。\r\n\r\n## 骨伝導イヤホン\r\n![IMG_3418_res](https://user-images.githubusercontent.com/1421093/190836175-4a561518-ec86-4f53-bfc9-fd8b2e23c35b.JPG)\r\n\r\nあとは骨伝導イヤホン。Shokzの[OpenMove](https://amzn.to/3qNIeTz)というのを購入した。実はこれはジョギング専用ということではなく元々気になってはいたんだけど、ちょうど楽天で30%OFFになっており良い機会なので購入した感じ。普通のイヤホンだと耳に入れないといけないが、汗をかくと気持ち悪い感じになるし走ってると抜け落ちそうになるので怖い。OpenMoveなら耳の上にかけるだけだし走ってもブレないので良い。加えて周囲の音がしっかり聞こえるので脇道からの急な自転車の飛び出しなどにも気付きやすいというのもある。\r\n\r\n骨伝導イヤホンの便利さについてはこの記事がわかりやすい。自分も似たような意見だ。\r\n- [骨伝導ヘッドセット着けっぱなしな生活を始めて1年が過ぎた](https://honeshabri.hatenablog.com/entry/aftershokz-air2)\r\n\r\n## スマホを入れるやつ\r\n本当は走るときは何も持たない方が楽だけど、出先での何かあった時に困るのでスマホは持ち歩きたい。普段はスマートウォッチとしてシャオミの[Mi Band](https://amzn.to/3DydBZQ)を使っているのだけど、これはスマホを携帯していないとワークアウト時の計測の精度が出ない。実測してみたがスマホを携帯している時と比べてだいぶ少なめに走行距離が計測される。たくさん走ったのに過小記録されるとモチベが落ちるので避けたい。\r\n\r\n世の中の人々はスマホをどうやって持ち歩いてるのか調べてみたところ、[腕につけるタイプ](https://amzn.to/3LnCFEB)と[腰につけるタイプ](https://amzn.to/3Dz0U12)の人が多かった。前者は「ランニング アームバンド」とかで検索すれば良いし、後者は「ランニング ウエストポーチ」で検索すれば良い。が自分はどちらも買わずにダイソーで[200円のウエストポーチ](https://jp.daisonet.com/collections/accessory0205/products/4549131941081)を購入し、それを襷掛けして使っている。少し揺れるのでだるい感じもあるがある程度使うと慣れるし、最初は安物でいいやと思ってこれを使ってる。\r\n\r\n## ランニングシューズ\r\n10年前に購入したランニングシューズがあったのでそれをそのまま利用。\r\n\r\n## ズボン\r\n陸上部時代の短パンがあったのでそれをそのまま使ってる。\r\n\r\n# 走る\r\n実際に準備が整ったので走り始めた。走る前には入念にストレッチをする。準備運動を怠ると体に支障を起こすので絶対にやる。\r\n\r\n走るコースは近所にちょうどよくランニングに適した歩道があるのでそこを適当に走ってみることにした。時間帯は朝に走るのは精神的にキツすぎるので仕事終わりの夜。涼しいし人も少ないので集中できる。寝る前すぎると交感神経が高まってしまい睡眠の質が落ちそうなので寝る2時間以上前には走ることにしてる。\r\n\r\n初日。走り始めて500mくらいで両脚が死んだ。痛いんじゃなくて400mとかを走って乳酸が溜まり激重になった感じが両脚全体を襲っていた。自分がこんなに走れなくなっていることに絶望しながら結局10分/km程度の激遅ペースで2kmくらい走って終わった。惨敗である。\r\n\r\nそれから1日おきくらいに走り続けて今は大体10回目くらいなんだけど今は8分/kmのペースで5kmくらいは走れるところまで改善した。足の筋肉が衰えまくっており初日の惨劇を引き起こしていたが心肺機能の方はそれほど衰えていなくて思ったよりも早く走れるようになってきている。\r\n\r\n当面は最低10分/kmで1時間くらいは走り続けられるようになることを目標にしている。別に大会に出る予定もないので楽なペースで一定時間走り続けられれば良い。\r\n\r\n# Podcast\r\nところで走りつづけている際にPodcastを聴くようにしてるのだけどこれがとても良い。大体どのPodcastも1~2時間くらいなので倍速で聴きながら走り終えるとちょうどいい感じでPodcastを一つ消化できる。走ることとPodcastを聴くことしかやれないので、PCやスマホやその他の雑事が集中を妨げることもない。集中してPodcastを聴ける。\r\n\r\n聞いているチャンネルは主に技術Podcast。今は下記のPodcastあたりを聴いているところ。\r\n\r\n- [rebuild.fm](https://rebuild.fm/)\r\n- [texta.fm](https://podcasts.apple.com/jp/podcast/texta-fm/id1530076592?l=en)\r\n- [misreading chat](https://misreading.chat/)\r\n\r\nPodcastにそんなに詳しくないので技術系のPodcastでおすすめのものがあったら教えてほしい所存。\r\n\r\n# 感想\r\n走ると単純に気持ちいい。元々走り慣れているのもあるが走ると不要なことを考えずに集中できるので脳が整理される。\r\n\r\n幸い足の関節が痛くなったりということは発生していない。おそらくBMI17.6くらいの低体重なので足への負荷が少ないのと普段から家で体幹トレーニングやスクワットなどをやっているから基礎筋力はついているのだと思う。走り方も昔取った杵柄で悪くないというのもありそう。\r\n\r\nただ足の裏の皮が軽く剥がれたりしててそれはちょっと痛い。豆みたいなもの。これはどうしようもなさそうだが走り続けていけば落ち着くと思う。\r\n\r\nあとジョギング後に食べるアイスが美味しすぎてやばい。これはいわゆるサウナ後に飲むオロポみたいなもので麻薬的な\"良さ\"がある。気をつけたい。\r\n\r\nこれからはより走りやすい季節になってくるし走るのが楽しくなっていきそう。","active_lock_reason":null,"assignee":null,"assignees":[],"author_association":"OWNER","closed_at":null,"comments":0,"comments_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/22/comments","created_at":"2022-09-17T02:05:50Z","events_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/22/events","html_url":"https://github.com/YuheiNakasaka/gialog-diary/issues/22","id":1376634817,"labels":[],"labels_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/22/labels{/name}","locked":false,"milestone":null,"node_id":"I_kwDOHaM3jc5SDcfB","number":22,"performed_via_github_app":null,"reactions":{"+1":0,"-1":0,"confused":0,"eyes":0,"heart":0,"hooray":0,"laugh":0,"rocket":0,"total_count":0,"url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/22/reactions"},"repository_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary","state":"open","state_reason":null,"timeline_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/22/timeline","title":"ジョギングを始めた","updated_at":"2022-09-17T02:05:50Z","url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/22","user":{"avatar_url":"https://avatars.githubusercontent.com/u/1421093?v=4","events_url":"https://api.github.com/users/YuheiNakasaka/events{/privacy}","followers_url":"https://api.github.com/users/YuheiNakasaka/followers","following_url":"https://api.github.com/users/YuheiNakasaka/following{/other_user}","gists_url":"https://api.github.com/users/YuheiNakasaka/gists{/gist_id}","gravatar_id":"","html_url":"https://github.com/YuheiNakasaka","id":1421093,"login":"YuheiNakasaka","node_id":"MDQ6VXNlcjE0MjEwOTM=","organizations_url":"https://api.github.com/users/YuheiNakasaka/orgs","received_events_url":"https://api.github.com/users/YuheiNakasaka/received_events","repos_url":"https://api.github.com/users/YuheiNakasaka/repos","site_admin":false,"starred_url":"https://api.github.com/users/YuheiNakasaka/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/YuheiNakasaka/subscriptions","type":"User","url":"https://api.github.com/users/YuheiNakasaka"}},{"body":"- 先日 OpenAI から[ChatGPT](https://chat.openai.com/chat)が Beta 公開された\r\n- ChatGPT ではどんな質問に対しても何かしらの回答を生成してくれるのだが、ソースコードに関しても中々の筋が良さそうな雰囲気のコード片を生成してくれるということで少し話題になっていた\r\n- こうしたプログラムを生成してくれる AI が発展していく中でどういう具合にプログラマの仕事が奪われていくのか興味がある\r\n- 特に以下では**web アプリやモバイルアプリなどのアプリケーションの開発において**という文脈で考えることにする\r\n- まず AI がプログラマの仕事を奪うまでにはいくつかの段階があると思う\r\n\r\n# コード支援レベル\r\n\r\n- 現状は[GitHub Copilot](https://github.com/features/copilot)のようなコーディング支援を行うレベルの AI はある程度実用レベルになっている\r\n  - 自分は Copilot が生成したコード片をプロダクションコードに含めるのは権利関係の問題もあり様子見している\r\n  - しかし Copilot を使っていないわけではなく、変数名や定型作業のサジェストや変数名の補完、コードの書き出しの補助などで利用している\r\n    - 例えば API のレスポンスで受け取る予定の JSON をペタッと貼るとそれにあった構造体とか型が丸ッと生成されたりする。スニペットとか静的なコードジェネレータでやってたような作業が良い感じにできるなど。\r\n  - 正直このようなコーディングの支援 AI だけではプログラマの仕事は AI に奪われないだろう。全然奪うというよりプログラマの手助けをするだけなので、これではまだまだプログラマがいないとアプリケーションは完成しない。\r\n\r\n# ChatGPT レベル\r\n\r\n- では ChatGPT のようにある程度まとまったサイズのコード片を生成してくれる AI が普及するとどうなるか\r\n  - Twitter ではさまざまなプログラマがコード片の生成を試みているがその内容を見るとそのまま使えるコードが半分、修正が必要なコードが 1〜2 割、完全に間違っているコードが 3〜4 割という感じだ\r\n  - 今のクオリティだと人が書いた方がまだ早い、もしくはプログラマによる手修正が結構必要そう。なのでプログラマがいないとまだアプリケーションは完成させられないだろう\r\n  - ただし修正すること前提で簡単なタスク用のまとまったコード片を生成してコーディングの時間短縮、といった使い方はできるかもしれない\r\n  - ある意味これもコーディング支援というレベルではある\r\n    - というか GitHub Copilot が GPT-3 を使ってるから実質同じといえば同じ\r\n\r\n# かなり高精度にコード生成できるレベル\r\n\r\n- ではそのまま使えるコード片を ほぼ 100%のクオリティで生成できる AI が登場するようになるとどうか\r\n  - ここまでくると AI に生成してほしいコードの内容を伝えてコード片を大量に生成してもらい、それをプログラマが組み合わせてアプリケーションという形にする流れでも現実的になってきそう\r\n    - 例えば「メールアドレス認証するコード書いて」「CRUD なフォームのモデルとコントローラとビューを書いて」等々でいくつかの動くコード片が生成される\r\n    - 人間はこれらをつなぎ合わせるだけでアプリケーションが完成するイメージ\r\n      - こうしたコード片をつなぎ合わせる仕事はアセンブリエンジニアとでも呼ばれるようになりそう\r\n  - **AI には体力が無いかつマシンさえあれば並列で大量に実行できるという人間には成し得ない強力な生産性がある**\r\n    - 金とマシンさえあれば 24 時間並列で一気にコード生成してもらえるはず\r\n  - よって例えば今までだと新規でアプリケーションを完成させるのに必要なプログラマが 1 人月必要だった案件でも AI にコーディング部分を大幅に代替してもらえるなら一部コード修正やレビューが必要にしても、数人日で完成させられるようなことはあるかもしれない\r\n  - この辺りから一部のプログラマの仕事は AI に奪われたと言われるようになるだろう\r\n- とはいえこれらは**新規開発の場合のみの話**だ\r\n- 仕事におけるプロダクションで稼働するシステム開発の難易度の高い部分は既存システムへ追加・修正などの改修を入れるところである\r\n- どんなに正確なコード片を生成できたり、あるいはアプリケーション全体のコードを生成できたとしてもそれは新規開発時のコーディングの代替であり、一度本番に乗ってしまったコードを運用していく際にはちょっとやそっとのコード片の生成レベルでは代替は難しそうだ\r\n\r\n# 既存コードのコンテキストも読み取ってコード生成できるレベル\r\n\r\n- では改修要望を書くと既存コードのコンテキストを加味した状態の追加修正が入ったコードが丸っと生成されるようになるとどうか\r\n  - これが出来るならアプリケーションのコーディング部分を担当するプログラマはほぼ不要になるかもしれない\r\n    - 生成されたコードを既存コードに適用するくらいで済むレベルを想定\r\n  - 残りの仕事に必要なのは下記くらいか\r\n    - 生成されたコードが安定して実行し続けられるように周辺環境を作るインフラエンジニア\r\n    - 生成されたコードに問題はないか確認するコードレビューエンジニア\r\n    - 生成されたコードが想定通りに動くか確認する QA エンジニア\r\n    - AI のコード生成や生成したコードを管理するプロンプトエンジニア/アセンブリエンジニア?\r\n      - AI の癖を知り既存コードとの相性の良いプロンプトを管理するご機嫌伺い役\r\n- ここまでくると新規開発だけでなく既存システムの改修に関するコーディングはある程度代替できるのでさらに従来のプログラマの仕事は減らせるかもしれない\r\n\r\n# さらに先の話\r\n\r\n- さらに AI がプログラマの仕事を奪うにはどんなことが必要か\r\n  - 生成されたアプリケーションを実行管理し安定運用してくれるインフラをなんとかしてもらう必要がありそう\r\n    - 生成されたアプリケーションと想定するサービス品質などを指定すると自動でインフラを展開して運用までやってくれるような仕組みはできるか？\r\n    - サーバー・ネットワーク・DB などの知識を隠蔽できるか？\r\n    - トラブルシューティングは可能か？\r\n      - この辺りができないとインフラ系のエンジニアの仕事はなくせなそう\r\n  - アプリケーションが正しく動いているか保証できる必要がありそう\r\n    - 想定外の挙動はないかコードレビューする\r\n    - 生成されたコードが想定通りの動作をしているかテストを書く\r\n    - 生成されたコードが想定通りの動作をしているか動作確認を行う\r\n    - 誤作動した時にストップできる\r\n      - この辺りを担保できないと品質保証系のエンジニアの仕事はなくせなそう\r\n- その他仕事に関してはどうか？\r\n  - 他の役職に関しては詳しくないので何もいえない\r\n    - というか自分の理解が浅いかもしれない職に関して簡単に奪われる職として挙げるのは憚られる\r\n\r\n# 雑多な話\r\n\r\n## 生成されるコード\r\n\r\n- AI が生成するコードは既存のプログラミング言語で書かれたコードである必要はあるのか\r\n  - コード片を人間が読まなくても良いレベルのクオリティなら既存の言語で吐き出す意味はないのでは\r\n    - トラブルシューティングしづらそう\r\n    - 過去の資産(GitHub 上のコードとか)を利用するなら既存のプログラミング言語の方が吐き出しやすそうではある\r\n- AI が吐き出しやすいようなコードを書くという価値観が新たにコーディング規約に追加されたりするかも\r\n- そもそも実行バイナリを吐き出すだけではダメか？\r\n  - 実行バイナリをブラックボックステストであとは QA エンジニアが検証するだけのお仕事で良いのでは\r\n    - とはいえトラブルシューティングしづらそうなのはキツいか\r\n\r\n## 開発体験\r\n\r\n- 開発体験(DX)の向上は必要か？\r\n  - AI が大方のコード生成をしてくれるなら開発体験の向上にコストをかける必要はあるのか\r\n  - プログラマがコードに手を入れなくても良いなら lint とか formatter とか型とかもいらないのでは\r\n- プログラミング言語やフレームワークの選定はどう変わるか？\r\n  - AI が一番精度良く吐き出せる言語が人気になるか\r\n  - ただまぁこれは今と変わらず要件次第になりそうではあるな\r\n\r\n## プログラマの仕事\r\n\r\n- プログラマの仕事はどう変わるか\r\n  - コードを書く比重が減り、コード片を生成する作業とシステムを組み上げる作業に比重が移りそう\r\n  - 要件を分解しシステムを構成するコード片を生成するためのプロンプト作成作業が大量に発生しそう\r\n  - より必要になる能力\r\n    - 業務知識への明るさ\r\n    - 調整能力(コミュニケーション力含め)\r\n    - 要件の分解とそのそれぞれへの解決策を文章化する能力\r\n    - **システム全体**の設計力\r\n  - 今も似たようなことをやってるはずだし必要な能力は変わらなそう\r\n  - コード化する部分がめちゃくちゃ爆速になるだけか？\r\n- フロントエンドエンジニアとかバックエンドエンジニアみたいな職域の境はなくなり、システム全体を設計して形にできる全部できる強いフルスタックな人が 1 人いればアプリケーション開発には十分というチーム構成になる可能性はあるかも\r\n- システムの安定性を向上させたり保証する仕事の重要性が増しそう\r\n  - 要は**AI の尻拭い**\r\n    - テストや QA を手厚くやって AI の生成したコードの穴を塞ぐ仕事\r\n    - コードレビューの仕事\r\n  - QA 用 AI が出てくる可能性もあるが、その AI の QA を誰がやるのか？とかその AI は業務依存の実装になりそうなので維持管理は内製になりそう\r\n    - AI より安いマンパワーを使った方がコスパ良いとかありそう\r\n- インフラ周りは構築はまだしも運用を完全に AI に代替させることで仕事を奪わせるのは難しそうに感じる、というか想像できない\r\n  - ただ自社で DC 持ってるとかよっぽど特殊な要件のアプリケーションでなければクラウドベンダが良い感じのソリューションを出してきそうではある。昔に比べたら今でも十分インフラは深い知識なくてもある程度構築運用できるし。\r\n- 責任を取ること\r\n  - AI のミスの尻拭いは人間がやる\r\n\r\n## 完全に未知の概念に対応できるか\r\n\r\n- 「イスカルテンダ王国のスルマオン暦のランフォイを求めるコード」みたいな未知の概念は AI に正しく対応できない(はず)\r\n- AI が知らないものは人間が頑張るしかない\r\n\r\n## AI の学習ソースはどうなるのか\r\n\r\n- 現状は GitHub やインターネット上のコードを学習してモデルを作ってると思うが、近い将来学習ソースが枯渇するという話がある\r\n- 将棋 AI は将棋 AI の生成した棋譜をさらに学習したりしているが、AI が生成したプログラミングのコードをさらに学習したりすれば解決するか？\r\n  - 将棋における[floodgate](http://wdoor.c.u-tokyo.ac.jp/shogi/floodgate.html)みたいな AI が作ったソースコードが実行されたり共有されたりするものが生まれるか？\r\n\r\n## 信頼性\r\n\r\n- AI が生成したコードをどこまで信頼できるか\r\n  - 例えばある手術に使われる機器のソフトウェアが一切人間の手が入っていない AI による自動生成コードで作られているとして、自分の娘がその機器で手術を受けると知ったら、今の AI のレベルなら 100%手術をやめさせると思う\r\n  - その信頼性を**担保するための仕事**(コードを人間が書くべきといっているわけではない)はしばらくは人間の仕事になりそう\r\n  - 特に人の営みと高度に接続する必要がある場面では避けられないように思う\r\n    - AI にはパーソナリティや家族のような守るべきものが(現時点では)ないという点がある種の弱点(利点)な気がする\r\n- AI は人との営みの中で何か重要なことを行うためには責任感が足りなすぎる\r\n  - 失敗しましたごめんな！で済まない場面への対応を整備する必要がありそう\r\n  - そうなると責任は開発(会社|者)が取るしかない。AI の尻拭いは人間がやる。\r\n- ある程度無責任でも良い場面には使えるが強く責任が伴う場面では、失敗した場合のケアや予防策を構築する必要がある\r\n\r\n## シンギュラリティ\r\n\r\n- AI が考え、AI が解決案を生み出し、また AI が問題を見つけ、AI が解決を試みるみたいなシンギュラリティ的な世界は一部の分野ではもうすぐあり得そう\r\n- 社会の中でも広く適用されるためには失敗の責任を自分で取れる、自分で尻拭いできる能力が AI に生まれたら世界は変わりそう。まだまだ SF っぽいだいぶ先の話な気もする。\r\n- プログラマはAIの失敗の尻拭いをするために謝罪の練習をしておくと良さそう(?)\r\n\r\n # [追記] コード生成ではなくシステム生成できるレベル\r\n\r\n- 昨夜もう少しちゃんと考えてみたが、そもそもコード生成というのをやめてシステム全体を生成して展開するところまで一気通貫でやってしまえるならどうか\r\n  - 例えば仕様書とシステム構成をアップロードしたらアプリケーションコードが生成されインフラが構築され一気にAWSか何かに展開される感じ\r\n    - 生成されたシステムをブラックボックスでテストして振る舞いなど問題なければOKみたいな。\r\n    - これで十分な案件はかなりあるのでは。\r\n  - これなら新規開発に関してはもうコーディングが完全にいらないしインフラ周りの仕事も消える\r\n  - 昨日書いた時はどのみち既存システムの改修とかは既存データをどうするかとか既存インフラとのつなぎ合わせとか調整の関係で大変じゃないかと思っていたが、そもそも全て改修時にスクラップ&ビルドすれば良いなと思った\r\n    - アプリケーションコードもインフラ側も全部都度作り直す\r\n    - そうなると既存データとどう整合性を保つかだけが問題になる\r\n      - であればここだけ人間が頑張れば良いのでは...\r\n      - というかここまでできるならデータに関してもAI側でやってくれそう\r\n  - もうこの段階まで来ると変更容易性だとか**保守性に関する概念すら全て過去の遺物**\r\n  - あとは品質管理だけどうするかだけど、これもテストと品質水準をまとめてAIに提出し検証してもらう感じで良いのかも。\r\n    - ブコメなどでも書かれていたが確かにここまでくるともう人間が把握できる規模ではないかもだし、どのみち機械に頼らないといけない部分も出てきそう。\r\n    - このへんも時間の問題なのかもしれないな...\r\n\r\n# [追記] システム開発がなくなる世界線\r\n- ここまで簡単にシステム開発を適用できるようになると、そもそも世の中的に必要なソフトウェアが全ての業界に行き渡りあらかた開発され切ってしまったという世界線もあるか\r\n- ある意味今でいうところの白物家電みたいな。\r\n- そうなるとシステム開発という業種自体かなり下火になりそう\r\n","active_lock_reason":null,"assignee":null,"assignees":[],"author_association":"OWNER","closed_at":null,"comments":0,"comments_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/26/comments","created_at":"2022-12-03T08:28:02Z","events_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/26/events","html_url":"https://github.com/YuheiNakasaka/gialog-diary/issues/26","id":1473845983,"labels":[],"labels_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/26/labels{/name}","locked":false,"milestone":null,"node_id":"I_kwDOHaM3jc5X2Rrf","number":26,"performed_via_github_app":null,"reactions":{"+1":0,"-1":0,"confused":0,"eyes":0,"heart":0,"hooray":0,"laugh":0,"rocket":0,"total_count":0,"url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/26/reactions"},"repository_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary","state":"open","state_reason":null,"timeline_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/26/timeline","title":"どのようにしてプログラマはAIに仕事を奪われていくかの妄想","updated_at":"2022-12-04T01:15:33Z","url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/26","user":{"avatar_url":"https://avatars.githubusercontent.com/u/1421093?v=4","events_url":"https://api.github.com/users/YuheiNakasaka/events{/privacy}","followers_url":"https://api.github.com/users/YuheiNakasaka/followers","following_url":"https://api.github.com/users/YuheiNakasaka/following{/other_user}","gists_url":"https://api.github.com/users/YuheiNakasaka/gists{/gist_id}","gravatar_id":"","html_url":"https://github.com/YuheiNakasaka","id":1421093,"login":"YuheiNakasaka","node_id":"MDQ6VXNlcjE0MjEwOTM=","organizations_url":"https://api.github.com/users/YuheiNakasaka/orgs","received_events_url":"https://api.github.com/users/YuheiNakasaka/received_events","repos_url":"https://api.github.com/users/YuheiNakasaka/repos","site_admin":false,"starred_url":"https://api.github.com/users/YuheiNakasaka/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/YuheiNakasaka/subscriptions","type":"User","url":"https://api.github.com/users/YuheiNakasaka"}}]},"__N_SSG":true}