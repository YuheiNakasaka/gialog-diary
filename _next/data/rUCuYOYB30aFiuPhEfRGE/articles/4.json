{"pageProps":{"issue":{"body":"![IMG_2991](https://user-images.githubusercontent.com/1421093/171147566-a974868a-5acc-4f79-84c3-ecfab6bda74f.JPG)\r\n\r\nここ2週間くらい毎晩カレーを食べ続けている。きっかけは同居人がレンジで米が炊ける鍋というものを持っており、その鍋を使うとカレーも作れると教えてくれたことだ。\r\n\r\n自分はフルリモートで仕事をしているから出来てると思うが、毎日の食事がほぼ一定である。朝は納豆・昼はnosh+0.7合の米・夜は野菜丼(冷凍野菜2,3種+卵+0.7合の米で作る親子丼みたいな味のやつ)という生活をもうかれこれ1年以上続けている(朝は納豆じゃなくBASEを食ってた時もあったがやめた)。もちろん外食に行くこともあるが土日の付き合いなどの特別な日だけだ。\r\n\r\nこういうある意味異常な食生活が許容できている人間なので2週間毎日カレーを食うことなど大したことないのだがそれでもいくつか気づいたことがあるので書き記しておこうと思う。\r\n\r\n# 基本レシピ\r\n![IMG_2993_2](https://user-images.githubusercontent.com/1421093/171151680-2d6be9c8-cd2e-4740-9209-9d42aaaa9c24.JPG)\r\n\r\nまずカレーの基本レシピだが下記。手抜きはしたいが栄養は最低限摂りたいという点から冷凍野菜をふんだんに取り入れた構成になっている。\r\n\r\n### 材料\r\n- カレールー: 1片\r\n- 野菜2種: 適当\r\n- オクラ: 適当\r\n- 水: 90~100cc\r\n\r\n鍋にオクラ以外を全て入れてレンジで3分~4分チンする。終わったら取り出してオクラを入れてよく混ぜれば出来上がり。そこに適当にご飯を入れてその鍋のまま食べる(洗い物を増やしたくない)。\r\n\r\nという感じ。大体所要時間は5分。\r\n\r\n1番重要なのは水の量。少なすぎるか？と思うくらいがちょうど良い。\r\n\r\n鍋はAmazonにあるやつだとこの[メトレフランセ](https://amzn.to/3N57Y7g)のやつが近いかも。\r\n\r\n野菜に関しては今まで夜は野菜丼というやつを食っており、そのため自宅の冷凍庫に冷凍野菜が常備されている。冷凍庫にはほうれん草・ブロッコリー・インゲン・ナスなどが1袋はある状態。なのでこの中から適当に2種類取って使う。\r\n\r\nオクラだけ必須にしてるのはオクラを入れて混ぜることで粘性が増しよりドロドロになるので好みのカレーっぽくなるから。単純にオクラが好きというのももちろんある。\r\n\r\n# カレールー\r\nカレールーに関してはこれはまだ実験中ではあるのだが、[業務用のジャワカレー](https://amzn.to/3M2NsTJ)が抜群に美味かった。これは近所のスーパーのPBのカレールーと比較してるのもあるけど、玉ねぎや肉が入ってない分オリジナルのルーの美味さがカレー全体の味に直結しているので違いが顕著だ。\r\n\r\nレトルトカレーも試してみたところそれなりに美味しいしささやかながらにんじんやじゃがいもや肉も入っているのでよりいつものカレーっぽくなる。弱点としては冷凍野菜を入れるとその野菜から出た水分のせいでやや水っぽくなるというのがある。あとは固形のカレールーから作る場合に比べて1食当たりの値段がPBのカレーでも60~70円くらい増える。まぁどちらも人によっては大したことないと思うのでこれはこれであり。\r\n\r\nただPBの固形カレーについては絶対やめた方が良い。あれは本当に味が微妙。スパイスも足りないし圧倒的にコクが足りない。にんじんや肉を入れてやっと食える味になるようなルーである。先のレシピで使うとしてもニンニクやみりん、あとは黒糖なんかを入れて調整すれば食える味にはなるがそういう調整は面倒だ。\r\n\r\nということで個人的には[業務用のジャワカレー](https://amzn.to/3M2NsTJ)を推したい。\r\n\r\n# 飲み物\r\nほうれん草とナスが好きでよく使うが、これらは調べてみるとシュウ酸を多めに含むため丸腰で食べ続けると結石ができやすくなってしまうらしい。というのを見たのでカレーを食べるときに牛乳を一緒に飲んでいる。シュウ酸はカルシウムを同時に摂取すると腸で吸収される前にカルシウムと結合して体内に吸収されなくなるらしい。\r\n\r\n子供の頃、尿管結石により救急車で運ばれていく父の姿が鮮明に脳裏に焼き付いており、ああはなりたくないという強い気持ちがある。\r\n\r\n# 体重\r\nカレーは比較的油が多く使われているので脂質を摂りすぎることになるのではないかという心配もあるが、具材を炒めたりしてない(油を敷いてない)し肉も入ってないので大した油分にはならなそうという判断をしてる。まぁこれは人によっては良くないと思うのでうまくやってほしい。自分はBMIが17台のかなりの痩せ型で太ることに関してはあんまり問題視してない。むしろ太ってくれ...という感じ。\r\n\r\n# 栄養バランス\r\n自分の場合は昼のnoshが日毎に別のメニューなので一応タンパク質やその他の野菜はそこでほどほどには摂っているつもり。[あすけん](https://www.asken.jp/)で1日の栄養バランスを計算すると50点~60点くらいで全体的に少なくはなるんだけど、あのアプリで満点取れるような食事にするには補助栄養食品を使ったり色々と無理しないといけないことはわかってるから気にしないようになった(余談だけどあすけんはマクドナルドのポテトが野菜扱いなので便利です)。\r\n\r\nというかあすけんで普段食ってる1日の飯を入れて計算すれば、60点取るのもそれなりに大変なのがわかるはず。無料でできるので試してみてほしい。\r\n\r\n# 値段\r\n業務用ジャワカレーで先の基本レシピで作った場合、米の分も含めて1食大体100円くらい。コスパは良い。\r\n\r\n# その他\r\n他にはトマト缶を使うとか卵を入れるとかアレンジしてみたけどやはりプレーンの業務用ジャワカレーが1番好きだった。栄養素的にはアレンジは良いと思うけどたまにで良いかな〜と思っている。\r\n\r\n一旦は安定したスコアを叩き出せる手抜き電子レンジカレーを作れるようになったのでしばらくは続けてみようと思う。\r\n\r\nそもそも毎日カレー食うような人間はいないと思うので誰得情報ではあるが参考にしてくれ...\r\n\r\nおわり","bodyHTML":"<p><img src=\"https://user-images.githubusercontent.com/1421093/171147566-a974868a-5acc-4f79-84c3-ecfab6bda74f.JPG\" alt=\"IMG_2991\"></p>\n<p>ここ2週間くらい毎晩カレーを食べ続けている。きっかけは同居人がレンジで米が炊ける鍋というものを持っており、その鍋を使うとカレーも作れると教えてくれたことだ。</p>\n<p>自分はフルリモートで仕事をしているから出来てると思うが、毎日の食事がほぼ一定である。朝は納豆・昼はnosh+0.7合の米・夜は野菜丼(冷凍野菜2,3種+卵+0.7合の米で作る親子丼みたいな味のやつ)という生活をもうかれこれ1年以上続けている(朝は納豆じゃなくBASEを食ってた時もあったがやめた)。もちろん外食に行くこともあるが土日の付き合いなどの特別な日だけだ。</p>\n<p>こういうある意味異常な食生活が許容できている人間なので2週間毎日カレーを食うことなど大したことないのだがそれでもいくつか気づいたことがあるので書き記しておこうと思う。</p>\n<h1>基本レシピ</h1>\n<p><img src=\"https://user-images.githubusercontent.com/1421093/171151680-2d6be9c8-cd2e-4740-9209-9d42aaaa9c24.JPG\" alt=\"IMG_2993_2\"></p>\n<p>まずカレーの基本レシピだが下記。手抜きはしたいが栄養は最低限摂りたいという点から冷凍野菜をふんだんに取り入れた構成になっている。</p>\n<h3>材料</h3>\n<ul>\n<li>カレールー: 1片</li>\n<li>野菜2種: 適当</li>\n<li>オクラ: 適当</li>\n<li>水: 90~100cc</li>\n</ul>\n<p>鍋にオクラ以外を全て入れてレンジで3分~4分チンする。終わったら取り出してオクラを入れてよく混ぜれば出来上がり。そこに適当にご飯を入れてその鍋のまま食べる(洗い物を増やしたくない)。</p>\n<p>という感じ。大体所要時間は5分。</p>\n<p>1番重要なのは水の量。少なすぎるか？と思うくらいがちょうど良い。</p>\n<p>鍋はAmazonにあるやつだとこの<a href=\"https://amzn.to/3N57Y7g\">メトレフランセ</a>のやつが近いかも。</p>\n<p>野菜に関しては今まで夜は野菜丼というやつを食っており、そのため自宅の冷凍庫に冷凍野菜が常備されている。冷凍庫にはほうれん草・ブロッコリー・インゲン・ナスなどが1袋はある状態。なのでこの中から適当に2種類取って使う。</p>\n<p>オクラだけ必須にしてるのはオクラを入れて混ぜることで粘性が増しよりドロドロになるので好みのカレーっぽくなるから。単純にオクラが好きというのももちろんある。</p>\n<h1>カレールー</h1>\n<p>カレールーに関してはこれはまだ実験中ではあるのだが、<a href=\"https://amzn.to/3M2NsTJ\">業務用のジャワカレー</a>が抜群に美味かった。これは近所のスーパーのPBのカレールーと比較してるのもあるけど、玉ねぎや肉が入ってない分オリジナルのルーの美味さがカレー全体の味に直結しているので違いが顕著だ。</p>\n<p>レトルトカレーも試してみたところそれなりに美味しいしささやかながらにんじんやじゃがいもや肉も入っているのでよりいつものカレーっぽくなる。弱点としては冷凍野菜を入れるとその野菜から出た水分のせいでやや水っぽくなるというのがある。あとは固形のカレールーから作る場合に比べて1食当たりの値段がPBのカレーでも60~70円くらい増える。まぁどちらも人によっては大したことないと思うのでこれはこれであり。</p>\n<p>ただPBの固形カレーについては絶対やめた方が良い。あれは本当に味が微妙。スパイスも足りないし圧倒的にコクが足りない。にんじんや肉を入れてやっと食える味になるようなルーである。先のレシピで使うとしてもニンニクやみりん、あとは黒糖なんかを入れて調整すれば食える味にはなるがそういう調整は面倒だ。</p>\n<p>ということで個人的には<a href=\"https://amzn.to/3M2NsTJ\">業務用のジャワカレー</a>を推したい。</p>\n<h1>飲み物</h1>\n<p>ほうれん草とナスが好きでよく使うが、これらは調べてみるとシュウ酸を多めに含むため丸腰で食べ続けると結石ができやすくなってしまうらしい。というのを見たのでカレーを食べるときに牛乳を一緒に飲んでいる。シュウ酸はカルシウムを同時に摂取すると腸で吸収される前にカルシウムと結合して体内に吸収されなくなるらしい。</p>\n<p>子供の頃、尿管結石により救急車で運ばれていく父の姿が鮮明に脳裏に焼き付いており、ああはなりたくないという強い気持ちがある。</p>\n<h1>体重</h1>\n<p>カレーは比較的油が多く使われているので脂質を摂りすぎることになるのではないかという心配もあるが、具材を炒めたりしてない(油を敷いてない)し肉も入ってないので大した油分にはならなそうという判断をしてる。まぁこれは人によっては良くないと思うのでうまくやってほしい。自分はBMIが17台のかなりの痩せ型で太ることに関してはあんまり問題視してない。むしろ太ってくれ...という感じ。</p>\n<h1>栄養バランス</h1>\n<p>自分の場合は昼のnoshが日毎に別のメニューなので一応タンパク質やその他の野菜はそこでほどほどには摂っているつもり。<a href=\"https://www.asken.jp/\">あすけん</a>で1日の栄養バランスを計算すると50点~60点くらいで全体的に少なくはなるんだけど、あのアプリで満点取れるような食事にするには補助栄養食品を使ったり色々と無理しないといけないことはわかってるから気にしないようになった(余談だけどあすけんはマクドナルドのポテトが野菜扱いなので便利です)。</p>\n<p>というかあすけんで普段食ってる1日の飯を入れて計算すれば、60点取るのもそれなりに大変なのがわかるはず。無料でできるので試してみてほしい。</p>\n<h1>値段</h1>\n<p>業務用ジャワカレーで先の基本レシピで作った場合、米の分も含めて1食大体100円くらい。コスパは良い。</p>\n<h1>その他</h1>\n<p>他にはトマト缶を使うとか卵を入れるとかアレンジしてみたけどやはりプレーンの業務用ジャワカレーが1番好きだった。栄養素的にはアレンジは良いと思うけどたまにで良いかな〜と思っている。</p>\n<p>一旦は安定したスコアを叩き出せる手抜き電子レンジカレーを作れるようになったのでしばらくは続けてみようと思う。</p>\n<p>そもそも毎日カレー食うような人間はいないと思うので誰得情報ではあるが参考にしてくれ...</p>\n<p>おわり</p>","active_lock_reason":null,"assignee":null,"assignees":[],"author_association":"OWNER","closed_at":null,"comments":0,"comments_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/4/comments","created_at":"2022-05-31T10:48:11Z","events_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/4/events","html_url":"https://github.com/YuheiNakasaka/gialog-diary/issues/4","id":1253684183,"labels":[],"labels_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/4/labels{/name}","locked":false,"milestone":null,"node_id":"I_kwDOHaM3jc5KubPX","number":4,"performed_via_github_app":null,"reactions":{"+1":0,"-1":0,"confused":0,"eyes":0,"heart":0,"hooray":0,"laugh":0,"rocket":0,"total_count":0,"url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/4/reactions"},"repository_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary","state":"open","state_reason":null,"timeline_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/4/timeline","title":"毎晩手抜き電子レンジカレーを食い続けている","updated_at":"2022-05-31T10:48:11Z","url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/4","user":{"avatar_url":"https://avatars.githubusercontent.com/u/1421093?v=4","events_url":"https://api.github.com/users/YuheiNakasaka/events{/privacy}","followers_url":"https://api.github.com/users/YuheiNakasaka/followers","following_url":"https://api.github.com/users/YuheiNakasaka/following{/other_user}","gists_url":"https://api.github.com/users/YuheiNakasaka/gists{/gist_id}","gravatar_id":"","html_url":"https://github.com/YuheiNakasaka","id":1421093,"login":"YuheiNakasaka","node_id":"MDQ6VXNlcjE0MjEwOTM=","organizations_url":"https://api.github.com/users/YuheiNakasaka/orgs","received_events_url":"https://api.github.com/users/YuheiNakasaka/received_events","repos_url":"https://api.github.com/users/YuheiNakasaka/repos","site_admin":false,"starred_url":"https://api.github.com/users/YuheiNakasaka/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/YuheiNakasaka/subscriptions","type":"User","url":"https://api.github.com/users/YuheiNakasaka"}},"issueComments":[],"pickupArticles":[{"body":"最近ほぼ毎日カレーを食ってるんだけど、今日はなんとなくの思い付きで火鍋をカレーにしたらめちゃくちゃ美味かったので忘れないようにレシピを書き記しておく。\r\n\r\n# 材料(2人分)\r\n## A) 火鍋\r\n- 豆板醤: 大さじ1\r\n- 花椒: 小さじ1\r\n- 八角: ちょっと\r\n- 鷹の爪: 1カケラ\r\n- 桃屋のしびれと辛さががっつり効いた麻辣香油(もしない場合は普通の食べるラー油+ニンニクをガッツリ): 1/3瓶\r\n- ウェイパー: 小さじ1\r\n- 水: 300cc前後\r\n\r\n## B) 具(何入れてもOK)\r\n- とり肉: 適当\r\n- にんじん: 適当\r\n- 玉ねぎ: 適当\r\n- じゃがいも: 適当\r\n\r\n## C) カレー\r\n- S&Bのカレーフレーク(固形でも多分OKだが安物はやめろ、最低限ジャワ): 大さじ2.5\r\n\r\n## 作り方\r\n### 鍋にA)火鍋を全部投入して中火にかけて煮立たせる(15分くらい)\r\nぐつぐつの方が火鍋感が出て良い。\r\n\r\n### B)具を火が通るまで炒める\r\n具は何を入れてもOK。にんじんが美味かったのでおすすめ。\r\n\r\n### B)を火鍋に投入する\r\n具が馴染むまで少しかき混ぜる\r\n\r\n### C)カレー を鍋に投入する\r\nカレーが全体に溶け切るまで混ぜる。もしとろみが足りなければルーを足す。とろみが多すぎたら水を足せ。\r\n\r\n## 写真\r\n![IMG_3277 2](https://user-images.githubusercontent.com/1421093/183254406-995b65fb-c721-40ba-9c85-1875b49997fb.JPG)\r\n![IMG_3278](https://user-images.githubusercontent.com/1421093/183254480-e3a1a331-8210-4d2d-97d1-9f3459398007.JPG)\r\n![IMG_3281](https://user-images.githubusercontent.com/1421093/183254425-1b6ba9f0-e277-4092-8a9e-a806b5e0d38e.JPG)\r\n\r\n## 感想\r\n基本はカレーだが遠くで中華の声が聞こえるような感じの味。花椒とニンニクとシビ辛が効いていて最高。火鍋自体で出汁みたいなものが効いているので全体として味の密度が異常。\r\n\r\n[桃屋のしびれと辛さががっつり効いた麻辣香油](https://www.momoya.co.jp/shop/products/detail/115)がかなり重要なのでお近くのスーパーで買ってくれ。カレールーは固定のやつでも全然OKだがPBの安物はやめた方が良い。火鍋に味が負けるので。最低でもジャワあたりで。\r\n\r\n全体的に結構辛めなのでお腹が弱い人は注意。\r\n\r\nおすすめ。","active_lock_reason":null,"assignee":null,"assignees":[],"author_association":"OWNER","closed_at":null,"comments":0,"comments_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/17/comments","created_at":"2022-08-06T15:06:37Z","events_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/17/events","html_url":"https://github.com/YuheiNakasaka/gialog-diary/issues/17","id":1330775595,"labels":[],"labels_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/17/labels{/name}","locked":false,"milestone":null,"node_id":"I_kwDOHaM3jc5PUgYr","number":17,"performed_via_github_app":null,"reactions":{"+1":0,"-1":0,"confused":0,"eyes":0,"heart":0,"hooray":0,"laugh":0,"rocket":0,"total_count":0,"url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/17/reactions"},"repository_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary","state":"open","state_reason":null,"timeline_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/17/timeline","title":"火鍋カレー","updated_at":"2022-08-06T15:10:30Z","url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/17","user":{"avatar_url":"https://avatars.githubusercontent.com/u/1421093?v=4","events_url":"https://api.github.com/users/YuheiNakasaka/events{/privacy}","followers_url":"https://api.github.com/users/YuheiNakasaka/followers","following_url":"https://api.github.com/users/YuheiNakasaka/following{/other_user}","gists_url":"https://api.github.com/users/YuheiNakasaka/gists{/gist_id}","gravatar_id":"","html_url":"https://github.com/YuheiNakasaka","id":1421093,"login":"YuheiNakasaka","node_id":"MDQ6VXNlcjE0MjEwOTM=","organizations_url":"https://api.github.com/users/YuheiNakasaka/orgs","received_events_url":"https://api.github.com/users/YuheiNakasaka/received_events","repos_url":"https://api.github.com/users/YuheiNakasaka/repos","site_admin":false,"starred_url":"https://api.github.com/users/YuheiNakasaka/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/YuheiNakasaka/subscriptions","type":"User","url":"https://api.github.com/users/YuheiNakasaka"}},{"body":"「作るのにどれくらいかかりますか？」と訊かれるとイラッとしてしまうことがある。そうなってしまう理由についてある程度自分の中で言語化しておきたい。\r\n\r\nそういう訊かれ方をする状況は大抵小規模なMTGで何かのプロジェクトの企画段階で起きる。OOなユーザー向けにXXという機能を追加しようかと思っているんですが、これ作るのにどれくらいかかりますか？といった具合だ。\r\n\r\nこういった質問が飛んでくる場合は決まって企画側で未確定の要素が多い。こちらとしては未確定の要素があると曖昧の見積りしかできないし、当然不測の事態を想定して多めにバッファを含めた回答になる。そうすると(おそらく)想定よりも長めの期間の見積りを返された企画者は開発にそんなに掛かるのか...と不満げな様子になってしまう。こちらは困らせたくて長めに見積もりを出しているわけではないのに開発にそんなに掛かるのか...という雰囲気を出されると開発者としての力量を疑われているように感じてしまってイラッとしてしまう。\r\n\r\nその他のパターンとしては企画の中に未知の開発が含まれている場合だ。例えばOOOというサードパーティのSDKを使ったBotシステムを作りたいんだけどもこれ作るのにどれくらいかかりますか？といった具合である。\r\n\r\nOOOというサードパーティのSDKに関して過去に利用した経験がなく触ってみないとわからないパターン。その際はこのSDKはまだ使ったことがないのではっきりとどのくらいとは言いづらいので少し調査してからの回答でもいいですか？と聞くものの、企画者は何やら急ぎで回答がほしいようだ。そこでざっくりとでいいのでどのくらいか分かりませんかね？と言ってくる。仕方ないので未確定の要素を多めに勘案して多めの見積もりをいう。というこの一連のやり取りでイラッとしてしまう。\r\n\r\n企画者の中にはエンジニアは技術に関して全てを把握しているかのように考えている人がいる。そんな人間がいるなら教えてほしい。自分の専門に関することならつゆ知れず、大抵ははっきりと決断しきれない技術的概念の方が多いので常に調査しながら開発している人の方が多いはずだ。\r\n\r\nこうやって少し言語化してみると、「こんな簡単そうな開発にもこんな時間がかかるのかよ」とか「OOに関する知識ないんだ」とか **お前スキル不足なのでは？と暗に突きつけられてしまうような物言い** にイラッとしてしまうのだなとわかった。\r\n\r\nもちろん相手にそんな気はないと思うしそれぞれの都合があると思うから仕方ないとは理解してるのでこういう企画者滅ぶべしとかは全然思ってないです。あくまでも自分の気持ちを噛み砕いて整理したいという意図で書いている。\r\n","active_lock_reason":null,"assignee":null,"assignees":[],"author_association":"OWNER","closed_at":null,"comments":0,"comments_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/7/comments","created_at":"2022-06-09T12:59:25Z","events_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/7/events","html_url":"https://github.com/YuheiNakasaka/gialog-diary/issues/7","id":1266095246,"labels":[],"labels_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/7/labels{/name}","locked":false,"milestone":null,"node_id":"I_kwDOHaM3jc5LdxSO","number":7,"performed_via_github_app":null,"reactions":{"+1":0,"-1":0,"confused":0,"eyes":0,"heart":0,"hooray":0,"laugh":0,"rocket":0,"total_count":0,"url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/7/reactions"},"repository_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary","state":"open","state_reason":null,"timeline_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/7/timeline","title":"「作るのにどれくらいかかりますか？」と訊かれるとイラッとしてしまう","updated_at":"2022-06-09T12:59:25Z","url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/7","user":{"avatar_url":"https://avatars.githubusercontent.com/u/1421093?v=4","events_url":"https://api.github.com/users/YuheiNakasaka/events{/privacy}","followers_url":"https://api.github.com/users/YuheiNakasaka/followers","following_url":"https://api.github.com/users/YuheiNakasaka/following{/other_user}","gists_url":"https://api.github.com/users/YuheiNakasaka/gists{/gist_id}","gravatar_id":"","html_url":"https://github.com/YuheiNakasaka","id":1421093,"login":"YuheiNakasaka","node_id":"MDQ6VXNlcjE0MjEwOTM=","organizations_url":"https://api.github.com/users/YuheiNakasaka/orgs","received_events_url":"https://api.github.com/users/YuheiNakasaka/received_events","repos_url":"https://api.github.com/users/YuheiNakasaka/repos","site_admin":false,"starred_url":"https://api.github.com/users/YuheiNakasaka/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/YuheiNakasaka/subscriptions","type":"User","url":"https://api.github.com/users/YuheiNakasaka"}},{"body":"- 先日 OpenAI から[ChatGPT](https://chat.openai.com/chat)が Beta 公開された\r\n- ChatGPT ではどんな質問に対しても何かしらの回答を生成してくれるのだが、ソースコードに関しても中々の筋が良さそうな雰囲気のコード片を生成してくれるということで少し話題になっていた\r\n- こうしたプログラムを生成してくれる AI が発展していく中でどういう具合にプログラマの仕事が奪われていくのか興味がある\r\n- 特に以下では**web アプリやモバイルアプリなどのアプリケーションの開発において**という文脈で考えることにする\r\n- まず AI がプログラマの仕事を奪うまでにはいくつかの段階があると思う\r\n\r\n# コード支援レベル\r\n\r\n- 現状は[GitHub Copilot](https://github.com/features/copilot)のようなコーディング支援を行うレベルの AI はある程度実用レベルになっている\r\n  - 自分は Copilot が生成したコード片をプロダクションコードに含めるのは権利関係の問題もあり様子見している\r\n  - しかし Copilot を使っていないわけではなく、変数名や定型作業のサジェストや変数名の補完、コードの書き出しの補助などで利用している\r\n    - 例えば API のレスポンスで受け取る予定の JSON をペタッと貼るとそれにあった構造体とか型が丸ッと生成されたりする。スニペットとか静的なコードジェネレータでやってたような作業が良い感じにできるなど。\r\n  - 正直このようなコーディングの支援 AI だけではプログラマの仕事は AI に奪われないだろう。全然奪うというよりプログラマの手助けをするだけなので、これではまだまだプログラマがいないとアプリケーションは完成しない。\r\n\r\n# ChatGPT レベル\r\n\r\n- では ChatGPT のようにある程度まとまったサイズのコード片を生成してくれる AI が普及するとどうなるか\r\n  - Twitter ではさまざまなプログラマがコード片の生成を試みているがその内容を見るとそのまま使えるコードが半分、修正が必要なコードが 1〜2 割、完全に間違っているコードが 3〜4 割という感じだ\r\n  - 今のクオリティだと人が書いた方がまだ早い、もしくはプログラマによる手修正が結構必要そう。なのでプログラマがいないとまだアプリケーションは完成させられないだろう\r\n  - ただし修正すること前提で簡単なタスク用のまとまったコード片を生成してコーディングの時間短縮、といった使い方はできるかもしれない\r\n  - ある意味これもコーディング支援というレベルではある\r\n    - というか GitHub Copilot が GPT-3 を使ってるから実質同じといえば同じ\r\n\r\n# かなり高精度にコード生成できるレベル\r\n\r\n- ではそのまま使えるコード片を ほぼ 100%のクオリティで生成できる AI が登場するようになるとどうか\r\n  - ここまでくると AI に生成してほしいコードの内容を伝えてコード片を大量に生成してもらい、それをプログラマが組み合わせてアプリケーションという形にする流れでも現実的になってきそう\r\n    - 例えば「メールアドレス認証するコード書いて」「CRUD なフォームのモデルとコントローラとビューを書いて」等々でいくつかの動くコード片が生成される\r\n    - 人間はこれらをつなぎ合わせるだけでアプリケーションが完成するイメージ\r\n      - こうしたコード片をつなぎ合わせる仕事はアセンブリエンジニアとでも呼ばれるようになりそう\r\n  - **AI には体力が無いかつマシンさえあれば並列で大量に実行できるという人間には成し得ない強力な生産性がある**\r\n    - 金とマシンさえあれば 24 時間並列で一気にコード生成してもらえるはず\r\n  - よって例えば今までだと新規でアプリケーションを完成させるのに必要なプログラマが 1 人月必要だった案件でも AI にコーディング部分を大幅に代替してもらえるなら一部コード修正やレビューが必要にしても、数人日で完成させられるようなことはあるかもしれない\r\n  - この辺りから一部のプログラマの仕事は AI に奪われたと言われるようになるだろう\r\n- とはいえこれらは**新規開発の場合のみの話**だ\r\n- 仕事におけるプロダクションで稼働するシステム開発の難易度の高い部分は既存システムへ追加・修正などの改修を入れるところである\r\n- どんなに正確なコード片を生成できたり、あるいはアプリケーション全体のコードを生成できたとしてもそれは新規開発時のコーディングの代替であり、一度本番に乗ってしまったコードを運用していく際にはちょっとやそっとのコード片の生成レベルでは代替は難しそうだ\r\n\r\n# 既存コードのコンテキストも読み取ってコード生成できるレベル\r\n\r\n- では改修要望を書くと既存コードのコンテキストを加味した状態の追加修正が入ったコードが丸っと生成されるようになるとどうか\r\n  - これが出来るならアプリケーションのコーディング部分を担当するプログラマはほぼ不要になるかもしれない\r\n    - 生成されたコードを既存コードに適用するくらいで済むレベルを想定\r\n  - 残りの仕事に必要なのは下記くらいか\r\n    - 生成されたコードが安定して実行し続けられるように周辺環境を作るインフラエンジニア\r\n    - 生成されたコードに問題はないか確認するコードレビューエンジニア\r\n    - 生成されたコードが想定通りに動くか確認する QA エンジニア\r\n    - AI のコード生成や生成したコードを管理するプロンプトエンジニア/アセンブリエンジニア?\r\n      - AI の癖を知り既存コードとの相性の良いプロンプトを管理するご機嫌伺い役\r\n- ここまでくると新規開発だけでなく既存システムの改修に関するコーディングはある程度代替できるのでさらに従来のプログラマの仕事は減らせるかもしれない\r\n\r\n# さらに先の話\r\n\r\n- さらに AI がプログラマの仕事を奪うにはどんなことが必要か\r\n  - 生成されたアプリケーションを実行管理し安定運用してくれるインフラをなんとかしてもらう必要がありそう\r\n    - 生成されたアプリケーションと想定するサービス品質などを指定すると自動でインフラを展開して運用までやってくれるような仕組みはできるか？\r\n    - サーバー・ネットワーク・DB などの知識を隠蔽できるか？\r\n    - トラブルシューティングは可能か？\r\n      - この辺りができないとインフラ系のエンジニアの仕事はなくせなそう\r\n  - アプリケーションが正しく動いているか保証できる必要がありそう\r\n    - 想定外の挙動はないかコードレビューする\r\n    - 生成されたコードが想定通りの動作をしているかテストを書く\r\n    - 生成されたコードが想定通りの動作をしているか動作確認を行う\r\n    - 誤作動した時にストップできる\r\n      - この辺りを担保できないと品質保証系のエンジニアの仕事はなくせなそう\r\n- その他仕事に関してはどうか？\r\n  - 他の役職に関しては詳しくないので何もいえない\r\n    - というか自分の理解が浅いかもしれない職に関して簡単に奪われる職として挙げるのは憚られる\r\n\r\n# 雑多な話\r\n\r\n## 生成されるコード\r\n\r\n- AI が生成するコードは既存のプログラミング言語で書かれたコードである必要はあるのか\r\n  - コード片を人間が読まなくても良いレベルのクオリティなら既存の言語で吐き出す意味はないのでは\r\n    - トラブルシューティングしづらそう\r\n    - 過去の資産(GitHub 上のコードとか)を利用するなら既存のプログラミング言語の方が吐き出しやすそうではある\r\n- AI が吐き出しやすいようなコードを書くという価値観が新たにコーディング規約に追加されたりするかも\r\n- そもそも実行バイナリを吐き出すだけではダメか？\r\n  - 実行バイナリをブラックボックステストであとは QA エンジニアが検証するだけのお仕事で良いのでは\r\n    - とはいえトラブルシューティングしづらそうなのはキツいか\r\n\r\n## 開発体験\r\n\r\n- 開発体験(DX)の向上は必要か？\r\n  - AI が大方のコード生成をしてくれるなら開発体験の向上にコストをかける必要はあるのか\r\n  - プログラマがコードに手を入れなくても良いなら lint とか formatter とか型とかもいらないのでは\r\n- プログラミング言語やフレームワークの選定はどう変わるか？\r\n  - AI が一番精度良く吐き出せる言語が人気になるか\r\n  - ただまぁこれは今と変わらず要件次第になりそうではあるな\r\n\r\n## プログラマの仕事\r\n\r\n- プログラマの仕事はどう変わるか\r\n  - コードを書く比重が減り、コード片を生成する作業とシステムを組み上げる作業に比重が移りそう\r\n  - 要件を分解しシステムを構成するコード片を生成するためのプロンプト作成作業が大量に発生しそう\r\n  - より必要になる能力\r\n    - 業務知識への明るさ\r\n    - 調整能力(コミュニケーション力含め)\r\n    - 要件の分解とそのそれぞれへの解決策を文章化する能力\r\n    - **システム全体**の設計力\r\n  - 今も似たようなことをやってるはずだし必要な能力は変わらなそう\r\n  - コード化する部分がめちゃくちゃ爆速になるだけか？\r\n- フロントエンドエンジニアとかバックエンドエンジニアみたいな職域の境はなくなり、システム全体を設計して形にできる全部できる強いフルスタックな人が 1 人いればアプリケーション開発には十分というチーム構成になる可能性はあるかも\r\n- システムの安定性を向上させたり保証する仕事の重要性が増しそう\r\n  - 要は**AI の尻拭い**\r\n    - テストや QA を手厚くやって AI の生成したコードの穴を塞ぐ仕事\r\n    - コードレビューの仕事\r\n  - QA 用 AI が出てくる可能性もあるが、その AI の QA を誰がやるのか？とかその AI は業務依存の実装になりそうなので維持管理は内製になりそう\r\n    - AI より安いマンパワーを使った方がコスパ良いとかありそう\r\n- インフラ周りは構築はまだしも運用を完全に AI に代替させることで仕事を奪わせるのは難しそうに感じる、というか想像できない\r\n  - ただ自社で DC 持ってるとかよっぽど特殊な要件のアプリケーションでなければクラウドベンダが良い感じのソリューションを出してきそうではある。昔に比べたら今でも十分インフラは深い知識なくてもある程度構築運用できるし。\r\n- 責任を取ること\r\n  - AI のミスの尻拭いは人間がやる\r\n\r\n## 完全に未知の概念に対応できるか\r\n\r\n- 「イスカルテンダ王国のスルマオン暦のランフォイを求めるコード」みたいな未知の概念は AI に正しく対応できない(はず)\r\n- AI が知らないものは人間が頑張るしかない\r\n\r\n## AI の学習ソースはどうなるのか\r\n\r\n- 現状は GitHub やインターネット上のコードを学習してモデルを作ってると思うが、近い将来学習ソースが枯渇するという話がある\r\n- 将棋 AI は将棋 AI の生成した棋譜をさらに学習したりしているが、AI が生成したプログラミングのコードをさらに学習したりすれば解決するか？\r\n  - 将棋における[floodgate](http://wdoor.c.u-tokyo.ac.jp/shogi/floodgate.html)みたいな AI が作ったソースコードが実行されたり共有されたりするものが生まれるか？\r\n\r\n## 信頼性\r\n\r\n- AI が生成したコードをどこまで信頼できるか\r\n  - 例えばある手術に使われる機器のソフトウェアが一切人間の手が入っていない AI による自動生成コードで作られているとして、自分の娘がその機器で手術を受けると知ったら、今の AI のレベルなら 100%手術をやめさせると思う\r\n  - その信頼性を**担保するための仕事**(コードを人間が書くべきといっているわけではない)はしばらくは人間の仕事になりそう\r\n  - 特に人の営みと高度に接続する必要がある場面では避けられないように思う\r\n    - AI にはパーソナリティや家族のような守るべきものが(現時点では)ないという点がある種の弱点(利点)な気がする\r\n- AI は人との営みの中で何か重要なことを行うためには責任感が足りなすぎる\r\n  - 失敗しましたごめんな！で済まない場面への対応を整備する必要がありそう\r\n  - そうなると責任は開発(会社|者)が取るしかない。AI の尻拭いは人間がやる。\r\n- ある程度無責任でも良い場面には使えるが強く責任が伴う場面では、失敗した場合のケアや予防策を構築する必要がある\r\n\r\n## シンギュラリティ\r\n\r\n- AI が考え、AI が解決案を生み出し、また AI が問題を見つけ、AI が解決を試みるみたいなシンギュラリティ的な世界は一部の分野ではもうすぐあり得そう\r\n- 社会の中でも広く適用されるためには失敗の責任を自分で取れる、自分で尻拭いできる能力が AI に生まれたら世界は変わりそう。まだまだ SF っぽいだいぶ先の話な気もする。\r\n- プログラマはAIの失敗の尻拭いをするために謝罪の練習をしておくと良さそう(?)\r\n\r\n # [追記] コード生成ではなくシステム生成できるレベル\r\n\r\n- 昨夜もう少しちゃんと考えてみたが、そもそもコード生成というのをやめてシステム全体を生成して展開するところまで一気通貫でやってしまえるならどうか\r\n  - 例えば仕様書とシステム構成をアップロードしたらアプリケーションコードが生成されインフラが構築され一気にAWSか何かに展開される感じ\r\n    - 生成されたシステムをブラックボックスでテストして振る舞いなど問題なければOKみたいな。\r\n    - これで十分な案件はかなりあるのでは。\r\n  - これなら新規開発に関してはもうコーディングが完全にいらないしインフラ周りの仕事も消える\r\n  - 昨日書いた時はどのみち既存システムの改修とかは既存データをどうするかとか既存インフラとのつなぎ合わせとか調整の関係で大変じゃないかと思っていたが、そもそも全て改修時にスクラップ&ビルドすれば良いなと思った\r\n    - アプリケーションコードもインフラ側も全部都度作り直す\r\n    - そうなると既存データとどう整合性を保つかだけが問題になる\r\n      - であればここだけ人間が頑張れば良いのでは...\r\n      - というかここまでできるならデータに関してもAI側でやってくれそう\r\n  - もうこの段階まで来ると変更容易性だとか**保守性に関する概念すら全て過去の遺物**\r\n  - あとは品質管理だけどうするかだけど、これもテストと品質水準をまとめてAIに提出し検証してもらう感じで良いのかも。\r\n    - ブコメなどでも書かれていたが確かにここまでくるともう人間が把握できる規模ではないかもだし、どのみち機械に頼らないといけない部分も出てきそう。\r\n    - このへんも時間の問題なのかもしれないな...\r\n\r\n# [追記] システム開発がなくなる世界線\r\n- ここまで簡単にシステム開発を適用できるようになると、そもそも世の中的に必要なソフトウェアが全ての業界に行き渡りあらかた開発され切ってしまったという世界線もあるか\r\n- ある意味今でいうところの白物家電みたいな。\r\n- そうなるとシステム開発という業種自体かなり下火になりそう\r\n","active_lock_reason":null,"assignee":null,"assignees":[],"author_association":"OWNER","closed_at":null,"comments":0,"comments_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/26/comments","created_at":"2022-12-03T08:28:02Z","events_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/26/events","html_url":"https://github.com/YuheiNakasaka/gialog-diary/issues/26","id":1473845983,"labels":[],"labels_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/26/labels{/name}","locked":false,"milestone":null,"node_id":"I_kwDOHaM3jc5X2Rrf","number":26,"performed_via_github_app":null,"reactions":{"+1":0,"-1":0,"confused":0,"eyes":0,"heart":0,"hooray":0,"laugh":0,"rocket":0,"total_count":0,"url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/26/reactions"},"repository_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary","state":"open","state_reason":null,"timeline_url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/26/timeline","title":"どのようにしてプログラマはAIに仕事を奪われていくかの妄想","updated_at":"2022-12-04T01:15:33Z","url":"https://api.github.com/repos/YuheiNakasaka/gialog-diary/issues/26","user":{"avatar_url":"https://avatars.githubusercontent.com/u/1421093?v=4","events_url":"https://api.github.com/users/YuheiNakasaka/events{/privacy}","followers_url":"https://api.github.com/users/YuheiNakasaka/followers","following_url":"https://api.github.com/users/YuheiNakasaka/following{/other_user}","gists_url":"https://api.github.com/users/YuheiNakasaka/gists{/gist_id}","gravatar_id":"","html_url":"https://github.com/YuheiNakasaka","id":1421093,"login":"YuheiNakasaka","node_id":"MDQ6VXNlcjE0MjEwOTM=","organizations_url":"https://api.github.com/users/YuheiNakasaka/orgs","received_events_url":"https://api.github.com/users/YuheiNakasaka/received_events","repos_url":"https://api.github.com/users/YuheiNakasaka/repos","site_admin":false,"starred_url":"https://api.github.com/users/YuheiNakasaka/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/YuheiNakasaka/subscriptions","type":"User","url":"https://api.github.com/users/YuheiNakasaka"}}]},"__N_SSG":true}